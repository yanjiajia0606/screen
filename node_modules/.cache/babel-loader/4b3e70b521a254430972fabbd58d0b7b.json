{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DeferredPromise","CancellationTokenSource","once","Disposable","DisposableStore","toDisposable","IInstantiationService","DefaultQuickAccessFilterValue","Extensions","IQuickInputService","ItemActivation","Registry","QuickAccessController","quickInputService","instantiationService","registry","as","Quickaccess","mapProviderToDescriptor","Map","lastAcceptedPickerValues","visibleQuickAccess","undefined","value","options","doShowOrPick","pick","_a","getOrInstantiateProvider","provider","descriptor","visibleDescriptor","prefix","preserveValue","picker","adjustValueSelection","newValue","newValueCandidateWithoutPrefix","substr","defaultFilterValue","LAST","get","disposables","add","createQuickPick","placeholder","quickNavigate","quickNavigateConfiguration","hideInput","itemActivation","SECOND","contextKey","filterValue","substring","ariaLabel","pickPromise","onWillAccept","e","veto","hide","registerPickerListeners","cts","provide","token","onDidHide","selectedItems","cancel","dispose","complete","slice","show","p","valueSelection","onDidChangeValue","providerForValue","onDidAccept","set","providerDescriptor","getQuickAccessProvider","createInstance","ctor"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { once } from '../../../base/common/functional.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet QuickAccessController = class QuickAccessController extends Disposable {\n    constructor(quickInputService, instantiationService) {\n        super();\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n        this.mapProviderToDescriptor = new Map();\n        this.lastAcceptedPickerValues = new Map();\n        this.visibleQuickAccess = undefined;\n    }\n    show(value = '', options) {\n        this.doShowOrPick(value, false, options);\n    }\n    doShowOrPick(value, pick, options) {\n        var _a;\n        // Find provider for the value to show\n        const [provider, descriptor] = this.getOrInstantiateProvider(value);\n        // Return early if quick access is already showing on that same prefix\n        const visibleQuickAccess = this.visibleQuickAccess;\n        const visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n            // Apply value only if it is more specific than the prefix\n            // from the provider and we are not instructed to preserve\n            if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n                visibleQuickAccess.picker.value = value;\n            }\n            // Always adjust selection\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n            return;\n        }\n        // Rewrite the filter value based on certain rules unless disabled\n        if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n            let newValue = undefined;\n            // If we have a visible provider with a value, take it's filter value but\n            // rewrite to new provider prefix in case they differ\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n                if (newValueCandidateWithoutPrefix) {\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n                }\n            }\n            // Otherwise, take a default value as instructed\n            if (!newValue) {\n                const defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\n                }\n                else if (typeof defaultFilterValue === 'string') {\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\n                }\n            }\n            if (typeof newValue === 'string') {\n                value = newValue;\n            }\n        }\n        // Create a picker for the provider to use with the initial value\n        // and adjust the filtering to exclude the prefix from filtering\n        const disposables = new DisposableStore();\n        const picker = disposables.add(this.quickInputService.createQuickPick());\n        picker.value = value;\n        this.adjustValueSelection(picker, descriptor, options);\n        picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n        if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\n            picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND /* quick nav is always second */;\n        }\n        picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\n        if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\n            picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        }\n        // Pick mode: setup a promise that can be resolved\n        // with the selected items and prevent execution\n        let pickPromise = undefined;\n        if (pick) {\n            pickPromise = new DeferredPromise();\n            disposables.add(once(picker.onWillAccept)(e => {\n                e.veto();\n                picker.hide();\n            }));\n        }\n        // Register listeners\n        disposables.add(this.registerPickerListeners(picker, provider, descriptor, value));\n        // Ask provider to fill the picker as needed if we have one\n        // and pass over a cancellation token that will indicate when\n        // the picker is hiding without a pick being made.\n        const cts = disposables.add(new CancellationTokenSource());\n        if (provider) {\n            disposables.add(provider.provide(picker, cts.token));\n        }\n        // Finally, trigger disposal and cancellation when the picker\n        // hides depending on items selected or not.\n        once(picker.onDidHide)(() => {\n            if (picker.selectedItems.length === 0) {\n                cts.cancel();\n            }\n            // Start to dispose once picker hides\n            disposables.dispose();\n            // Resolve pick promise with selected items\n            pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.complete(picker.selectedItems.slice(0));\n        });\n        // Finally, show the picker. This is important because a provider\n        // may not call this and then our disposables would leak that rely\n        // on the onDidHide event.\n        picker.show();\n        // Pick mode: return with promise\n        if (pick) {\n            return pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.p;\n        }\n    }\n    adjustValueSelection(picker, descriptor, options) {\n        var _a;\n        let valueSelection;\n        // Preserve: just always put the cursor at the end\n        if (options === null || options === void 0 ? void 0 : options.preserveValue) {\n            valueSelection = [picker.value.length, picker.value.length];\n        }\n        // Otherwise: select the value up until the prefix\n        else {\n            valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\n        }\n        picker.valueSelection = valueSelection;\n    }\n    registerPickerListeners(picker, provider, descriptor, value) {\n        const disposables = new DisposableStore();\n        // Remember as last visible picker and clean up once picker get's disposed\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n        disposables.add(toDisposable(() => {\n            if (visibleQuickAccess === this.visibleQuickAccess) {\n                this.visibleQuickAccess = undefined;\n            }\n        }));\n        // Whenever the value changes, check if the provider has\n        // changed and if so - re-create the picker from the beginning\n        disposables.add(picker.onDidChangeValue(value => {\n            const [providerForValue] = this.getOrInstantiateProvider(value);\n            if (providerForValue !== provider) {\n                this.show(value, { preserveValue: true } /* do not rewrite value from user typing! */);\n            }\n            else {\n                visibleQuickAccess.value = value; // remember the value in our visible one\n            }\n        }));\n        // Remember picker input for future use when accepting\n        if (descriptor) {\n            disposables.add(picker.onDidAccept(() => {\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\n            }));\n        }\n        return disposables;\n    }\n    getOrInstantiateProvider(value) {\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\n        if (!providerDescriptor) {\n            return [undefined, undefined];\n        }\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\n        if (!provider) {\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\n        }\n        return [provider, providerDescriptor];\n    }\n};\nQuickAccessController = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IInstantiationService)\n], QuickAccessController);\nexport { QuickAccessController };\n"],"mappings":"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"}]}