{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/config/editorOptions.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/config/editorOptions.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["nls","platform","USUAL_WORD_SEPARATORS","arrays","objects","EDITOR_MODEL_DEFAULTS","MINIMAP_GUTTER_WIDTH","ConfigurationChangedEvent","values","_values","id","ComputeOptionsMemory","stableMinimapLayoutInput","stableFitMaxMinimapScale","stableFitRemainingWidth","BaseEditorOption","name","defaultValue","schema","value","update","applyUpdate","env","options","ApplyUpdateResult","newValue","didChange","Array","isArray","arrayEquals","equals","key","hasOwnProperty","result","ComputedEditorOption","undefined","input","SimpleEditorOption","boolean","Boolean","EditorBooleanOption","type","default","clampedInt","minimum","maximum","r","parseInt","isNaN","Math","max","min","EditorIntOption","EditorFloatOption","validationFn","float","n","parseFloat","EditorStringOption","string","stringSet","allowedValues","indexOf","EditorStringEnumOption","enum","_allowedValues","EditorEnumOption","defaultStringValue","convert","_convert","_autoIndentFromString","autoIndent","EditorAccessibilitySupport","enumDescriptions","localize","description","accessibilitySupport","EditorComments","defaults","insertSpace","ignoreEmptyLines","_input","_cursorBlinkingStyleFromString","cursorBlinkingStyle","TextEditorCursorStyle","_cursorStyleFromString","cursorStyle","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","EditorClassName","_","classNames","get","push","extraEditorClassName","join","EditorEmptySelectionClipboard","emptySelectionClipboard","EditorFind","cursorMoveOnType","seedSearchStringFromSelection","autoFindInSelection","globalFindClipboard","addExtraSpaceOnTop","loop","included","isMacintosh","EditorFontLigatures","OFF","anyOf","ON","EditorFontInfo","fontInfo","EditorFontSize","EDITOR_FONT_DEFAULTS","fontSize","clamp","EditorFontWeight","fontWeight","MINIMUM_VALUE","MAXIMUM_VALUE","errorMessage","pattern","SUGGESTION_VALUES","String","EditorGoToLocation","multiple","multipleDefinitions","multipleTypeDefinitions","multipleDeclarations","multipleImplementations","multipleReferences","alternativeDefinitionCommand","alternativeTypeDefinitionCommand","alternativeDeclarationCommand","alternativeImplementationCommand","alternativeReferenceCommand","jsonSubset","alternativeCommandOptions","deprecationMessage","Object","assign","_a","_b","_c","_d","_e","EditorHover","enabled","delay","sticky","above","EditorLayoutInfoComputer","computeLayout","memory","outerWidth","outerHeight","isDominatedByLongLines","lineHeight","viewLineCount","lineNumbersDigitCount","typicalHalfwidthCharacterWidth","maxDigitWidth","pixelRatio","typicalViewportLineCount","height","extraLinesBeyondLastLine","scrollBeyondLastLine","desiredRatio","minimapLineCount","floor","minimap","renderMinimap","minimapLeft","minimapWidth","minimapHeightIsEditorHeight","minimapIsSampling","minimapScale","minimapLineHeight","minimapCanvasInnerWidth","minimapCanvasInnerHeight","minimapCanvasOuterWidth","minimapCanvasOuterHeight","couldUseMemory","side","size","showSlider","renderCharacters","maxColumn","scale","verticalScrollbarWidth","isViewportWrapping","minimapRenderCharacters","round","minimapMaxColumn","minimapSize","minimapSide","remainingWidth","baseCharHeight","minimapCharWidth","minimapWidthMultiplier","computeContainedMinimapLineCount","ratio","fitBecomesFill","maxMinimapScale","effectiveMinimapHeight","ceil","configuredMinimapScale","minimapMaxWidth","wordWrapOverride2","wordWrapOverride1","wordWrap","wordWrapColumn","showGlyphMargin","showLineNumbers","renderType","lineNumbersMinChars","scrollbar","verticalScrollbarSize","verticalScrollbarHasArrows","verticalHasArrows","scrollbarArrowSize","arrowSize","horizontalScrollbarHeight","horizontalScrollbarSize","rawLineDecorationsWidth","folding","showFoldingDecoration","lineDecorationsWidth","test","substr","length","lineNumbersWidth","digitCount","glyphMarginWidth","glyphMarginLeft","lineNumbersLeft","decorationsLeft","contentLeft","isWordWrapMinified","wrappingColumn","minimapLayout","_computeMinimapLayout","contentWidth","viewportColumn","verticalArrowSize","width","decorationsWidth","overviewRuler","top","right","EditorLightbulb","EditorExperimental","stickyScroll","EditorInlayHints","fontFamily","padding","markdownEnumDescriptions","markdownDescription","EditorLineHeight","x","EditorMinimap","autohide","_multiCursorModifierFromString","multiCursorModifier","EditorPadding","bottom","EditorParameterHints","cycle","EditorPixelRatio","EditorQuickSuggestions","other","comments","strings","types","additionalProperties","properties","validatedOther","validatedComments","validatedStrings","EditorRenderLineNumbersOption","renderFn","lineNumbers","filterValidationDecorations","renderValidationDecorations","EditorRulers","columnSchema","items","column","color","format","rulers","_element","element","sort","a","b","_scrollbarVisibilityFromString","visibility","EditorScrollbar","vertical","horizontal","useShadows","horizontalHasArrows","horizontalSliderSize","verticalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","scrollByPage","inUntrustedWorkspace","unicodeHighlightConfigKeys","allowedCharacters","invisibleCharacters","nonBasicASCII","ambiguousCharacters","includeComments","includeStrings","allowedLocales","UnicodeHighlight","_os","_vscode","restricted","primitiveSet","validateBooleanMap","map","entries","InlineEditorSuggest","mode","BracketPairColorization","bracketPairColorizationOptions","independentColorPoolPerBracketType","GuideOptions","bracketPairs","bracketPairsHorizontal","highlightActiveBracketPair","indentation","highlightActiveIndentation","idx","EditorSuggest","insertMode","filterGraceful","snippetsPreventQuickSuggestions","localityBonus","shareSuggestSelections","showIcons","showStatusBar","preview","previewMode","showInlineDetails","showMethods","showFunctions","showConstructors","showDeprecated","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","showUsers","showIssues","SmartSelect","selectLeadingAndTrailingWhitespace","EditorTabFocusMode","readOnly","tabFocusMode","_wrappingIndentFromString","wrappingIndent","EditorWrappingInfoComputer","layoutInfo","EditorDropIntoEditor","DEFAULT_WINDOWS_FONT_FAMILY","DEFAULT_MAC_FONT_FAMILY","DEFAULT_LINUX_FONT_FAMILY","isLinux","letterSpacing","editorOptionsRegistry","register","option","EditorOptions","acceptSuggestionOnCommitCharacter","acceptSuggestionOnEnter","accessibilityPageSize","ariaLabel","autoClosingBrackets","autoClosingDelete","autoClosingOvertype","autoClosingQuotes","automaticLayout","autoSurround","bracketPairColorization","bracketPairGuides","stickyTabStops","codeLens","codeLensFontFamily","codeLensFontSize","colorDecorators","columnSelection","contextmenu","copyWithSyntaxHighlighting","cursorBlinking","cursorSmoothCaretAnimation","cursorSurroundingLines","cursorSurroundingLinesStyle","cursorWidth","disableLayerHinting","disableMonospaceOptimizations","domReadOnly","dragAndDrop","dropIntoEditor","experimental","fastScrollSensitivity","find","fixedOverflowWidgets","foldingStrategy","foldingHighlight","foldingImportsByDefault","foldingMaximumRegions","unfoldOnClickAfterEndOfLine","fontLigatures2","formatOnPaste","formatOnType","glyphMargin","gotoLocation","hideCursorInOverviewRuler","hover","inDiffEditor","lightbulb","linkedEditing","links","matchBrackets","mouseStyle","mouseWheelScrollSensitivity","mouseWheelZoom","multiCursorMergeOverlapping","comment","multiCursorPaste","occurrencesHighlight","overviewRulerBorder","overviewRulerLanes","parameterHints","peekWidgetDefaultFocus","definitionLinkOpensInPeek","quickSuggestions","quickSuggestionsDelay","renameOnType","markdownDeprecationMessage","renderControlCharacters","renderFinalNewline","renderLineHighlight","renderLineHighlightOnlyWhenFocus","renderWhitespace","revealHorizontalRightPadding","roundedSelection","scrollBeyondLastColumn","scrollPredominantAxis","selectionClipboard","selectionHighlight","selectOnLineNumbers","showFoldingControls","showUnused","inlayHints","snippetSuggestions","smartSelect","smoothScrolling","stopRenderingLineAfter","suggest","inlineSuggest","suggestFontSize","suggestLineHeight","suggestOnTriggerCharacters","suggestSelection","tabCompletion","tabIndex","unicodeHighlight","unusualLineTerminators","useShadowDOM","useTabStops","wordSeparators","wordWrapBreakAfterCharacters","wordWrapBreakBeforeCharacters","wrappingStrategy","editorClassName","wrappingInfo"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/config/editorOptions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { USUAL_WORD_SEPARATORS } from '../core/wordHelper.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\n/**\n * @internal\n * The width of the minimap gutter, in pixels.\n */\nexport const MINIMAP_GUTTER_WIDTH = 8;\n//#endregion\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport class ConfigurationChangedEvent {\n    /**\n     * @internal\n     */\n    constructor(values) {\n        this._values = values;\n    }\n    hasChanged(id) {\n        return this._values[id];\n    }\n}\n/**\n * @internal\n */\nexport class ComputeOptionsMemory {\n    constructor() {\n        this.stableMinimapLayoutInput = null;\n        this.stableFitMaxMinimapScale = 0;\n        this.stableFitRemainingWidth = 0;\n    }\n}\n/**\n * @internal\n */\nclass BaseEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\nexport class ApplyUpdateResult {\n    constructor(newValue, didChange) {\n        this.newValue = newValue;\n        this.didChange = didChange;\n    }\n}\nfunction applyUpdate(value, update) {\n    if (typeof value !== 'object' || typeof update !== 'object' || !value || !update) {\n        return new ApplyUpdateResult(update, value !== update);\n    }\n    if (Array.isArray(value) || Array.isArray(update)) {\n        const arrayEquals = Array.isArray(value) && Array.isArray(update) && arrays.equals(value, update);\n        return new ApplyUpdateResult(update, !arrayEquals);\n    }\n    let didChange = false;\n    for (const key in update) {\n        if (update.hasOwnProperty(key)) {\n            const result = applyUpdate(value[key], update[key]);\n            if (result.didChange) {\n                value[key] = result.newValue;\n                didChange = true;\n            }\n        }\n    }\n    return new ApplyUpdateResult(value, didChange);\n}\n/**\n * @internal\n */\nclass ComputedEditorOption {\n    constructor(id) {\n        this.schema = undefined;\n        this.id = id;\n        this.name = '_never_';\n        this.defaultValue = undefined;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        return this.defaultValue;\n    }\n}\nclass SimpleEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        return input;\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\n/**\n * @internal\n */\nexport function boolean(value, defaultValue) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    if (value === 'false') {\n        // treat the string 'false' as false\n        return false;\n    }\n    return Boolean(value);\n}\nclass EditorBooleanOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'boolean';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return boolean(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function clampedInt(value, defaultValue, minimum, maximum) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    let r = parseInt(value, 10);\n    if (isNaN(r)) {\n        return defaultValue;\n    }\n    r = Math.max(minimum, r);\n    r = Math.min(maximum, r);\n    return r | 0;\n}\nclass EditorIntOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, minimum, maximum, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'integer';\n            schema.default = defaultValue;\n            schema.minimum = minimum;\n            schema.maximum = maximum;\n        }\n        super(id, name, defaultValue, schema);\n        this.minimum = minimum;\n        this.maximum = maximum;\n    }\n    static clampedInt(value, defaultValue, minimum, maximum) {\n        return clampedInt(value, defaultValue, minimum, maximum);\n    }\n    validate(input) {\n        return EditorIntOption.clampedInt(input, this.defaultValue, this.minimum, this.maximum);\n    }\n}\nclass EditorFloatOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, validationFn, schema) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'number';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this.validationFn = validationFn;\n    }\n    static clamp(n, min, max) {\n        if (n < min) {\n            return min;\n        }\n        if (n > max) {\n            return max;\n        }\n        return n;\n    }\n    static float(value, defaultValue) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'undefined') {\n            return defaultValue;\n        }\n        const r = parseFloat(value);\n        return (isNaN(r) ? defaultValue : r);\n    }\n    validate(input) {\n        return this.validationFn(EditorFloatOption.float(input, this.defaultValue));\n    }\n}\nclass EditorStringOption extends SimpleEditorOption {\n    static string(value, defaultValue) {\n        if (typeof value !== 'string') {\n            return defaultValue;\n        }\n        return value;\n    }\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return EditorStringOption.string(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function stringSet(value, defaultValue, allowedValues) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    if (allowedValues.indexOf(value) === -1) {\n        return defaultValue;\n    }\n    return value;\n}\nclass EditorStringEnumOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, allowedValues, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n    }\n    validate(input) {\n        return stringSet(input, this.defaultValue, this._allowedValues);\n    }\n}\nclass EditorEnumOption extends BaseEditorOption {\n    constructor(id, name, defaultValue, defaultStringValue, allowedValues, convert, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultStringValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n        this._convert = convert;\n    }\n    validate(input) {\n        if (typeof input !== 'string') {\n            return this.defaultValue;\n        }\n        if (this._allowedValues.indexOf(input) === -1) {\n            return this.defaultValue;\n        }\n        return this._convert(input);\n    }\n}\n//#endregion\n//#region autoIndent\nfunction _autoIndentFromString(autoIndent) {\n    switch (autoIndent) {\n        case 'none': return 0 /* EditorAutoIndentStrategy.None */;\n        case 'keep': return 1 /* EditorAutoIndentStrategy.Keep */;\n        case 'brackets': return 2 /* EditorAutoIndentStrategy.Brackets */;\n        case 'advanced': return 3 /* EditorAutoIndentStrategy.Advanced */;\n        case 'full': return 4 /* EditorAutoIndentStrategy.Full */;\n    }\n}\n//#endregion\n//#region accessibilitySupport\nclass EditorAccessibilitySupport extends BaseEditorOption {\n    constructor() {\n        super(2 /* EditorOption.accessibilitySupport */, 'accessibilitySupport', 0 /* AccessibilitySupport.Unknown */, {\n            type: 'string',\n            enum: ['auto', 'on', 'off'],\n            enumDescriptions: [\n                nls.localize('accessibilitySupport.auto', \"The editor will use platform APIs to detect when a Screen Reader is attached.\"),\n                nls.localize('accessibilitySupport.on', \"The editor will be permanently optimized for usage with a Screen Reader. Word wrapping will be disabled.\"),\n                nls.localize('accessibilitySupport.off', \"The editor will never be optimized for usage with a Screen Reader.\"),\n            ],\n            default: 'auto',\n            description: nls.localize('accessibilitySupport', \"Controls whether the editor should run in a mode where it is optimized for screen readers. Setting to on will disable word wrapping.\")\n        });\n    }\n    validate(input) {\n        switch (input) {\n            case 'auto': return 0 /* AccessibilitySupport.Unknown */;\n            case 'off': return 1 /* AccessibilitySupport.Disabled */;\n            case 'on': return 2 /* AccessibilitySupport.Enabled */;\n        }\n        return this.defaultValue;\n    }\n    compute(env, options, value) {\n        if (value === 0 /* AccessibilitySupport.Unknown */) {\n            // The editor reads the `accessibilitySupport` from the environment\n            return env.accessibilitySupport;\n        }\n        return value;\n    }\n}\nclass EditorComments extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertSpace: true,\n            ignoreEmptyLines: true,\n        };\n        super(19 /* EditorOption.comments */, 'comments', defaults, {\n            'editor.comments.insertSpace': {\n                type: 'boolean',\n                default: defaults.insertSpace,\n                description: nls.localize('comments.insertSpace', \"Controls whether a space character is inserted when commenting.\")\n            },\n            'editor.comments.ignoreEmptyLines': {\n                type: 'boolean',\n                default: defaults.ignoreEmptyLines,\n                description: nls.localize('comments.ignoreEmptyLines', 'Controls if empty lines should be ignored with toggle, add or remove actions for line comments.')\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertSpace: boolean(input.insertSpace, this.defaultValue.insertSpace),\n            ignoreEmptyLines: boolean(input.ignoreEmptyLines, this.defaultValue.ignoreEmptyLines),\n        };\n    }\n}\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle) {\n    switch (cursorBlinkingStyle) {\n        case 'blink': return 1 /* TextEditorCursorBlinkingStyle.Blink */;\n        case 'smooth': return 2 /* TextEditorCursorBlinkingStyle.Smooth */;\n        case 'phase': return 3 /* TextEditorCursorBlinkingStyle.Phase */;\n        case 'expand': return 4 /* TextEditorCursorBlinkingStyle.Expand */;\n        case 'solid': return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n    }\n}\n//#endregion\n//#region cursorStyle\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nfunction _cursorStyleFromString(cursorStyle) {\n    switch (cursorStyle) {\n        case 'line': return TextEditorCursorStyle.Line;\n        case 'block': return TextEditorCursorStyle.Block;\n        case 'underline': return TextEditorCursorStyle.Underline;\n        case 'line-thin': return TextEditorCursorStyle.LineThin;\n        case 'block-outline': return TextEditorCursorStyle.BlockOutline;\n        case 'underline-thin': return TextEditorCursorStyle.UnderlineThin;\n    }\n}\n//#endregion\n//#region editorClassName\nclass EditorClassName extends ComputedEditorOption {\n    constructor() {\n        super(130 /* EditorOption.editorClassName */);\n    }\n    compute(env, options, _) {\n        const classNames = ['monaco-editor'];\n        if (options.get(35 /* EditorOption.extraEditorClassName */)) {\n            classNames.push(options.get(35 /* EditorOption.extraEditorClassName */));\n        }\n        if (env.extraEditorClassName) {\n            classNames.push(env.extraEditorClassName);\n        }\n        if (options.get(68 /* EditorOption.mouseStyle */) === 'default') {\n            classNames.push('mouse-default');\n        }\n        else if (options.get(68 /* EditorOption.mouseStyle */) === 'copy') {\n            classNames.push('mouse-copy');\n        }\n        if (options.get(102 /* EditorOption.showUnused */)) {\n            classNames.push('showUnused');\n        }\n        if (options.get(128 /* EditorOption.showDeprecated */)) {\n            classNames.push('showDeprecated');\n        }\n        return classNames.join(' ');\n    }\n}\n//#endregion\n//#region emptySelectionClipboard\nclass EditorEmptySelectionClipboard extends EditorBooleanOption {\n    constructor() {\n        super(33 /* EditorOption.emptySelectionClipboard */, 'emptySelectionClipboard', true, { description: nls.localize('emptySelectionClipboard', \"Controls whether copying without a selection copies the current line.\") });\n    }\n    compute(env, options, value) {\n        return value && env.emptySelectionClipboard;\n    }\n}\nclass EditorFind extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            cursorMoveOnType: true,\n            seedSearchStringFromSelection: 'always',\n            autoFindInSelection: 'never',\n            globalFindClipboard: false,\n            addExtraSpaceOnTop: true,\n            loop: true\n        };\n        super(37 /* EditorOption.find */, 'find', defaults, {\n            'editor.find.cursorMoveOnType': {\n                type: 'boolean',\n                default: defaults.cursorMoveOnType,\n                description: nls.localize('find.cursorMoveOnType', \"Controls whether the cursor should jump to find matches while typing.\")\n            },\n            'editor.find.seedSearchStringFromSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'selection'],\n                default: defaults.seedSearchStringFromSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.seedSearchStringFromSelection.never', 'Never seed search string from the editor selection.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.always', 'Always seed search string from the editor selection, including word at cursor position.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.selection', 'Only seed search string from the editor selection.')\n                ],\n                description: nls.localize('find.seedSearchStringFromSelection', \"Controls whether the search string in the Find Widget is seeded from the editor selection.\")\n            },\n            'editor.find.autoFindInSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'multiline'],\n                default: defaults.autoFindInSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.autoFindInSelection.never', 'Never turn on Find in Selection automatically (default).'),\n                    nls.localize('editor.find.autoFindInSelection.always', 'Always turn on Find in Selection automatically.'),\n                    nls.localize('editor.find.autoFindInSelection.multiline', 'Turn on Find in Selection automatically when multiple lines of content are selected.')\n                ],\n                description: nls.localize('find.autoFindInSelection', \"Controls the condition for turning on Find in Selection automatically.\")\n            },\n            'editor.find.globalFindClipboard': {\n                type: 'boolean',\n                default: defaults.globalFindClipboard,\n                description: nls.localize('find.globalFindClipboard', \"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.\"),\n                included: platform.isMacintosh\n            },\n            'editor.find.addExtraSpaceOnTop': {\n                type: 'boolean',\n                default: defaults.addExtraSpaceOnTop,\n                description: nls.localize('find.addExtraSpaceOnTop', \"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.\")\n            },\n            'editor.find.loop': {\n                type: 'boolean',\n                default: defaults.loop,\n                description: nls.localize('find.loop', \"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            cursorMoveOnType: boolean(input.cursorMoveOnType, this.defaultValue.cursorMoveOnType),\n            seedSearchStringFromSelection: typeof _input.seedSearchStringFromSelection === 'boolean'\n                ? (_input.seedSearchStringFromSelection ? 'always' : 'never')\n                : stringSet(input.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection, ['never', 'always', 'selection']),\n            autoFindInSelection: typeof _input.autoFindInSelection === 'boolean'\n                ? (_input.autoFindInSelection ? 'always' : 'never')\n                : stringSet(input.autoFindInSelection, this.defaultValue.autoFindInSelection, ['never', 'always', 'multiline']),\n            globalFindClipboard: boolean(input.globalFindClipboard, this.defaultValue.globalFindClipboard),\n            addExtraSpaceOnTop: boolean(input.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop),\n            loop: boolean(input.loop, this.defaultValue.loop),\n        };\n    }\n}\n//#endregion\n//#region fontLigatures\n/**\n * @internal\n */\nexport class EditorFontLigatures extends BaseEditorOption {\n    constructor() {\n        super(47 /* EditorOption.fontLigatures */, 'fontLigatures', EditorFontLigatures.OFF, {\n            anyOf: [\n                {\n                    type: 'boolean',\n                    description: nls.localize('fontLigatures', \"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.\"),\n                },\n                {\n                    type: 'string',\n                    description: nls.localize('fontFeatureSettings', \"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.\")\n                }\n            ],\n            description: nls.localize('fontLigaturesGeneral', \"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.\"),\n            default: false\n        });\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            if (input === 'false') {\n                return EditorFontLigatures.OFF;\n            }\n            if (input === 'true') {\n                return EditorFontLigatures.ON;\n            }\n            return input;\n        }\n        if (Boolean(input)) {\n            return EditorFontLigatures.ON;\n        }\n        return EditorFontLigatures.OFF;\n    }\n}\nEditorFontLigatures.OFF = '\"liga\" off, \"calt\" off';\nEditorFontLigatures.ON = '\"liga\" on, \"calt\" on';\n//#endregion\n//#region fontInfo\nclass EditorFontInfo extends ComputedEditorOption {\n    constructor() {\n        super(46 /* EditorOption.fontInfo */);\n    }\n    compute(env, options, _) {\n        return env.fontInfo;\n    }\n}\n//#endregion\n//#region fontSize\nclass EditorFontSize extends SimpleEditorOption {\n    constructor() {\n        super(48 /* EditorOption.fontSize */, 'fontSize', EDITOR_FONT_DEFAULTS.fontSize, {\n            type: 'number',\n            minimum: 6,\n            maximum: 100,\n            default: EDITOR_FONT_DEFAULTS.fontSize,\n            description: nls.localize('fontSize', \"Controls the font size in pixels.\")\n        });\n    }\n    validate(input) {\n        const r = EditorFloatOption.float(input, this.defaultValue);\n        if (r === 0) {\n            return EDITOR_FONT_DEFAULTS.fontSize;\n        }\n        return EditorFloatOption.clamp(r, 6, 100);\n    }\n    compute(env, options, value) {\n        // The final fontSize respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.fontSize;\n    }\n}\n//#endregion\n//#region fontWeight\nclass EditorFontWeight extends BaseEditorOption {\n    constructor() {\n        super(49 /* EditorOption.fontWeight */, 'fontWeight', EDITOR_FONT_DEFAULTS.fontWeight, {\n            anyOf: [\n                {\n                    type: 'number',\n                    minimum: EditorFontWeight.MINIMUM_VALUE,\n                    maximum: EditorFontWeight.MAXIMUM_VALUE,\n                    errorMessage: nls.localize('fontWeightErrorMessage', \"Only \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000 are allowed.\")\n                },\n                {\n                    type: 'string',\n                    pattern: '^(normal|bold|1000|[1-9][0-9]{0,2})$'\n                },\n                {\n                    enum: EditorFontWeight.SUGGESTION_VALUES\n                }\n            ],\n            default: EDITOR_FONT_DEFAULTS.fontWeight,\n            description: nls.localize('fontWeight', \"Controls the font weight. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.\")\n        });\n    }\n    validate(input) {\n        if (input === 'normal' || input === 'bold') {\n            return input;\n        }\n        return String(EditorIntOption.clampedInt(input, EDITOR_FONT_DEFAULTS.fontWeight, EditorFontWeight.MINIMUM_VALUE, EditorFontWeight.MAXIMUM_VALUE));\n    }\n}\nEditorFontWeight.SUGGESTION_VALUES = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nEditorFontWeight.MINIMUM_VALUE = 1;\nEditorFontWeight.MAXIMUM_VALUE = 1000;\nclass EditorGoToLocation extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            multiple: 'peek',\n            multipleDefinitions: 'peek',\n            multipleTypeDefinitions: 'peek',\n            multipleDeclarations: 'peek',\n            multipleImplementations: 'peek',\n            multipleReferences: 'peek',\n            alternativeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeTypeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeDeclarationCommand: 'editor.action.goToReferences',\n            alternativeImplementationCommand: '',\n            alternativeReferenceCommand: '',\n        };\n        const jsonSubset = {\n            type: 'string',\n            enum: ['peek', 'gotoAndPeek', 'goto'],\n            default: defaults.multiple,\n            enumDescriptions: [\n                nls.localize('editor.gotoLocation.multiple.peek', 'Show peek view of the results (default)'),\n                nls.localize('editor.gotoLocation.multiple.gotoAndPeek', 'Go to the primary result and show a peek view'),\n                nls.localize('editor.gotoLocation.multiple.goto', 'Go to the primary result and enable peek-less navigation to others')\n            ]\n        };\n        const alternativeCommandOptions = ['', 'editor.action.referenceSearch.trigger', 'editor.action.goToReferences', 'editor.action.peekImplementation', 'editor.action.goToImplementation', 'editor.action.peekTypeDefinition', 'editor.action.goToTypeDefinition', 'editor.action.peekDeclaration', 'editor.action.revealDeclaration', 'editor.action.peekDefinition', 'editor.action.revealDefinitionAside', 'editor.action.revealDefinition'];\n        super(53 /* EditorOption.gotoLocation */, 'gotoLocation', defaults, {\n            'editor.gotoLocation.multiple': {\n                deprecationMessage: nls.localize('editor.gotoLocation.multiple.deprecated', \"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.\"),\n            },\n            'editor.gotoLocation.multipleDefinitions': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleDefinitions', \"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleTypeDefinitions': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleTypeDefinitions', \"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleDeclarations': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleDeclarations', \"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleImplementations': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleImplemenattions', \"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleReferences': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleReferences', \"Controls the behavior the 'Go to References'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.alternativeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeTypeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeTypeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeDeclarationCommand': {\n                type: 'string',\n                default: defaults.alternativeDeclarationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDeclarationCommand', \"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeImplementationCommand': {\n                type: 'string',\n                default: defaults.alternativeImplementationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeImplementationCommand', \"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeReferenceCommand': {\n                type: 'string',\n                default: defaults.alternativeReferenceCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeReferenceCommand', \"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.\")\n            },\n        });\n    }\n    validate(_input) {\n        var _a, _b, _c, _d, _e;\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            multiple: stringSet(input.multiple, this.defaultValue.multiple, ['peek', 'gotoAndPeek', 'goto']),\n            multipleDefinitions: (_a = input.multipleDefinitions) !== null && _a !== void 0 ? _a : stringSet(input.multipleDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleTypeDefinitions: (_b = input.multipleTypeDefinitions) !== null && _b !== void 0 ? _b : stringSet(input.multipleTypeDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleDeclarations: (_c = input.multipleDeclarations) !== null && _c !== void 0 ? _c : stringSet(input.multipleDeclarations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleImplementations: (_d = input.multipleImplementations) !== null && _d !== void 0 ? _d : stringSet(input.multipleImplementations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleReferences: (_e = input.multipleReferences) !== null && _e !== void 0 ? _e : stringSet(input.multipleReferences, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            alternativeDefinitionCommand: EditorStringOption.string(input.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand),\n            alternativeTypeDefinitionCommand: EditorStringOption.string(input.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand),\n            alternativeDeclarationCommand: EditorStringOption.string(input.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand),\n            alternativeImplementationCommand: EditorStringOption.string(input.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand),\n            alternativeReferenceCommand: EditorStringOption.string(input.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand),\n        };\n    }\n}\nclass EditorHover extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            delay: 300,\n            sticky: true,\n            above: true,\n        };\n        super(55 /* EditorOption.hover */, 'hover', defaults, {\n            'editor.hover.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('hover.enabled', \"Controls whether the hover is shown.\")\n            },\n            'editor.hover.delay': {\n                type: 'number',\n                default: defaults.delay,\n                minimum: 0,\n                maximum: 10000,\n                description: nls.localize('hover.delay', \"Controls the delay in milliseconds after which the hover is shown.\")\n            },\n            'editor.hover.sticky': {\n                type: 'boolean',\n                default: defaults.sticky,\n                description: nls.localize('hover.sticky', \"Controls whether the hover should remain visible when mouse is moved over it.\")\n            },\n            'editor.hover.above': {\n                type: 'boolean',\n                default: defaults.above,\n                description: nls.localize('hover.above', \"Prefer showing hovers above the line, if there's space.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            delay: EditorIntOption.clampedInt(input.delay, this.defaultValue.delay, 0, 10000),\n            sticky: boolean(input.sticky, this.defaultValue.sticky),\n            above: boolean(input.above, this.defaultValue.above),\n        };\n    }\n}\n/**\n * @internal\n */\nexport class EditorLayoutInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(133 /* EditorOption.layoutInfo */);\n    }\n    compute(env, options, _) {\n        return EditorLayoutInfoComputer.computeLayout(options, {\n            memory: env.memory,\n            outerWidth: env.outerWidth,\n            outerHeight: env.outerHeight,\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            lineHeight: env.fontInfo.lineHeight,\n            viewLineCount: env.viewLineCount,\n            lineNumbersDigitCount: env.lineNumbersDigitCount,\n            typicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n            maxDigitWidth: env.fontInfo.maxDigitWidth,\n            pixelRatio: env.pixelRatio\n        });\n    }\n    static computeContainedMinimapLineCount(input) {\n        const typicalViewportLineCount = input.height / input.lineHeight;\n        const extraLinesBeyondLastLine = input.scrollBeyondLastLine ? (typicalViewportLineCount - 1) : 0;\n        const desiredRatio = (input.viewLineCount + extraLinesBeyondLastLine) / (input.pixelRatio * input.height);\n        const minimapLineCount = Math.floor(input.viewLineCount / desiredRatio);\n        return { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount };\n    }\n    static _computeMinimapLayout(input, memory) {\n        const outerWidth = input.outerWidth;\n        const outerHeight = input.outerHeight;\n        const pixelRatio = input.pixelRatio;\n        if (!input.minimap.enabled) {\n            return {\n                renderMinimap: 0 /* RenderMinimap.None */,\n                minimapLeft: 0,\n                minimapWidth: 0,\n                minimapHeightIsEditorHeight: false,\n                minimapIsSampling: false,\n                minimapScale: 1,\n                minimapLineHeight: 1,\n                minimapCanvasInnerWidth: 0,\n                minimapCanvasInnerHeight: Math.floor(pixelRatio * outerHeight),\n                minimapCanvasOuterWidth: 0,\n                minimapCanvasOuterHeight: outerHeight,\n            };\n        }\n        // Can use memory if only the `viewLineCount` and `remainingWidth` have changed\n        const stableMinimapLayoutInput = memory.stableMinimapLayoutInput;\n        const couldUseMemory = (stableMinimapLayoutInput\n            // && input.outerWidth === lastMinimapLayoutInput.outerWidth !!! INTENTIONAL OMITTED\n            && input.outerHeight === stableMinimapLayoutInput.outerHeight\n            && input.lineHeight === stableMinimapLayoutInput.lineHeight\n            && input.typicalHalfwidthCharacterWidth === stableMinimapLayoutInput.typicalHalfwidthCharacterWidth\n            && input.pixelRatio === stableMinimapLayoutInput.pixelRatio\n            && input.scrollBeyondLastLine === stableMinimapLayoutInput.scrollBeyondLastLine\n            && input.minimap.enabled === stableMinimapLayoutInput.minimap.enabled\n            && input.minimap.side === stableMinimapLayoutInput.minimap.side\n            && input.minimap.size === stableMinimapLayoutInput.minimap.size\n            && input.minimap.showSlider === stableMinimapLayoutInput.minimap.showSlider\n            && input.minimap.renderCharacters === stableMinimapLayoutInput.minimap.renderCharacters\n            && input.minimap.maxColumn === stableMinimapLayoutInput.minimap.maxColumn\n            && input.minimap.scale === stableMinimapLayoutInput.minimap.scale\n            && input.verticalScrollbarWidth === stableMinimapLayoutInput.verticalScrollbarWidth\n            // && input.viewLineCount === lastMinimapLayoutInput.viewLineCount !!! INTENTIONAL OMITTED\n            // && input.remainingWidth === lastMinimapLayoutInput.remainingWidth !!! INTENTIONAL OMITTED\n            && input.isViewportWrapping === stableMinimapLayoutInput.isViewportWrapping);\n        const lineHeight = input.lineHeight;\n        const typicalHalfwidthCharacterWidth = input.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastLine = input.scrollBeyondLastLine;\n        const minimapRenderCharacters = input.minimap.renderCharacters;\n        let minimapScale = (pixelRatio >= 2 ? Math.round(input.minimap.scale * 2) : input.minimap.scale);\n        const minimapMaxColumn = input.minimap.maxColumn;\n        const minimapSize = input.minimap.size;\n        const minimapSide = input.minimap.side;\n        const verticalScrollbarWidth = input.verticalScrollbarWidth;\n        const viewLineCount = input.viewLineCount;\n        const remainingWidth = input.remainingWidth;\n        const isViewportWrapping = input.isViewportWrapping;\n        const baseCharHeight = minimapRenderCharacters ? 2 : 3;\n        let minimapCanvasInnerHeight = Math.floor(pixelRatio * outerHeight);\n        const minimapCanvasOuterHeight = minimapCanvasInnerHeight / pixelRatio;\n        let minimapHeightIsEditorHeight = false;\n        let minimapIsSampling = false;\n        let minimapLineHeight = baseCharHeight * minimapScale;\n        let minimapCharWidth = minimapScale / pixelRatio;\n        let minimapWidthMultiplier = 1;\n        if (minimapSize === 'fill' || minimapSize === 'fit') {\n            const { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n                viewLineCount: viewLineCount,\n                scrollBeyondLastLine: scrollBeyondLastLine,\n                height: outerHeight,\n                lineHeight: lineHeight,\n                pixelRatio: pixelRatio\n            });\n            // ratio is intentionally not part of the layout to avoid the layout changing all the time\n            // when doing sampling\n            const ratio = viewLineCount / minimapLineCount;\n            if (ratio > 1) {\n                minimapHeightIsEditorHeight = true;\n                minimapIsSampling = true;\n                minimapScale = 1;\n                minimapLineHeight = 1;\n                minimapCharWidth = minimapScale / pixelRatio;\n            }\n            else {\n                let fitBecomesFill = false;\n                let maxMinimapScale = minimapScale + 1;\n                if (minimapSize === 'fit') {\n                    const effectiveMinimapHeight = Math.ceil((viewLineCount + extraLinesBeyondLastLine) * minimapLineHeight);\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fit` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        fitBecomesFill = true;\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    else {\n                        fitBecomesFill = (effectiveMinimapHeight > minimapCanvasInnerHeight);\n                    }\n                }\n                if (minimapSize === 'fill' || fitBecomesFill) {\n                    minimapHeightIsEditorHeight = true;\n                    const configuredMinimapScale = minimapScale;\n                    minimapLineHeight = Math.min(lineHeight * pixelRatio, Math.max(1, Math.floor(1 / desiredRatio)));\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fill` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    minimapScale = Math.min(maxMinimapScale, Math.max(1, Math.floor(minimapLineHeight / baseCharHeight)));\n                    if (minimapScale > configuredMinimapScale) {\n                        minimapWidthMultiplier = Math.min(2, minimapScale / configuredMinimapScale);\n                    }\n                    minimapCharWidth = minimapScale / pixelRatio / minimapWidthMultiplier;\n                    minimapCanvasInnerHeight = Math.ceil((Math.max(typicalViewportLineCount, viewLineCount + extraLinesBeyondLastLine)) * minimapLineHeight);\n                    if (isViewportWrapping) {\n                        // remember for next time\n                        memory.stableMinimapLayoutInput = input;\n                        memory.stableFitRemainingWidth = remainingWidth;\n                        memory.stableFitMaxMinimapScale = minimapScale;\n                    }\n                    else {\n                        memory.stableMinimapLayoutInput = null;\n                        memory.stableFitRemainingWidth = 0;\n                    }\n                }\n            }\n        }\n        // Given:\n        // (leaving 2px for the cursor to have space after the last character)\n        // viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n        // minimapWidth = viewportColumn * minimapCharWidth\n        // contentWidth = remainingWidth - minimapWidth\n        // What are good values for contentWidth and minimapWidth ?\n        // minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n        const minimapMaxWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n        const minimapWidth = Math.min(minimapMaxWidth, Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth))) + MINIMAP_GUTTER_WIDTH);\n        let minimapCanvasInnerWidth = Math.floor(pixelRatio * minimapWidth);\n        const minimapCanvasOuterWidth = minimapCanvasInnerWidth / pixelRatio;\n        minimapCanvasInnerWidth = Math.floor(minimapCanvasInnerWidth * minimapWidthMultiplier);\n        const renderMinimap = (minimapRenderCharacters ? 1 /* RenderMinimap.Text */ : 2 /* RenderMinimap.Blocks */);\n        const minimapLeft = (minimapSide === 'left' ? 0 : (outerWidth - minimapWidth - verticalScrollbarWidth));\n        return {\n            renderMinimap,\n            minimapLeft,\n            minimapWidth,\n            minimapHeightIsEditorHeight,\n            minimapIsSampling,\n            minimapScale,\n            minimapLineHeight,\n            minimapCanvasInnerWidth,\n            minimapCanvasInnerHeight,\n            minimapCanvasOuterWidth,\n            minimapCanvasOuterHeight,\n        };\n    }\n    static computeLayout(options, env) {\n        const outerWidth = env.outerWidth | 0;\n        const outerHeight = env.outerHeight | 0;\n        const lineHeight = env.lineHeight | 0;\n        const lineNumbersDigitCount = env.lineNumbersDigitCount | 0;\n        const typicalHalfwidthCharacterWidth = env.typicalHalfwidthCharacterWidth;\n        const maxDigitWidth = env.maxDigitWidth;\n        const pixelRatio = env.pixelRatio;\n        const viewLineCount = env.viewLineCount;\n        const wordWrapOverride2 = options.get(125 /* EditorOption.wordWrapOverride2 */);\n        const wordWrapOverride1 = (wordWrapOverride2 === 'inherit' ? options.get(124 /* EditorOption.wordWrapOverride1 */) : wordWrapOverride2);\n        const wordWrap = (wordWrapOverride1 === 'inherit' ? options.get(120 /* EditorOption.wordWrap */) : wordWrapOverride1);\n        const wordWrapColumn = options.get(123 /* EditorOption.wordWrapColumn */);\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        const isDominatedByLongLines = env.isDominatedByLongLines;\n        const showGlyphMargin = options.get(52 /* EditorOption.glyphMargin */);\n        const showLineNumbers = (options.get(62 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */);\n        const lineNumbersMinChars = options.get(63 /* EditorOption.lineNumbersMinChars */);\n        const scrollBeyondLastLine = options.get(96 /* EditorOption.scrollBeyondLastLine */);\n        const minimap = options.get(67 /* EditorOption.minimap */);\n        const scrollbar = options.get(94 /* EditorOption.scrollbar */);\n        const verticalScrollbarWidth = scrollbar.verticalScrollbarSize;\n        const verticalScrollbarHasArrows = scrollbar.verticalHasArrows;\n        const scrollbarArrowSize = scrollbar.arrowSize;\n        const horizontalScrollbarHeight = scrollbar.horizontalScrollbarSize;\n        const rawLineDecorationsWidth = options.get(60 /* EditorOption.lineDecorationsWidth */);\n        const folding = options.get(39 /* EditorOption.folding */);\n        const showFoldingDecoration = options.get(101 /* EditorOption.showFoldingControls */) !== 'never';\n        let lineDecorationsWidth;\n        if (typeof rawLineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(rawLineDecorationsWidth)) {\n            const multiple = parseFloat(rawLineDecorationsWidth.substr(0, rawLineDecorationsWidth.length - 2));\n            lineDecorationsWidth = EditorIntOption.clampedInt(multiple * typicalHalfwidthCharacterWidth, 0, 0, 1000);\n        }\n        else {\n            lineDecorationsWidth = EditorIntOption.clampedInt(rawLineDecorationsWidth, 0, 0, 1000);\n        }\n        if (folding && showFoldingDecoration) {\n            lineDecorationsWidth += 16;\n        }\n        let lineNumbersWidth = 0;\n        if (showLineNumbers) {\n            const digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n            lineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n        }\n        let glyphMarginWidth = 0;\n        if (showGlyphMargin) {\n            glyphMarginWidth = lineHeight;\n        }\n        let glyphMarginLeft = 0;\n        let lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n        let decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n        let contentLeft = decorationsLeft + lineDecorationsWidth;\n        const remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n        let isWordWrapMinified = false;\n        let isViewportWrapping = false;\n        let wrappingColumn = -1;\n        if (accessibilitySupport !== 2 /* AccessibilitySupport.Enabled */) {\n            // See https://github.com/microsoft/vscode/issues/27766\n            // Never enable wrapping when a screen reader is attached\n            // because arrow down etc. will not move the cursor in the way\n            // a screen reader expects.\n            if (wordWrapOverride1 === 'inherit' && isDominatedByLongLines) {\n                // Force viewport width wrapping if model is dominated by long lines\n                isWordWrapMinified = true;\n                isViewportWrapping = true;\n            }\n            else if (wordWrap === 'on' || wordWrap === 'bounded') {\n                isViewportWrapping = true;\n            }\n            else if (wordWrap === 'wordWrapColumn') {\n                wrappingColumn = wordWrapColumn;\n            }\n        }\n        const minimapLayout = EditorLayoutInfoComputer._computeMinimapLayout({\n            outerWidth: outerWidth,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacterWidth,\n            pixelRatio: pixelRatio,\n            scrollBeyondLastLine: scrollBeyondLastLine,\n            minimap: minimap,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            viewLineCount: viewLineCount,\n            remainingWidth: remainingWidth,\n            isViewportWrapping: isViewportWrapping,\n        }, env.memory || new ComputeOptionsMemory());\n        if (minimapLayout.renderMinimap !== 0 /* RenderMinimap.None */ && minimapLayout.minimapLeft === 0) {\n            // the minimap is rendered to the left, so move everything to the right\n            glyphMarginLeft += minimapLayout.minimapWidth;\n            lineNumbersLeft += minimapLayout.minimapWidth;\n            decorationsLeft += minimapLayout.minimapWidth;\n            contentLeft += minimapLayout.minimapWidth;\n        }\n        const contentWidth = remainingWidth - minimapLayout.minimapWidth;\n        // (leaving 2px for the cursor to have space after the last character)\n        const viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n        const verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n        if (isViewportWrapping) {\n            // compute the actual wrappingColumn\n            wrappingColumn = Math.max(1, viewportColumn);\n            if (wordWrap === 'bounded') {\n                wrappingColumn = Math.min(wrappingColumn, wordWrapColumn);\n            }\n        }\n        return {\n            width: outerWidth,\n            height: outerHeight,\n            glyphMarginLeft: glyphMarginLeft,\n            glyphMarginWidth: glyphMarginWidth,\n            lineNumbersLeft: lineNumbersLeft,\n            lineNumbersWidth: lineNumbersWidth,\n            decorationsLeft: decorationsLeft,\n            decorationsWidth: lineDecorationsWidth,\n            contentLeft: contentLeft,\n            contentWidth: contentWidth,\n            minimap: minimapLayout,\n            viewportColumn: viewportColumn,\n            isWordWrapMinified: isWordWrapMinified,\n            isViewportWrapping: isViewportWrapping,\n            wrappingColumn: wrappingColumn,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            horizontalScrollbarHeight: horizontalScrollbarHeight,\n            overviewRuler: {\n                top: verticalArrowSize,\n                width: verticalScrollbarWidth,\n                height: (outerHeight - 2 * verticalArrowSize),\n                right: 0\n            }\n        };\n    }\n}\nclass EditorLightbulb extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true };\n        super(59 /* EditorOption.lightbulb */, 'lightbulb', defaults, {\n            'editor.lightbulb.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('codeActions', \"Enables the code action lightbulb in the editor.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled)\n        };\n    }\n}\nclass EditorExperimental extends BaseEditorOption {\n    constructor() {\n        const defaults = { stickyScroll: { enabled: false } };\n        super(34 /* EditorOption.experimental */, 'experimental', defaults, {\n            'editor.experimental.stickyScroll.enabled': {\n                type: 'boolean',\n                default: defaults.stickyScroll.enabled,\n                description: nls.localize('editor.experimental.stickyScroll', \"Shows the nested current scopes during the scroll at the top of the editor.\")\n            },\n        });\n    }\n    validate(_input) {\n        var _a;\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            stickyScroll: {\n                enabled: boolean((_a = input.stickyScroll) === null || _a === void 0 ? void 0 : _a.enabled, this.defaultValue.stickyScroll.enabled)\n            }\n        };\n    }\n}\nclass EditorInlayHints extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: 'on', fontSize: 0, fontFamily: '', padding: false };\n        super(129 /* EditorOption.inlayHints */, 'inlayHints', defaults, {\n            'editor.inlayHints.enabled': {\n                type: 'string',\n                default: defaults.enabled,\n                description: nls.localize('inlayHints.enable', \"Enables the inlay hints in the editor.\"),\n                enum: ['on', 'onUnlessPressed', 'offUnlessPressed', 'off'],\n                markdownEnumDescriptions: [\n                    nls.localize('editor.inlayHints.on', \"Inlay hints are enabled\"),\n                    nls.localize('editor.inlayHints.onUnlessPressed', \"Inlay hints are showing by default and hide when holding `Ctrl+Alt`\"),\n                    nls.localize('editor.inlayHints.offUnlessPressed', \"Inlay hints are hidden by default and show when holding `Ctrl+Alt`\"),\n                    nls.localize('editor.inlayHints.off', \"Inlay hints are disabled\"),\n                ],\n            },\n            'editor.inlayHints.fontSize': {\n                type: 'number',\n                default: defaults.fontSize,\n                markdownDescription: nls.localize('inlayHints.fontSize', \"Controls font size of inlay hints in the editor. As default the {0} is used when the configured value is less than {1} or greater than the editor font size.\", '`#editor.fontSize#`', '`5`')\n            },\n            'editor.inlayHints.fontFamily': {\n                type: 'string',\n                default: defaults.fontFamily,\n                markdownDescription: nls.localize('inlayHints.fontFamily', \"Controls font family of inlay hints in the editor. When set to empty, the {0} is used.\", '`#editor.fontFamily#`')\n            },\n            'editor.inlayHints.padding': {\n                type: 'boolean',\n                default: defaults.padding,\n                description: nls.localize('inlayHints.padding', \"Enables the padding around the inlay hints in the editor.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        if (typeof input.enabled === 'boolean') {\n            input.enabled = input.enabled ? 'on' : 'off';\n        }\n        return {\n            enabled: stringSet(input.enabled, this.defaultValue.enabled, ['on', 'off', 'offUnlessPressed', 'onUnlessPressed']),\n            fontSize: EditorIntOption.clampedInt(input.fontSize, this.defaultValue.fontSize, 0, 100),\n            fontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily),\n            padding: boolean(input.padding, this.defaultValue.padding)\n        };\n    }\n}\n//#endregion\n//#region lineHeight\nclass EditorLineHeight extends EditorFloatOption {\n    constructor() {\n        super(61 /* EditorOption.lineHeight */, 'lineHeight', EDITOR_FONT_DEFAULTS.lineHeight, x => EditorFloatOption.clamp(x, 0, 150), { markdownDescription: nls.localize('lineHeight', \"Controls the line height. \\n - Use 0 to automatically compute the line height from the font size.\\n - Values between 0 and 8 will be used as a multiplier with the font size.\\n - Values greater than or equal to 8 will be used as effective values.\") });\n    }\n    compute(env, options, value) {\n        // The lineHeight is computed from the fontSize if it is 0.\n        // Moreover, the final lineHeight respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.lineHeight;\n    }\n}\nclass EditorMinimap extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            size: 'proportional',\n            side: 'right',\n            showSlider: 'mouseover',\n            autohide: false,\n            renderCharacters: true,\n            maxColumn: 120,\n            scale: 1,\n        };\n        super(67 /* EditorOption.minimap */, 'minimap', defaults, {\n            'editor.minimap.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('minimap.enabled', \"Controls whether the minimap is shown.\")\n            },\n            'editor.minimap.autohide': {\n                type: 'boolean',\n                default: defaults.autohide,\n                description: nls.localize('minimap.autohide', \"Controls whether the minimap is hidden automatically.\")\n            },\n            'editor.minimap.size': {\n                type: 'string',\n                enum: ['proportional', 'fill', 'fit'],\n                enumDescriptions: [\n                    nls.localize('minimap.size.proportional', \"The minimap has the same size as the editor contents (and might scroll).\"),\n                    nls.localize('minimap.size.fill', \"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).\"),\n                    nls.localize('minimap.size.fit', \"The minimap will shrink as necessary to never be larger than the editor (no scrolling).\"),\n                ],\n                default: defaults.size,\n                description: nls.localize('minimap.size', \"Controls the size of the minimap.\")\n            },\n            'editor.minimap.side': {\n                type: 'string',\n                enum: ['left', 'right'],\n                default: defaults.side,\n                description: nls.localize('minimap.side', \"Controls the side where to render the minimap.\")\n            },\n            'editor.minimap.showSlider': {\n                type: 'string',\n                enum: ['always', 'mouseover'],\n                default: defaults.showSlider,\n                description: nls.localize('minimap.showSlider', \"Controls when the minimap slider is shown.\")\n            },\n            'editor.minimap.scale': {\n                type: 'number',\n                default: defaults.scale,\n                minimum: 1,\n                maximum: 3,\n                enum: [1, 2, 3],\n                description: nls.localize('minimap.scale', \"Scale of content drawn in the minimap: 1, 2 or 3.\")\n            },\n            'editor.minimap.renderCharacters': {\n                type: 'boolean',\n                default: defaults.renderCharacters,\n                description: nls.localize('minimap.renderCharacters', \"Render the actual characters on a line as opposed to color blocks.\")\n            },\n            'editor.minimap.maxColumn': {\n                type: 'number',\n                default: defaults.maxColumn,\n                description: nls.localize('minimap.maxColumn', \"Limit the width of the minimap to render at most a certain number of columns.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            autohide: boolean(input.autohide, this.defaultValue.autohide),\n            size: stringSet(input.size, this.defaultValue.size, ['proportional', 'fill', 'fit']),\n            side: stringSet(input.side, this.defaultValue.side, ['right', 'left']),\n            showSlider: stringSet(input.showSlider, this.defaultValue.showSlider, ['always', 'mouseover']),\n            renderCharacters: boolean(input.renderCharacters, this.defaultValue.renderCharacters),\n            scale: EditorIntOption.clampedInt(input.scale, 1, 1, 3),\n            maxColumn: EditorIntOption.clampedInt(input.maxColumn, this.defaultValue.maxColumn, 1, 10000),\n        };\n    }\n}\n//#endregion\n//#region multiCursorModifier\nfunction _multiCursorModifierFromString(multiCursorModifier) {\n    if (multiCursorModifier === 'ctrlCmd') {\n        return (platform.isMacintosh ? 'metaKey' : 'ctrlKey');\n    }\n    return 'altKey';\n}\nclass EditorPadding extends BaseEditorOption {\n    constructor() {\n        super(77 /* EditorOption.padding */, 'padding', { top: 0, bottom: 0 }, {\n            'editor.padding.top': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.top', \"Controls the amount of space between the top edge of the editor and the first line.\")\n            },\n            'editor.padding.bottom': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.bottom', \"Controls the amount of space between the bottom edge of the editor and the last line.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            top: EditorIntOption.clampedInt(input.top, 0, 0, 1000),\n            bottom: EditorIntOption.clampedInt(input.bottom, 0, 0, 1000)\n        };\n    }\n}\nclass EditorParameterHints extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            cycle: false\n        };\n        super(78 /* EditorOption.parameterHints */, 'parameterHints', defaults, {\n            'editor.parameterHints.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('parameterHints.enabled', \"Enables a pop-up that shows parameter documentation and type information as you type.\")\n            },\n            'editor.parameterHints.cycle': {\n                type: 'boolean',\n                default: defaults.cycle,\n                description: nls.localize('parameterHints.cycle', \"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            cycle: boolean(input.cycle, this.defaultValue.cycle)\n        };\n    }\n}\n//#endregion\n//#region pixelRatio\nclass EditorPixelRatio extends ComputedEditorOption {\n    constructor() {\n        super(131 /* EditorOption.pixelRatio */);\n    }\n    compute(env, options, _) {\n        return env.pixelRatio;\n    }\n}\nclass EditorQuickSuggestions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            other: 'on',\n            comments: 'off',\n            strings: 'off'\n        };\n        const types = [\n            { type: 'boolean' },\n            {\n                type: 'string',\n                enum: ['on', 'inline', 'off'],\n                enumDescriptions: [nls.localize('on', \"Quick suggestions show inside the suggest widget\"), nls.localize('inline', \"Quick suggestions show as ghost text\"), nls.localize('off', \"Quick suggestions are disabled\")]\n            }\n        ];\n        super(81 /* EditorOption.quickSuggestions */, 'quickSuggestions', defaults, {\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n                strings: {\n                    anyOf: types,\n                    default: defaults.strings,\n                    description: nls.localize('quickSuggestions.strings', \"Enable quick suggestions inside strings.\")\n                },\n                comments: {\n                    anyOf: types,\n                    default: defaults.comments,\n                    description: nls.localize('quickSuggestions.comments', \"Enable quick suggestions inside comments.\")\n                },\n                other: {\n                    anyOf: types,\n                    default: defaults.other,\n                    description: nls.localize('quickSuggestions.other', \"Enable quick suggestions outside of strings and comments.\")\n                },\n            },\n            default: defaults,\n            markdownDescription: nls.localize('quickSuggestions', \"Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '{0}'-setting which controls if suggestions are triggered by special characters.\", `#editor.suggestOnTriggerCharacters#`)\n        });\n        this.defaultValue = defaults;\n    }\n    validate(input) {\n        if (typeof input === 'boolean') {\n            // boolean -> all on/off\n            const value = input ? 'on' : 'off';\n            return { comments: value, strings: value, other: value };\n        }\n        if (!input || typeof input !== 'object') {\n            // invalid object\n            return this.defaultValue;\n        }\n        const { other, comments, strings } = input;\n        const allowedValues = ['on', 'inline', 'off'];\n        let validatedOther;\n        let validatedComments;\n        let validatedStrings;\n        if (typeof other === 'boolean') {\n            validatedOther = other ? 'on' : 'off';\n        }\n        else {\n            validatedOther = stringSet(other, this.defaultValue.other, allowedValues);\n        }\n        if (typeof comments === 'boolean') {\n            validatedComments = comments ? 'on' : 'off';\n        }\n        else {\n            validatedComments = stringSet(comments, this.defaultValue.comments, allowedValues);\n        }\n        if (typeof strings === 'boolean') {\n            validatedStrings = strings ? 'on' : 'off';\n        }\n        else {\n            validatedStrings = stringSet(strings, this.defaultValue.strings, allowedValues);\n        }\n        return {\n            other: validatedOther,\n            comments: validatedComments,\n            strings: validatedStrings\n        };\n    }\n}\nclass EditorRenderLineNumbersOption extends BaseEditorOption {\n    constructor() {\n        super(62 /* EditorOption.lineNumbers */, 'lineNumbers', { renderType: 1 /* RenderLineNumbersType.On */, renderFn: null }, {\n            type: 'string',\n            enum: ['off', 'on', 'relative', 'interval'],\n            enumDescriptions: [\n                nls.localize('lineNumbers.off', \"Line numbers are not rendered.\"),\n                nls.localize('lineNumbers.on', \"Line numbers are rendered as absolute number.\"),\n                nls.localize('lineNumbers.relative', \"Line numbers are rendered as distance in lines to cursor position.\"),\n                nls.localize('lineNumbers.interval', \"Line numbers are rendered every 10 lines.\")\n            ],\n            default: 'on',\n            description: nls.localize('lineNumbers', \"Controls the display of line numbers.\")\n        });\n    }\n    validate(lineNumbers) {\n        let renderType = this.defaultValue.renderType;\n        let renderFn = this.defaultValue.renderFn;\n        if (typeof lineNumbers !== 'undefined') {\n            if (typeof lineNumbers === 'function') {\n                renderType = 4 /* RenderLineNumbersType.Custom */;\n                renderFn = lineNumbers;\n            }\n            else if (lineNumbers === 'interval') {\n                renderType = 3 /* RenderLineNumbersType.Interval */;\n            }\n            else if (lineNumbers === 'relative') {\n                renderType = 2 /* RenderLineNumbersType.Relative */;\n            }\n            else if (lineNumbers === 'on') {\n                renderType = 1 /* RenderLineNumbersType.On */;\n            }\n            else {\n                renderType = 0 /* RenderLineNumbersType.Off */;\n            }\n        }\n        return {\n            renderType,\n            renderFn\n        };\n    }\n}\n//#endregion\n//#region renderValidationDecorations\n/**\n * @internal\n */\nexport function filterValidationDecorations(options) {\n    const renderValidationDecorations = options.get(89 /* EditorOption.renderValidationDecorations */);\n    if (renderValidationDecorations === 'editable') {\n        return options.get(83 /* EditorOption.readOnly */);\n    }\n    return renderValidationDecorations === 'on' ? false : true;\n}\nclass EditorRulers extends BaseEditorOption {\n    constructor() {\n        const defaults = [];\n        const columnSchema = { type: 'number', description: nls.localize('rulers.size', \"Number of monospace characters at which this editor ruler will render.\") };\n        super(93 /* EditorOption.rulers */, 'rulers', defaults, {\n            type: 'array',\n            items: {\n                anyOf: [\n                    columnSchema,\n                    {\n                        type: [\n                            'object'\n                        ],\n                        properties: {\n                            column: columnSchema,\n                            color: {\n                                type: 'string',\n                                description: nls.localize('rulers.color', \"Color of this editor ruler.\"),\n                                format: 'color-hex'\n                            }\n                        }\n                    }\n                ]\n            },\n            default: defaults,\n            description: nls.localize('rulers', \"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.\")\n        });\n    }\n    validate(input) {\n        if (Array.isArray(input)) {\n            const rulers = [];\n            for (const _element of input) {\n                if (typeof _element === 'number') {\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(_element, 0, 0, 10000),\n                        color: null\n                    });\n                }\n                else if (_element && typeof _element === 'object') {\n                    const element = _element;\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(element.column, 0, 0, 10000),\n                        color: element.color\n                    });\n                }\n            }\n            rulers.sort((a, b) => a.column - b.column);\n            return rulers;\n        }\n        return this.defaultValue;\n    }\n}\nfunction _scrollbarVisibilityFromString(visibility, defaultValue) {\n    if (typeof visibility !== 'string') {\n        return defaultValue;\n    }\n    switch (visibility) {\n        case 'hidden': return 2 /* ScrollbarVisibility.Hidden */;\n        case 'visible': return 3 /* ScrollbarVisibility.Visible */;\n        default: return 1 /* ScrollbarVisibility.Auto */;\n    }\n}\nclass EditorScrollbar extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            vertical: 1 /* ScrollbarVisibility.Auto */,\n            horizontal: 1 /* ScrollbarVisibility.Auto */,\n            arrowSize: 11,\n            useShadows: true,\n            verticalHasArrows: false,\n            horizontalHasArrows: false,\n            horizontalScrollbarSize: 12,\n            horizontalSliderSize: 12,\n            verticalScrollbarSize: 14,\n            verticalSliderSize: 14,\n            handleMouseWheel: true,\n            alwaysConsumeMouseWheel: true,\n            scrollByPage: false\n        };\n        super(94 /* EditorOption.scrollbar */, 'scrollbar', defaults, {\n            'editor.scrollbar.vertical': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.vertical.auto', \"The vertical scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.vertical.visible', \"The vertical scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.vertical.fit', \"The vertical scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.vertical', \"Controls the visibility of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontal': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.horizontal.auto', \"The horizontal scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.horizontal.visible', \"The horizontal scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.horizontal.fit', \"The horizontal scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.horizontal', \"Controls the visibility of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.verticalScrollbarSize': {\n                type: 'number',\n                default: defaults.verticalScrollbarSize,\n                description: nls.localize('scrollbar.verticalScrollbarSize', \"The width of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontalScrollbarSize': {\n                type: 'number',\n                default: defaults.horizontalScrollbarSize,\n                description: nls.localize('scrollbar.horizontalScrollbarSize', \"The height of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.scrollByPage': {\n                type: 'boolean',\n                default: defaults.scrollByPage,\n                description: nls.localize('scrollbar.scrollByPage', \"Controls whether clicks scroll by page or jump to click position.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        const horizontalScrollbarSize = EditorIntOption.clampedInt(input.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1000);\n        const verticalScrollbarSize = EditorIntOption.clampedInt(input.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1000);\n        return {\n            arrowSize: EditorIntOption.clampedInt(input.arrowSize, this.defaultValue.arrowSize, 0, 1000),\n            vertical: _scrollbarVisibilityFromString(input.vertical, this.defaultValue.vertical),\n            horizontal: _scrollbarVisibilityFromString(input.horizontal, this.defaultValue.horizontal),\n            useShadows: boolean(input.useShadows, this.defaultValue.useShadows),\n            verticalHasArrows: boolean(input.verticalHasArrows, this.defaultValue.verticalHasArrows),\n            horizontalHasArrows: boolean(input.horizontalHasArrows, this.defaultValue.horizontalHasArrows),\n            handleMouseWheel: boolean(input.handleMouseWheel, this.defaultValue.handleMouseWheel),\n            alwaysConsumeMouseWheel: boolean(input.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel),\n            horizontalScrollbarSize: horizontalScrollbarSize,\n            horizontalSliderSize: EditorIntOption.clampedInt(input.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n            verticalScrollbarSize: verticalScrollbarSize,\n            verticalSliderSize: EditorIntOption.clampedInt(input.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n            scrollByPage: boolean(input.scrollByPage, this.defaultValue.scrollByPage),\n        };\n    }\n}\n/**\n * @internal\n*/\nexport const inUntrustedWorkspace = 'inUntrustedWorkspace';\n/**\n * @internal\n */\nexport const unicodeHighlightConfigKeys = {\n    allowedCharacters: 'editor.unicodeHighlight.allowedCharacters',\n    invisibleCharacters: 'editor.unicodeHighlight.invisibleCharacters',\n    nonBasicASCII: 'editor.unicodeHighlight.nonBasicASCII',\n    ambiguousCharacters: 'editor.unicodeHighlight.ambiguousCharacters',\n    includeComments: 'editor.unicodeHighlight.includeComments',\n    includeStrings: 'editor.unicodeHighlight.includeStrings',\n    allowedLocales: 'editor.unicodeHighlight.allowedLocales',\n};\nclass UnicodeHighlight extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            nonBasicASCII: inUntrustedWorkspace,\n            invisibleCharacters: true,\n            ambiguousCharacters: true,\n            includeComments: inUntrustedWorkspace,\n            includeStrings: true,\n            allowedCharacters: {},\n            allowedLocales: { _os: true, _vscode: true },\n        };\n        super(115 /* EditorOption.unicodeHighlighting */, 'unicodeHighlight', defaults, {\n            [unicodeHighlightConfigKeys.nonBasicASCII]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.nonBasicASCII,\n                description: nls.localize('unicodeHighlight.nonBasicASCII', \"Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.\")\n            },\n            [unicodeHighlightConfigKeys.invisibleCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.invisibleCharacters,\n                description: nls.localize('unicodeHighlight.invisibleCharacters', \"Controls whether characters that just reserve space or have no width at all are highlighted.\")\n            },\n            [unicodeHighlightConfigKeys.ambiguousCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.ambiguousCharacters,\n                description: nls.localize('unicodeHighlight.ambiguousCharacters', \"Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.\")\n            },\n            [unicodeHighlightConfigKeys.includeComments]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeComments,\n                description: nls.localize('unicodeHighlight.includeComments', \"Controls whether characters in comments should also be subject to unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.includeStrings]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeStrings,\n                description: nls.localize('unicodeHighlight.includeStrings', \"Controls whether characters in strings should also be subject to unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.allowedCharacters]: {\n                restricted: true,\n                type: 'object',\n                default: defaults.allowedCharacters,\n                description: nls.localize('unicodeHighlight.allowedCharacters', \"Defines allowed characters that are not being highlighted.\"),\n                additionalProperties: {\n                    type: 'boolean'\n                }\n            },\n            [unicodeHighlightConfigKeys.allowedLocales]: {\n                restricted: true,\n                type: 'object',\n                additionalProperties: {\n                    type: 'boolean'\n                },\n                default: defaults.allowedLocales,\n                description: nls.localize('unicodeHighlight.allowedLocales', \"Unicode characters that are common in allowed locales are not being highlighted.\")\n            },\n        });\n    }\n    applyUpdate(value, update) {\n        let didChange = false;\n        if (update.allowedCharacters && value) {\n            // Treat allowedCharacters atomically\n            if (!objects.equals(value.allowedCharacters, update.allowedCharacters)) {\n                value = Object.assign(Object.assign({}, value), { allowedCharacters: update.allowedCharacters });\n                didChange = true;\n            }\n        }\n        if (update.allowedLocales && value) {\n            // Treat allowedLocales atomically\n            if (!objects.equals(value.allowedLocales, update.allowedLocales)) {\n                value = Object.assign(Object.assign({}, value), { allowedLocales: update.allowedLocales });\n                didChange = true;\n            }\n        }\n        const result = super.applyUpdate(value, update);\n        if (didChange) {\n            return new ApplyUpdateResult(result.newValue, true);\n        }\n        return result;\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            nonBasicASCII: primitiveSet(input.nonBasicASCII, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            invisibleCharacters: boolean(input.invisibleCharacters, this.defaultValue.invisibleCharacters),\n            ambiguousCharacters: boolean(input.ambiguousCharacters, this.defaultValue.ambiguousCharacters),\n            includeComments: primitiveSet(input.includeComments, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            includeStrings: primitiveSet(input.includeStrings, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            allowedCharacters: this.validateBooleanMap(_input.allowedCharacters, this.defaultValue.allowedCharacters),\n            allowedLocales: this.validateBooleanMap(_input.allowedLocales, this.defaultValue.allowedLocales),\n        };\n    }\n    validateBooleanMap(map, defaultValue) {\n        if ((typeof map !== 'object') || !map) {\n            return defaultValue;\n        }\n        const result = {};\n        for (const [key, value] of Object.entries(map)) {\n            if (value === true) {\n                result[key] = true;\n            }\n        }\n        return result;\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass InlineEditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            mode: 'subwordSmart'\n        };\n        super(57 /* EditorOption.inlineSuggest */, 'inlineSuggest', defaults, {\n            'editor.inlineSuggest.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('inlineSuggest.enabled', \"Controls whether to automatically show inline suggestions in the editor.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            mode: stringSet(input.mode, this.defaultValue.mode, ['prefix', 'subword', 'subwordSmart']),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass BracketPairColorization extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.enabled,\n            independentColorPoolPerBracketType: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.independentColorPoolPerBracketType,\n        };\n        super(12 /* EditorOption.bracketPairColorization */, 'bracketPairColorization', defaults, {\n            'editor.bracketPairColorization.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('bracketPairColorization.enabled', \"Controls whether bracket pair colorization is enabled or not. Use {0} to override the bracket highlight colors.\", '`#workbench.colorCustomizations#`')\n            },\n            'editor.bracketPairColorization.independentColorPoolPerBracketType': {\n                type: 'boolean',\n                default: defaults.independentColorPoolPerBracketType,\n                description: nls.localize('bracketPairColorization.independentColorPoolPerBracketType', \"Controls whether each bracket type has its own independent color pool.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            independentColorPoolPerBracketType: boolean(input.independentColorPoolPerBracketType, this.defaultValue.independentColorPoolPerBracketType),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass GuideOptions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            bracketPairs: false,\n            bracketPairsHorizontal: 'active',\n            highlightActiveBracketPair: true,\n            indentation: true,\n            highlightActiveIndentation: true\n        };\n        super(13 /* EditorOption.guides */, 'guides', defaults, {\n            'editor.guides.bracketPairs': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairs.true', \"Enables bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairs.active', \"Enables bracket pair guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairs.false', \"Disables bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairs,\n                description: nls.localize('editor.guides.bracketPairs', \"Controls whether bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.bracketPairsHorizontal': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairsHorizontal.true', \"Enables horizontal guides as addition to vertical bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.active', \"Enables horizontal guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.false', \"Disables horizontal bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairsHorizontal,\n                description: nls.localize('editor.guides.bracketPairsHorizontal', \"Controls whether horizontal bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.highlightActiveBracketPair': {\n                type: 'boolean',\n                default: defaults.highlightActiveBracketPair,\n                description: nls.localize('editor.guides.highlightActiveBracketPair', \"Controls whether the editor should highlight the active bracket pair.\")\n            },\n            'editor.guides.indentation': {\n                type: 'boolean',\n                default: defaults.indentation,\n                description: nls.localize('editor.guides.indentation', \"Controls whether the editor should render indent guides.\")\n            },\n            'editor.guides.highlightActiveIndentation': {\n                type: ['boolean', 'string'],\n                enum: [true, 'always', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.highlightActiveIndentation.true', \"Highlights the active indent guide.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.always', \"Highlights the active indent guide even if bracket guides are highlighted.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.false', \"Do not highlight the active indent guide.\"),\n                ],\n                default: defaults.highlightActiveIndentation,\n                description: nls.localize('editor.guides.highlightActiveIndentation', \"Controls whether the editor should highlight the active indent guide.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            bracketPairs: primitiveSet(input.bracketPairs, this.defaultValue.bracketPairs, [true, false, 'active']),\n            bracketPairsHorizontal: primitiveSet(input.bracketPairsHorizontal, this.defaultValue.bracketPairsHorizontal, [true, false, 'active']),\n            highlightActiveBracketPair: boolean(input.highlightActiveBracketPair, this.defaultValue.highlightActiveBracketPair),\n            indentation: boolean(input.indentation, this.defaultValue.indentation),\n            highlightActiveIndentation: primitiveSet(input.highlightActiveIndentation, this.defaultValue.highlightActiveIndentation, [true, false, 'always']),\n        };\n    }\n}\nfunction primitiveSet(value, defaultValue, allowedValues) {\n    const idx = allowedValues.indexOf(value);\n    if (idx === -1) {\n        return defaultValue;\n    }\n    return allowedValues[idx];\n}\nclass EditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertMode: 'insert',\n            filterGraceful: true,\n            snippetsPreventQuickSuggestions: true,\n            localityBonus: false,\n            shareSuggestSelections: false,\n            showIcons: true,\n            showStatusBar: false,\n            preview: false,\n            previewMode: 'subwordSmart',\n            showInlineDetails: true,\n            showMethods: true,\n            showFunctions: true,\n            showConstructors: true,\n            showDeprecated: true,\n            showFields: true,\n            showVariables: true,\n            showClasses: true,\n            showStructs: true,\n            showInterfaces: true,\n            showModules: true,\n            showProperties: true,\n            showEvents: true,\n            showOperators: true,\n            showUnits: true,\n            showValues: true,\n            showConstants: true,\n            showEnums: true,\n            showEnumMembers: true,\n            showKeywords: true,\n            showWords: true,\n            showColors: true,\n            showFiles: true,\n            showReferences: true,\n            showFolders: true,\n            showTypeParameters: true,\n            showSnippets: true,\n            showUsers: true,\n            showIssues: true,\n        };\n        super(108 /* EditorOption.suggest */, 'suggest', defaults, {\n            'editor.suggest.insertMode': {\n                type: 'string',\n                enum: ['insert', 'replace'],\n                enumDescriptions: [\n                    nls.localize('suggest.insertMode.insert', \"Insert suggestion without overwriting text right of the cursor.\"),\n                    nls.localize('suggest.insertMode.replace', \"Insert suggestion and overwrite text right of the cursor.\"),\n                ],\n                default: defaults.insertMode,\n                description: nls.localize('suggest.insertMode', \"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.\")\n            },\n            'editor.suggest.filterGraceful': {\n                type: 'boolean',\n                default: defaults.filterGraceful,\n                description: nls.localize('suggest.filterGraceful', \"Controls whether filtering and sorting suggestions accounts for small typos.\")\n            },\n            'editor.suggest.localityBonus': {\n                type: 'boolean',\n                default: defaults.localityBonus,\n                description: nls.localize('suggest.localityBonus', \"Controls whether sorting favors words that appear close to the cursor.\")\n            },\n            'editor.suggest.shareSuggestSelections': {\n                type: 'boolean',\n                default: defaults.shareSuggestSelections,\n                markdownDescription: nls.localize('suggest.shareSuggestSelections', \"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).\")\n            },\n            'editor.suggest.snippetsPreventQuickSuggestions': {\n                type: 'boolean',\n                default: defaults.snippetsPreventQuickSuggestions,\n                description: nls.localize('suggest.snippetsPreventQuickSuggestions', \"Controls whether an active snippet prevents quick suggestions.\")\n            },\n            'editor.suggest.showIcons': {\n                type: 'boolean',\n                default: defaults.showIcons,\n                description: nls.localize('suggest.showIcons', \"Controls whether to show or hide icons in suggestions.\")\n            },\n            'editor.suggest.showStatusBar': {\n                type: 'boolean',\n                default: defaults.showStatusBar,\n                description: nls.localize('suggest.showStatusBar', \"Controls the visibility of the status bar at the bottom of the suggest widget.\")\n            },\n            'editor.suggest.preview': {\n                type: 'boolean',\n                default: defaults.preview,\n                description: nls.localize('suggest.preview', \"Controls whether to preview the suggestion outcome in the editor.\")\n            },\n            'editor.suggest.showInlineDetails': {\n                type: 'boolean',\n                default: defaults.showInlineDetails,\n                description: nls.localize('suggest.showInlineDetails', \"Controls whether suggest details show inline with the label or only in the details widget\")\n            },\n            'editor.suggest.maxVisibleSuggestions': {\n                type: 'number',\n                deprecationMessage: nls.localize('suggest.maxVisibleSuggestions.dep', \"This setting is deprecated. The suggest widget can now be resized.\"),\n            },\n            'editor.suggest.filteredTypes': {\n                type: 'object',\n                deprecationMessage: nls.localize('deprecated', \"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.\")\n            },\n            'editor.suggest.showMethods': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showMethods', \"When enabled IntelliSense shows `method`-suggestions.\")\n            },\n            'editor.suggest.showFunctions': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFunctions', \"When enabled IntelliSense shows `function`-suggestions.\")\n            },\n            'editor.suggest.showConstructors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstructors', \"When enabled IntelliSense shows `constructor`-suggestions.\")\n            },\n            'editor.suggest.showDeprecated': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showDeprecated', \"When enabled IntelliSense shows `deprecated`-suggestions.\")\n            },\n            'editor.suggest.showFields': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFields', \"When enabled IntelliSense shows `field`-suggestions.\")\n            },\n            'editor.suggest.showVariables': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showVariables', \"When enabled IntelliSense shows `variable`-suggestions.\")\n            },\n            'editor.suggest.showClasses': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showClasss', \"When enabled IntelliSense shows `class`-suggestions.\")\n            },\n            'editor.suggest.showStructs': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showStructs', \"When enabled IntelliSense shows `struct`-suggestions.\")\n            },\n            'editor.suggest.showInterfaces': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showInterfaces', \"When enabled IntelliSense shows `interface`-suggestions.\")\n            },\n            'editor.suggest.showModules': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showModules', \"When enabled IntelliSense shows `module`-suggestions.\")\n            },\n            'editor.suggest.showProperties': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showPropertys', \"When enabled IntelliSense shows `property`-suggestions.\")\n            },\n            'editor.suggest.showEvents': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEvents', \"When enabled IntelliSense shows `event`-suggestions.\")\n            },\n            'editor.suggest.showOperators': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showOperators', \"When enabled IntelliSense shows `operator`-suggestions.\")\n            },\n            'editor.suggest.showUnits': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUnits', \"When enabled IntelliSense shows `unit`-suggestions.\")\n            },\n            'editor.suggest.showValues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showValues', \"When enabled IntelliSense shows `value`-suggestions.\")\n            },\n            'editor.suggest.showConstants': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstants', \"When enabled IntelliSense shows `constant`-suggestions.\")\n            },\n            'editor.suggest.showEnums': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnums', \"When enabled IntelliSense shows `enum`-suggestions.\")\n            },\n            'editor.suggest.showEnumMembers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnumMembers', \"When enabled IntelliSense shows `enumMember`-suggestions.\")\n            },\n            'editor.suggest.showKeywords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showKeywords', \"When enabled IntelliSense shows `keyword`-suggestions.\")\n            },\n            'editor.suggest.showWords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTexts', \"When enabled IntelliSense shows `text`-suggestions.\")\n            },\n            'editor.suggest.showColors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showColors', \"When enabled IntelliSense shows `color`-suggestions.\")\n            },\n            'editor.suggest.showFiles': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFiles', \"When enabled IntelliSense shows `file`-suggestions.\")\n            },\n            'editor.suggest.showReferences': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showReferences', \"When enabled IntelliSense shows `reference`-suggestions.\")\n            },\n            'editor.suggest.showCustomcolors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showCustomcolors', \"When enabled IntelliSense shows `customcolor`-suggestions.\")\n            },\n            'editor.suggest.showFolders': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFolders', \"When enabled IntelliSense shows `folder`-suggestions.\")\n            },\n            'editor.suggest.showTypeParameters': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTypeParameters', \"When enabled IntelliSense shows `typeParameter`-suggestions.\")\n            },\n            'editor.suggest.showSnippets': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showSnippets', \"When enabled IntelliSense shows `snippet`-suggestions.\")\n            },\n            'editor.suggest.showUsers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUsers', \"When enabled IntelliSense shows `user`-suggestions.\")\n            },\n            'editor.suggest.showIssues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showIssues', \"When enabled IntelliSense shows `issues`-suggestions.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertMode: stringSet(input.insertMode, this.defaultValue.insertMode, ['insert', 'replace']),\n            filterGraceful: boolean(input.filterGraceful, this.defaultValue.filterGraceful),\n            snippetsPreventQuickSuggestions: boolean(input.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful),\n            localityBonus: boolean(input.localityBonus, this.defaultValue.localityBonus),\n            shareSuggestSelections: boolean(input.shareSuggestSelections, this.defaultValue.shareSuggestSelections),\n            showIcons: boolean(input.showIcons, this.defaultValue.showIcons),\n            showStatusBar: boolean(input.showStatusBar, this.defaultValue.showStatusBar),\n            preview: boolean(input.preview, this.defaultValue.preview),\n            previewMode: stringSet(input.previewMode, this.defaultValue.previewMode, ['prefix', 'subword', 'subwordSmart']),\n            showInlineDetails: boolean(input.showInlineDetails, this.defaultValue.showInlineDetails),\n            showMethods: boolean(input.showMethods, this.defaultValue.showMethods),\n            showFunctions: boolean(input.showFunctions, this.defaultValue.showFunctions),\n            showConstructors: boolean(input.showConstructors, this.defaultValue.showConstructors),\n            showDeprecated: boolean(input.showDeprecated, this.defaultValue.showDeprecated),\n            showFields: boolean(input.showFields, this.defaultValue.showFields),\n            showVariables: boolean(input.showVariables, this.defaultValue.showVariables),\n            showClasses: boolean(input.showClasses, this.defaultValue.showClasses),\n            showStructs: boolean(input.showStructs, this.defaultValue.showStructs),\n            showInterfaces: boolean(input.showInterfaces, this.defaultValue.showInterfaces),\n            showModules: boolean(input.showModules, this.defaultValue.showModules),\n            showProperties: boolean(input.showProperties, this.defaultValue.showProperties),\n            showEvents: boolean(input.showEvents, this.defaultValue.showEvents),\n            showOperators: boolean(input.showOperators, this.defaultValue.showOperators),\n            showUnits: boolean(input.showUnits, this.defaultValue.showUnits),\n            showValues: boolean(input.showValues, this.defaultValue.showValues),\n            showConstants: boolean(input.showConstants, this.defaultValue.showConstants),\n            showEnums: boolean(input.showEnums, this.defaultValue.showEnums),\n            showEnumMembers: boolean(input.showEnumMembers, this.defaultValue.showEnumMembers),\n            showKeywords: boolean(input.showKeywords, this.defaultValue.showKeywords),\n            showWords: boolean(input.showWords, this.defaultValue.showWords),\n            showColors: boolean(input.showColors, this.defaultValue.showColors),\n            showFiles: boolean(input.showFiles, this.defaultValue.showFiles),\n            showReferences: boolean(input.showReferences, this.defaultValue.showReferences),\n            showFolders: boolean(input.showFolders, this.defaultValue.showFolders),\n            showTypeParameters: boolean(input.showTypeParameters, this.defaultValue.showTypeParameters),\n            showSnippets: boolean(input.showSnippets, this.defaultValue.showSnippets),\n            showUsers: boolean(input.showUsers, this.defaultValue.showUsers),\n            showIssues: boolean(input.showIssues, this.defaultValue.showIssues),\n        };\n    }\n}\nclass SmartSelect extends BaseEditorOption {\n    constructor() {\n        super(104 /* EditorOption.smartSelect */, 'smartSelect', {\n            selectLeadingAndTrailingWhitespace: true\n        }, {\n            'editor.smartSelect.selectLeadingAndTrailingWhitespace': {\n                description: nls.localize('selectLeadingAndTrailingWhitespace', \"Whether leading and trailing whitespace should always be selected.\"),\n                default: true,\n                type: 'boolean'\n            }\n        });\n    }\n    validate(input) {\n        if (!input || typeof input !== 'object') {\n            return this.defaultValue;\n        }\n        return {\n            selectLeadingAndTrailingWhitespace: boolean(input.selectLeadingAndTrailingWhitespace, this.defaultValue.selectLeadingAndTrailingWhitespace)\n        };\n    }\n}\n//#endregion\n//#region tabFocusMode\nclass EditorTabFocusMode extends ComputedEditorOption {\n    constructor() {\n        super(132 /* EditorOption.tabFocusMode */);\n    }\n    compute(env, options, _) {\n        const readOnly = options.get(83 /* EditorOption.readOnly */);\n        return (readOnly ? true : env.tabFocusMode);\n    }\n}\nfunction _wrappingIndentFromString(wrappingIndent) {\n    switch (wrappingIndent) {\n        case 'none': return 0 /* WrappingIndent.None */;\n        case 'same': return 1 /* WrappingIndent.Same */;\n        case 'indent': return 2 /* WrappingIndent.Indent */;\n        case 'deepIndent': return 3 /* WrappingIndent.DeepIndent */;\n    }\n}\nclass EditorWrappingInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(134 /* EditorOption.wrappingInfo */);\n    }\n    compute(env, options, _) {\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        return {\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            isWordWrapMinified: layoutInfo.isWordWrapMinified,\n            isViewportWrapping: layoutInfo.isViewportWrapping,\n            wrappingColumn: layoutInfo.wrappingColumn,\n        };\n    }\n}\nclass EditorDropIntoEditor extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true };\n        super(32 /* EditorOption.dropIntoEditor */, 'dropIntoEditor', defaults, {\n            'editor.dropIntoEditor.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('dropIntoEditor.enabled', \"Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).\"),\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled)\n        };\n    }\n}\n//#endregion\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace';\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n    fontFamily: (platform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\n    fontWeight: 'normal',\n    fontSize: (platform.isMacintosh ? 12 : 14),\n    lineHeight: 0,\n    letterSpacing: 0,\n};\n/**\n * @internal\n */\nexport const editorOptionsRegistry = [];\nfunction register(option) {\n    editorOptionsRegistry[option.id] = option;\n    return option;\n}\nexport const EditorOptions = {\n    acceptSuggestionOnCommitCharacter: register(new EditorBooleanOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */, 'acceptSuggestionOnCommitCharacter', true, { markdownDescription: nls.localize('acceptSuggestionOnCommitCharacter', \"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`; `) can be a commit character that accepts a suggestion and types that character.\") })),\n    acceptSuggestionOnEnter: register(new EditorStringEnumOption(1 /* EditorOption.acceptSuggestionOnEnter */, 'acceptSuggestionOnEnter', 'on', ['on', 'smart', 'off'], {\n        markdownEnumDescriptions: [\n            '',\n            nls.localize('acceptSuggestionOnEnterSmart', \"Only accept a suggestion with `Enter` when it makes a textual change.\"),\n            ''\n        ],\n        markdownDescription: nls.localize('acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\")\n    })),\n    accessibilitySupport: register(new EditorAccessibilitySupport()),\n    accessibilityPageSize: register(new EditorIntOption(3 /* EditorOption.accessibilityPageSize */, 'accessibilityPageSize', 10, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        description: nls.localize('accessibilityPageSize', \"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.\")\n    })),\n    ariaLabel: register(new EditorStringOption(4 /* EditorOption.ariaLabel */, 'ariaLabel', nls.localize('editorViewAccessibleLabel', \"Editor content\"))),\n    autoClosingBrackets: register(new EditorStringEnumOption(5 /* EditorOption.autoClosingBrackets */, 'autoClosingBrackets', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingBrackets.languageDefined', \"Use language configurations to determine when to autoclose brackets.\"),\n            nls.localize('editor.autoClosingBrackets.beforeWhitespace', \"Autoclose brackets only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingBrackets', \"Controls whether the editor should automatically close brackets after the user adds an opening bracket.\")\n    })),\n    autoClosingDelete: register(new EditorStringEnumOption(6 /* EditorOption.autoClosingDelete */, 'autoClosingDelete', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingDelete.auto', \"Remove adjacent closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingDelete', \"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.\")\n    })),\n    autoClosingOvertype: register(new EditorStringEnumOption(7 /* EditorOption.autoClosingOvertype */, 'autoClosingOvertype', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingOvertype.auto', \"Type over closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingOvertype', \"Controls whether the editor should type over closing quotes or brackets.\")\n    })),\n    autoClosingQuotes: register(new EditorStringEnumOption(8 /* EditorOption.autoClosingQuotes */, 'autoClosingQuotes', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingQuotes.languageDefined', \"Use language configurations to determine when to autoclose quotes.\"),\n            nls.localize('editor.autoClosingQuotes.beforeWhitespace', \"Autoclose quotes only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingQuotes', \"Controls whether the editor should automatically close quotes after the user adds an opening quote.\")\n    })),\n    autoIndent: register(new EditorEnumOption(9 /* EditorOption.autoIndent */, 'autoIndent', 4 /* EditorAutoIndentStrategy.Full */, 'full', ['none', 'keep', 'brackets', 'advanced', 'full'], _autoIndentFromString, {\n        enumDescriptions: [\n            nls.localize('editor.autoIndent.none', \"The editor will not insert indentation automatically.\"),\n            nls.localize('editor.autoIndent.keep', \"The editor will keep the current line's indentation.\"),\n            nls.localize('editor.autoIndent.brackets', \"The editor will keep the current line's indentation and honor language defined brackets.\"),\n            nls.localize('editor.autoIndent.advanced', \"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.\"),\n            nls.localize('editor.autoIndent.full', \"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.\"),\n        ],\n        description: nls.localize('autoIndent', \"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\")\n    })),\n    automaticLayout: register(new EditorBooleanOption(10 /* EditorOption.automaticLayout */, 'automaticLayout', false)),\n    autoSurround: register(new EditorStringEnumOption(11 /* EditorOption.autoSurround */, 'autoSurround', 'languageDefined', ['languageDefined', 'quotes', 'brackets', 'never'], {\n        enumDescriptions: [\n            nls.localize('editor.autoSurround.languageDefined', \"Use language configurations to determine when to automatically surround selections.\"),\n            nls.localize('editor.autoSurround.quotes', \"Surround with quotes but not brackets.\"),\n            nls.localize('editor.autoSurround.brackets', \"Surround with brackets but not quotes.\"),\n            ''\n        ],\n        description: nls.localize('autoSurround', \"Controls whether the editor should automatically surround selections when typing quotes or brackets.\")\n    })),\n    bracketPairColorization: register(new BracketPairColorization()),\n    bracketPairGuides: register(new GuideOptions()),\n    stickyTabStops: register(new EditorBooleanOption(106 /* EditorOption.stickyTabStops */, 'stickyTabStops', false, { description: nls.localize('stickyTabStops', \"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.\") })),\n    codeLens: register(new EditorBooleanOption(14 /* EditorOption.codeLens */, 'codeLens', true, { description: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\") })),\n    codeLensFontFamily: register(new EditorStringOption(15 /* EditorOption.codeLensFontFamily */, 'codeLensFontFamily', '', { description: nls.localize('codeLensFontFamily', \"Controls the font family for CodeLens.\") })),\n    codeLensFontSize: register(new EditorIntOption(16 /* EditorOption.codeLensFontSize */, 'codeLensFontSize', 0, 0, 100, {\n        type: 'number',\n        default: 0,\n        minimum: 0,\n        maximum: 100,\n        markdownDescription: nls.localize('codeLensFontSize', \"Controls the font size in pixels for CodeLens. When set to `0`, 90% of `#editor.fontSize#` is used.\")\n    })),\n    colorDecorators: register(new EditorBooleanOption(17 /* EditorOption.colorDecorators */, 'colorDecorators', true, { description: nls.localize('colorDecorators', \"Controls whether the editor should render the inline color decorators and color picker.\") })),\n    columnSelection: register(new EditorBooleanOption(18 /* EditorOption.columnSelection */, 'columnSelection', false, { description: nls.localize('columnSelection', \"Enable that the selection with the mouse and keys is doing column selection.\") })),\n    comments: register(new EditorComments()),\n    contextmenu: register(new EditorBooleanOption(20 /* EditorOption.contextmenu */, 'contextmenu', true)),\n    copyWithSyntaxHighlighting: register(new EditorBooleanOption(21 /* EditorOption.copyWithSyntaxHighlighting */, 'copyWithSyntaxHighlighting', true, { description: nls.localize('copyWithSyntaxHighlighting', \"Controls whether syntax highlighting should be copied into the clipboard.\") })),\n    cursorBlinking: register(new EditorEnumOption(22 /* EditorOption.cursorBlinking */, 'cursorBlinking', 1 /* TextEditorCursorBlinkingStyle.Blink */, 'blink', ['blink', 'smooth', 'phase', 'expand', 'solid'], _cursorBlinkingStyleFromString, { description: nls.localize('cursorBlinking', \"Control the cursor animation style.\") })),\n    cursorSmoothCaretAnimation: register(new EditorBooleanOption(23 /* EditorOption.cursorSmoothCaretAnimation */, 'cursorSmoothCaretAnimation', false, { description: nls.localize('cursorSmoothCaretAnimation', \"Controls whether the smooth caret animation should be enabled.\") })),\n    cursorStyle: register(new EditorEnumOption(24 /* EditorOption.cursorStyle */, 'cursorStyle', TextEditorCursorStyle.Line, 'line', ['line', 'block', 'underline', 'line-thin', 'block-outline', 'underline-thin'], _cursorStyleFromString, { description: nls.localize('cursorStyle', \"Controls the cursor style.\") })),\n    cursorSurroundingLines: register(new EditorIntOption(25 /* EditorOption.cursorSurroundingLines */, 'cursorSurroundingLines', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('cursorSurroundingLines', \"Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.\") })),\n    cursorSurroundingLinesStyle: register(new EditorStringEnumOption(26 /* EditorOption.cursorSurroundingLinesStyle */, 'cursorSurroundingLinesStyle', 'default', ['default', 'all'], {\n        enumDescriptions: [\n            nls.localize('cursorSurroundingLinesStyle.default', \"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.\"),\n            nls.localize('cursorSurroundingLinesStyle.all', \"`cursorSurroundingLines` is enforced always.\")\n        ],\n        description: nls.localize('cursorSurroundingLinesStyle', \"Controls when `cursorSurroundingLines` should be enforced.\")\n    })),\n    cursorWidth: register(new EditorIntOption(27 /* EditorOption.cursorWidth */, 'cursorWidth', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { markdownDescription: nls.localize('cursorWidth', \"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.\") })),\n    disableLayerHinting: register(new EditorBooleanOption(28 /* EditorOption.disableLayerHinting */, 'disableLayerHinting', false)),\n    disableMonospaceOptimizations: register(new EditorBooleanOption(29 /* EditorOption.disableMonospaceOptimizations */, 'disableMonospaceOptimizations', false)),\n    domReadOnly: register(new EditorBooleanOption(30 /* EditorOption.domReadOnly */, 'domReadOnly', false)),\n    dragAndDrop: register(new EditorBooleanOption(31 /* EditorOption.dragAndDrop */, 'dragAndDrop', true, { description: nls.localize('dragAndDrop', \"Controls whether the editor should allow moving selections via drag and drop.\") })),\n    emptySelectionClipboard: register(new EditorEmptySelectionClipboard()),\n    dropIntoEditor: register(new EditorDropIntoEditor()),\n    experimental: register(new EditorExperimental()),\n    extraEditorClassName: register(new EditorStringOption(35 /* EditorOption.extraEditorClassName */, 'extraEditorClassName', '')),\n    fastScrollSensitivity: register(new EditorFloatOption(36 /* EditorOption.fastScrollSensitivity */, 'fastScrollSensitivity', 5, x => (x <= 0 ? 5 : x), { markdownDescription: nls.localize('fastScrollSensitivity', \"Scrolling speed multiplier when pressing `Alt`.\") })),\n    find: register(new EditorFind()),\n    fixedOverflowWidgets: register(new EditorBooleanOption(38 /* EditorOption.fixedOverflowWidgets */, 'fixedOverflowWidgets', false)),\n    folding: register(new EditorBooleanOption(39 /* EditorOption.folding */, 'folding', true, { description: nls.localize('folding', \"Controls whether the editor has code folding enabled.\") })),\n    foldingStrategy: register(new EditorStringEnumOption(40 /* EditorOption.foldingStrategy */, 'foldingStrategy', 'auto', ['auto', 'indentation'], {\n        enumDescriptions: [\n            nls.localize('foldingStrategy.auto', \"Use a language-specific folding strategy if available, else the indentation-based one.\"),\n            nls.localize('foldingStrategy.indentation', \"Use the indentation-based folding strategy.\"),\n        ],\n        description: nls.localize('foldingStrategy', \"Controls the strategy for computing folding ranges.\")\n    })),\n    foldingHighlight: register(new EditorBooleanOption(41 /* EditorOption.foldingHighlight */, 'foldingHighlight', true, { description: nls.localize('foldingHighlight', \"Controls whether the editor should highlight folded ranges.\") })),\n    foldingImportsByDefault: register(new EditorBooleanOption(42 /* EditorOption.foldingImportsByDefault */, 'foldingImportsByDefault', false, { description: nls.localize('foldingImportsByDefault', \"Controls whether the editor automatically collapses import ranges.\") })),\n    foldingMaximumRegions: register(new EditorIntOption(43 /* EditorOption.foldingMaximumRegions */, 'foldingMaximumRegions', 5000, 10, 65000, // limit must be less than foldingRanges MAX_FOLDING_REGIONS\n    { description: nls.localize('foldingMaximumRegions', \"The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.\") })),\n    unfoldOnClickAfterEndOfLine: register(new EditorBooleanOption(44 /* EditorOption.unfoldOnClickAfterEndOfLine */, 'unfoldOnClickAfterEndOfLine', false, { description: nls.localize('unfoldOnClickAfterEndOfLine', \"Controls whether clicking on the empty content after a folded line will unfold the line.\") })),\n    fontFamily: register(new EditorStringOption(45 /* EditorOption.fontFamily */, 'fontFamily', EDITOR_FONT_DEFAULTS.fontFamily, { description: nls.localize('fontFamily', \"Controls the font family.\") })),\n    fontInfo: register(new EditorFontInfo()),\n    fontLigatures2: register(new EditorFontLigatures()),\n    fontSize: register(new EditorFontSize()),\n    fontWeight: register(new EditorFontWeight()),\n    formatOnPaste: register(new EditorBooleanOption(50 /* EditorOption.formatOnPaste */, 'formatOnPaste', false, { description: nls.localize('formatOnPaste', \"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.\") })),\n    formatOnType: register(new EditorBooleanOption(51 /* EditorOption.formatOnType */, 'formatOnType', false, { description: nls.localize('formatOnType', \"Controls whether the editor should automatically format the line after typing.\") })),\n    glyphMargin: register(new EditorBooleanOption(52 /* EditorOption.glyphMargin */, 'glyphMargin', true, { description: nls.localize('glyphMargin', \"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.\") })),\n    gotoLocation: register(new EditorGoToLocation()),\n    hideCursorInOverviewRuler: register(new EditorBooleanOption(54 /* EditorOption.hideCursorInOverviewRuler */, 'hideCursorInOverviewRuler', false, { description: nls.localize('hideCursorInOverviewRuler', \"Controls whether the cursor should be hidden in the overview ruler.\") })),\n    hover: register(new EditorHover()),\n    inDiffEditor: register(new EditorBooleanOption(56 /* EditorOption.inDiffEditor */, 'inDiffEditor', false)),\n    letterSpacing: register(new EditorFloatOption(58 /* EditorOption.letterSpacing */, 'letterSpacing', EDITOR_FONT_DEFAULTS.letterSpacing, x => EditorFloatOption.clamp(x, -5, 20), { description: nls.localize('letterSpacing', \"Controls the letter spacing in pixels.\") })),\n    lightbulb: register(new EditorLightbulb()),\n    lineDecorationsWidth: register(new SimpleEditorOption(60 /* EditorOption.lineDecorationsWidth */, 'lineDecorationsWidth', 10)),\n    lineHeight: register(new EditorLineHeight()),\n    lineNumbers: register(new EditorRenderLineNumbersOption()),\n    lineNumbersMinChars: register(new EditorIntOption(63 /* EditorOption.lineNumbersMinChars */, 'lineNumbersMinChars', 5, 1, 300)),\n    linkedEditing: register(new EditorBooleanOption(64 /* EditorOption.linkedEditing */, 'linkedEditing', false, { description: nls.localize('linkedEditing', \"Controls whether the editor has linked editing enabled. Depending on the language, related symbols, e.g. HTML tags, are updated while editing.\") })),\n    links: register(new EditorBooleanOption(65 /* EditorOption.links */, 'links', true, { description: nls.localize('links', \"Controls whether the editor should detect links and make them clickable.\") })),\n    matchBrackets: register(new EditorStringEnumOption(66 /* EditorOption.matchBrackets */, 'matchBrackets', 'always', ['always', 'near', 'never'], { description: nls.localize('matchBrackets', \"Highlight matching brackets.\") })),\n    minimap: register(new EditorMinimap()),\n    mouseStyle: register(new EditorStringEnumOption(68 /* EditorOption.mouseStyle */, 'mouseStyle', 'text', ['text', 'default', 'copy'])),\n    mouseWheelScrollSensitivity: register(new EditorFloatOption(69 /* EditorOption.mouseWheelScrollSensitivity */, 'mouseWheelScrollSensitivity', 1, x => (x === 0 ? 1 : x), { markdownDescription: nls.localize('mouseWheelScrollSensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\") })),\n    mouseWheelZoom: register(new EditorBooleanOption(70 /* EditorOption.mouseWheelZoom */, 'mouseWheelZoom', false, { markdownDescription: nls.localize('mouseWheelZoom', \"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.\") })),\n    multiCursorMergeOverlapping: register(new EditorBooleanOption(71 /* EditorOption.multiCursorMergeOverlapping */, 'multiCursorMergeOverlapping', true, { description: nls.localize('multiCursorMergeOverlapping', \"Merge multiple cursors when they are overlapping.\") })),\n    multiCursorModifier: register(new EditorEnumOption(72 /* EditorOption.multiCursorModifier */, 'multiCursorModifier', 'altKey', 'alt', ['ctrlCmd', 'alt'], _multiCursorModifierFromString, {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n            nls.localize('multiCursorModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n        ],\n        markdownDescription: nls.localize({\n            key: 'multiCursorModifier',\n            comment: [\n                '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n            ]\n        }, \"The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).\")\n    })),\n    multiCursorPaste: register(new EditorStringEnumOption(73 /* EditorOption.multiCursorPaste */, 'multiCursorPaste', 'spread', ['spread', 'full'], {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorPaste.spread', \"Each cursor pastes a single line of the text.\"),\n            nls.localize('multiCursorPaste.full', \"Each cursor pastes the full text.\")\n        ],\n        markdownDescription: nls.localize('multiCursorPaste', \"Controls pasting when the line count of the pasted text matches the cursor count.\")\n    })),\n    occurrencesHighlight: register(new EditorBooleanOption(74 /* EditorOption.occurrencesHighlight */, 'occurrencesHighlight', true, { description: nls.localize('occurrencesHighlight', \"Controls whether the editor should highlight semantic symbol occurrences.\") })),\n    overviewRulerBorder: register(new EditorBooleanOption(75 /* EditorOption.overviewRulerBorder */, 'overviewRulerBorder', true, { description: nls.localize('overviewRulerBorder', \"Controls whether a border should be drawn around the overview ruler.\") })),\n    overviewRulerLanes: register(new EditorIntOption(76 /* EditorOption.overviewRulerLanes */, 'overviewRulerLanes', 3, 0, 3)),\n    padding: register(new EditorPadding()),\n    parameterHints: register(new EditorParameterHints()),\n    peekWidgetDefaultFocus: register(new EditorStringEnumOption(79 /* EditorOption.peekWidgetDefaultFocus */, 'peekWidgetDefaultFocus', 'tree', ['tree', 'editor'], {\n        enumDescriptions: [\n            nls.localize('peekWidgetDefaultFocus.tree', \"Focus the tree when opening peek\"),\n            nls.localize('peekWidgetDefaultFocus.editor', \"Focus the editor when opening peek\")\n        ],\n        description: nls.localize('peekWidgetDefaultFocus', \"Controls whether to focus the inline editor or the tree in the peek widget.\")\n    })),\n    definitionLinkOpensInPeek: register(new EditorBooleanOption(80 /* EditorOption.definitionLinkOpensInPeek */, 'definitionLinkOpensInPeek', false, { description: nls.localize('definitionLinkOpensInPeek', \"Controls whether the Go to Definition mouse gesture always opens the peek widget.\") })),\n    quickSuggestions: register(new EditorQuickSuggestions()),\n    quickSuggestionsDelay: register(new EditorIntOption(82 /* EditorOption.quickSuggestionsDelay */, 'quickSuggestionsDelay', 10, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('quickSuggestionsDelay', \"Controls the delay in milliseconds after which quick suggestions will show up.\") })),\n    readOnly: register(new EditorBooleanOption(83 /* EditorOption.readOnly */, 'readOnly', false)),\n    renameOnType: register(new EditorBooleanOption(84 /* EditorOption.renameOnType */, 'renameOnType', false, { description: nls.localize('renameOnType', \"Controls whether the editor auto renames on type.\"), markdownDeprecationMessage: nls.localize('renameOnTypeDeprecate', \"Deprecated, use `editor.linkedEditing` instead.\") })),\n    renderControlCharacters: register(new EditorBooleanOption(85 /* EditorOption.renderControlCharacters */, 'renderControlCharacters', true, { description: nls.localize('renderControlCharacters', \"Controls whether the editor should render control characters.\"), restricted: true })),\n    renderFinalNewline: register(new EditorBooleanOption(86 /* EditorOption.renderFinalNewline */, 'renderFinalNewline', true, { description: nls.localize('renderFinalNewline', \"Render last line number when the file ends with a newline.\") })),\n    renderLineHighlight: register(new EditorStringEnumOption(87 /* EditorOption.renderLineHighlight */, 'renderLineHighlight', 'line', ['none', 'gutter', 'line', 'all'], {\n        enumDescriptions: [\n            '',\n            '',\n            '',\n            nls.localize('renderLineHighlight.all', \"Highlights both the gutter and the current line.\"),\n        ],\n        description: nls.localize('renderLineHighlight', \"Controls how the editor should render the current line highlight.\")\n    })),\n    renderLineHighlightOnlyWhenFocus: register(new EditorBooleanOption(88 /* EditorOption.renderLineHighlightOnlyWhenFocus */, 'renderLineHighlightOnlyWhenFocus', false, { description: nls.localize('renderLineHighlightOnlyWhenFocus', \"Controls if the editor should render the current line highlight only when the editor is focused.\") })),\n    renderValidationDecorations: register(new EditorStringEnumOption(89 /* EditorOption.renderValidationDecorations */, 'renderValidationDecorations', 'editable', ['editable', 'on', 'off'])),\n    renderWhitespace: register(new EditorStringEnumOption(90 /* EditorOption.renderWhitespace */, 'renderWhitespace', 'selection', ['none', 'boundary', 'selection', 'trailing', 'all'], {\n        enumDescriptions: [\n            '',\n            nls.localize('renderWhitespace.boundary', \"Render whitespace characters except for single spaces between words.\"),\n            nls.localize('renderWhitespace.selection', \"Render whitespace characters only on selected text.\"),\n            nls.localize('renderWhitespace.trailing', \"Render only trailing whitespace characters.\"),\n            ''\n        ],\n        description: nls.localize('renderWhitespace', \"Controls how the editor should render whitespace characters.\")\n    })),\n    revealHorizontalRightPadding: register(new EditorIntOption(91 /* EditorOption.revealHorizontalRightPadding */, 'revealHorizontalRightPadding', 30, 0, 1000)),\n    roundedSelection: register(new EditorBooleanOption(92 /* EditorOption.roundedSelection */, 'roundedSelection', true, { description: nls.localize('roundedSelection', \"Controls whether selections should have rounded corners.\") })),\n    rulers: register(new EditorRulers()),\n    scrollbar: register(new EditorScrollbar()),\n    scrollBeyondLastColumn: register(new EditorIntOption(95 /* EditorOption.scrollBeyondLastColumn */, 'scrollBeyondLastColumn', 4, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('scrollBeyondLastColumn', \"Controls the number of extra characters beyond which the editor will scroll horizontally.\") })),\n    scrollBeyondLastLine: register(new EditorBooleanOption(96 /* EditorOption.scrollBeyondLastLine */, 'scrollBeyondLastLine', true, { description: nls.localize('scrollBeyondLastLine', \"Controls whether the editor will scroll beyond the last line.\") })),\n    scrollPredominantAxis: register(new EditorBooleanOption(97 /* EditorOption.scrollPredominantAxis */, 'scrollPredominantAxis', true, { description: nls.localize('scrollPredominantAxis', \"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.\") })),\n    selectionClipboard: register(new EditorBooleanOption(98 /* EditorOption.selectionClipboard */, 'selectionClipboard', true, {\n        description: nls.localize('selectionClipboard', \"Controls whether the Linux primary clipboard should be supported.\"),\n        included: platform.isLinux\n    })),\n    selectionHighlight: register(new EditorBooleanOption(99 /* EditorOption.selectionHighlight */, 'selectionHighlight', true, { description: nls.localize('selectionHighlight', \"Controls whether the editor should highlight matches similar to the selection.\") })),\n    selectOnLineNumbers: register(new EditorBooleanOption(100 /* EditorOption.selectOnLineNumbers */, 'selectOnLineNumbers', true)),\n    showFoldingControls: register(new EditorStringEnumOption(101 /* EditorOption.showFoldingControls */, 'showFoldingControls', 'mouseover', ['always', 'never', 'mouseover'], {\n        enumDescriptions: [\n            nls.localize('showFoldingControls.always', \"Always show the folding controls.\"),\n            nls.localize('showFoldingControls.never', \"Never show the folding controls and reduce the gutter size.\"),\n            nls.localize('showFoldingControls.mouseover', \"Only show the folding controls when the mouse is over the gutter.\"),\n        ],\n        description: nls.localize('showFoldingControls', \"Controls when the folding controls on the gutter are shown.\")\n    })),\n    showUnused: register(new EditorBooleanOption(102 /* EditorOption.showUnused */, 'showUnused', true, { description: nls.localize('showUnused', \"Controls fading out of unused code.\") })),\n    showDeprecated: register(new EditorBooleanOption(128 /* EditorOption.showDeprecated */, 'showDeprecated', true, { description: nls.localize('showDeprecated', \"Controls strikethrough deprecated variables.\") })),\n    inlayHints: register(new EditorInlayHints()),\n    snippetSuggestions: register(new EditorStringEnumOption(103 /* EditorOption.snippetSuggestions */, 'snippetSuggestions', 'inline', ['top', 'bottom', 'inline', 'none'], {\n        enumDescriptions: [\n            nls.localize('snippetSuggestions.top', \"Show snippet suggestions on top of other suggestions.\"),\n            nls.localize('snippetSuggestions.bottom', \"Show snippet suggestions below other suggestions.\"),\n            nls.localize('snippetSuggestions.inline', \"Show snippets suggestions with other suggestions.\"),\n            nls.localize('snippetSuggestions.none', \"Do not show snippet suggestions.\"),\n        ],\n        description: nls.localize('snippetSuggestions', \"Controls whether snippets are shown with other suggestions and how they are sorted.\")\n    })),\n    smartSelect: register(new SmartSelect()),\n    smoothScrolling: register(new EditorBooleanOption(105 /* EditorOption.smoothScrolling */, 'smoothScrolling', false, { description: nls.localize('smoothScrolling', \"Controls whether the editor will scroll using an animation.\") })),\n    stopRenderingLineAfter: register(new EditorIntOption(107 /* EditorOption.stopRenderingLineAfter */, 'stopRenderingLineAfter', 10000, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    suggest: register(new EditorSuggest()),\n    inlineSuggest: register(new InlineEditorSuggest()),\n    suggestFontSize: register(new EditorIntOption(109 /* EditorOption.suggestFontSize */, 'suggestFontSize', 0, 0, 1000, { markdownDescription: nls.localize('suggestFontSize', \"Font size for the suggest widget. When set to {0}, the value of {1} is used.\", '`0`', '`#editor.fontSize#`') })),\n    suggestLineHeight: register(new EditorIntOption(110 /* EditorOption.suggestLineHeight */, 'suggestLineHeight', 0, 0, 1000, { markdownDescription: nls.localize('suggestLineHeight', \"Line height for the suggest widget. When set to {0}, the value of {1} is used. The minimum value is 8.\", '`0`', '`#editor.lineHeight#`') })),\n    suggestOnTriggerCharacters: register(new EditorBooleanOption(111 /* EditorOption.suggestOnTriggerCharacters */, 'suggestOnTriggerCharacters', true, { description: nls.localize('suggestOnTriggerCharacters', \"Controls whether suggestions should automatically show up when typing trigger characters.\") })),\n    suggestSelection: register(new EditorStringEnumOption(112 /* EditorOption.suggestSelection */, 'suggestSelection', 'first', ['first', 'recentlyUsed', 'recentlyUsedByPrefix'], {\n        markdownEnumDescriptions: [\n            nls.localize('suggestSelection.first', \"Always select the first suggestion.\"),\n            nls.localize('suggestSelection.recentlyUsed', \"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\"),\n            nls.localize('suggestSelection.recentlyUsedByPrefix', \"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.\"),\n        ],\n        description: nls.localize('suggestSelection', \"Controls how suggestions are pre-selected when showing the suggest list.\")\n    })),\n    tabCompletion: register(new EditorStringEnumOption(113 /* EditorOption.tabCompletion */, 'tabCompletion', 'off', ['on', 'off', 'onlySnippets'], {\n        enumDescriptions: [\n            nls.localize('tabCompletion.on', \"Tab complete will insert the best matching suggestion when pressing tab.\"),\n            nls.localize('tabCompletion.off', \"Disable tab completions.\"),\n            nls.localize('tabCompletion.onlySnippets', \"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.\"),\n        ],\n        description: nls.localize('tabCompletion', \"Enables tab completions.\")\n    })),\n    tabIndex: register(new EditorIntOption(114 /* EditorOption.tabIndex */, 'tabIndex', 0, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    unicodeHighlight: register(new UnicodeHighlight()),\n    unusualLineTerminators: register(new EditorStringEnumOption(116 /* EditorOption.unusualLineTerminators */, 'unusualLineTerminators', 'prompt', ['auto', 'off', 'prompt'], {\n        enumDescriptions: [\n            nls.localize('unusualLineTerminators.auto', \"Unusual line terminators are automatically removed.\"),\n            nls.localize('unusualLineTerminators.off', \"Unusual line terminators are ignored.\"),\n            nls.localize('unusualLineTerminators.prompt', \"Unusual line terminators prompt to be removed.\"),\n        ],\n        description: nls.localize('unusualLineTerminators', \"Remove unusual line terminators that might cause problems.\")\n    })),\n    useShadowDOM: register(new EditorBooleanOption(117 /* EditorOption.useShadowDOM */, 'useShadowDOM', true)),\n    useTabStops: register(new EditorBooleanOption(118 /* EditorOption.useTabStops */, 'useTabStops', true, { description: nls.localize('useTabStops', \"Inserting and deleting whitespace follows tab stops.\") })),\n    wordSeparators: register(new EditorStringOption(119 /* EditorOption.wordSeparators */, 'wordSeparators', USUAL_WORD_SEPARATORS, { description: nls.localize('wordSeparators', \"Characters that will be used as word separators when doing word related navigations or operations.\") })),\n    wordWrap: register(new EditorStringEnumOption(120 /* EditorOption.wordWrap */, 'wordWrap', 'off', ['off', 'on', 'wordWrapColumn', 'bounded'], {\n        markdownEnumDescriptions: [\n            nls.localize('wordWrap.off', \"Lines will never wrap.\"),\n            nls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n            nls.localize({\n                key: 'wordWrap.wordWrapColumn',\n                comment: [\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at `#editor.wordWrapColumn#`.\"),\n            nls.localize({\n                key: 'wordWrap.bounded',\n                comment: [\n                    '- viewport means the edge of the visible window size.',\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.\"),\n        ],\n        description: nls.localize({\n            key: 'wordWrap',\n            comment: [\n                '- \\'off\\', \\'on\\', \\'wordWrapColumn\\' and \\'bounded\\' refer to values the setting can take and should not be localized.',\n                '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n            ]\n        }, \"Controls how lines should wrap.\")\n    })),\n    wordWrapBreakAfterCharacters: register(new EditorStringOption(121 /* EditorOption.wordWrapBreakAfterCharacters */, 'wordWrapBreakAfterCharacters', \n    // allow-any-unicode-next-line\n    ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣')),\n    wordWrapBreakBeforeCharacters: register(new EditorStringOption(122 /* EditorOption.wordWrapBreakBeforeCharacters */, 'wordWrapBreakBeforeCharacters', \n    // allow-any-unicode-next-line\n    '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋')),\n    wordWrapColumn: register(new EditorIntOption(123 /* EditorOption.wordWrapColumn */, 'wordWrapColumn', 80, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        markdownDescription: nls.localize({\n            key: 'wordWrapColumn',\n            comment: [\n                '- `editor.wordWrap` refers to a different setting and should not be localized.',\n                '- \\'wordWrapColumn\\' and \\'bounded\\' refer to values the different setting can take and should not be localized.'\n            ]\n        }, \"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.\")\n    })),\n    wordWrapOverride1: register(new EditorStringEnumOption(124 /* EditorOption.wordWrapOverride1 */, 'wordWrapOverride1', 'inherit', ['off', 'on', 'inherit'])),\n    wordWrapOverride2: register(new EditorStringEnumOption(125 /* EditorOption.wordWrapOverride2 */, 'wordWrapOverride2', 'inherit', ['off', 'on', 'inherit'])),\n    wrappingIndent: register(new EditorEnumOption(126 /* EditorOption.wrappingIndent */, 'wrappingIndent', 1 /* WrappingIndent.Same */, 'same', ['none', 'same', 'indent', 'deepIndent'], _wrappingIndentFromString, {\n        enumDescriptions: [\n            nls.localize('wrappingIndent.none', \"No indentation. Wrapped lines begin at column 1.\"),\n            nls.localize('wrappingIndent.same', \"Wrapped lines get the same indentation as the parent.\"),\n            nls.localize('wrappingIndent.indent', \"Wrapped lines get +1 indentation toward the parent.\"),\n            nls.localize('wrappingIndent.deepIndent', \"Wrapped lines get +2 indentation toward the parent.\"),\n        ],\n        description: nls.localize('wrappingIndent', \"Controls the indentation of wrapped lines.\"),\n    })),\n    wrappingStrategy: register(new EditorStringEnumOption(127 /* EditorOption.wrappingStrategy */, 'wrappingStrategy', 'simple', ['simple', 'advanced'], {\n        enumDescriptions: [\n            nls.localize('wrappingStrategy.simple', \"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.\"),\n            nls.localize('wrappingStrategy.advanced', \"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.\")\n        ],\n        description: nls.localize('wrappingStrategy', \"Controls the algorithm that computes wrapping points.\")\n    })),\n    // Leave these at the end (because they have dependencies!)\n    editorClassName: register(new EditorClassName()),\n    pixelRatio: register(new EditorPixelRatio()),\n    tabFocusMode: register(new EditorTabFocusMode()),\n    layoutInfo: register(new EditorLayoutInfoComputer()),\n    wrappingInfo: register(new EditorWrappingInfoComputer())\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,OAAO,KAAKC,QAAQ,MAAM,kCAAkC;AAC5D,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,OAAO,KAAKC,MAAM,MAAM,gCAAgC;AACxD,OAAO,KAAKC,OAAO,MAAM,iCAAiC;AAC1D,SAASC,qBAAqB,QAAQ,8BAA8B;AACpE;AACA;AACA;AACA;AACA,OAAO,IAAMC,oBAAoB,GAAG,CAAC;AACrC;AACA;AACA;AACA;AACA,WAAaC,yBAAyB;EAClC;AACJ;AACA;EACI,mCAAYC,MAAM,EAAE;IAAA;IAChB,IAAI,CAACC,OAAO,GAAGD,MAAM;EACzB;EAAC;IAAA;IAAA,OACD,oBAAWE,EAAE,EAAE;MACX,OAAO,IAAI,CAACD,OAAO,CAACC,EAAE,CAAC;IAC3B;EAAC;EAAA;AAAA;AAEL;AACA;AACA;AACA,WAAaC,oBAAoB,6BAC7B,gCAAc;EAAA;EACV,IAAI,CAACC,wBAAwB,GAAG,IAAI;EACpC,IAAI,CAACC,wBAAwB,GAAG,CAAC;EACjC,IAAI,CAACC,uBAAuB,GAAG,CAAC;AACpC,CAAC;AAEL;AACA;AACA;AAFA,IAGMC,gBAAgB;EAClB,0BAAYL,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM,EAAE;IAAA;IACxC,IAAI,CAACR,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACM,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EAAC;IAAA;IAAA,OACD,qBAAYC,KAAK,EAAEC,MAAM,EAAE;MACvB,OAAOC,YAAW,CAACF,KAAK,EAAEC,MAAM,CAAC;IACrC;EAAC;IAAA;IAAA,OACD,iBAAQE,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB,OAAOA,KAAK;IAChB;EAAC;EAAA;AAAA;AAEL,WAAaK,iBAAiB,6BAC1B,2BAAYC,QAAQ,EAAEC,SAAS,EAAE;EAAA;EAC7B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;AAC9B,CAAC;AAEL,SAASL,YAAW,CAACF,KAAK,EAAEC,MAAM,EAAE;EAChC,IAAI,QAAOD,KAAK,MAAK,QAAQ,IAAI,QAAOC,MAAM,MAAK,QAAQ,IAAI,CAACD,KAAK,IAAI,CAACC,MAAM,EAAE;IAC9E,OAAO,IAAII,iBAAiB,CAACJ,MAAM,EAAED,KAAK,KAAKC,MAAM,CAAC;EAC1D;EACA,IAAIO,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,EAAE;IAC/C,IAAMS,WAAW,GAAGF,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,IAAIjB,MAAM,CAAC2B,MAAM,CAACX,KAAK,EAAEC,MAAM,CAAC;IACjG,OAAO,IAAII,iBAAiB,CAACJ,MAAM,EAAE,CAACS,WAAW,CAAC;EACtD;EACA,IAAIH,SAAS,GAAG,KAAK;EACrB,KAAK,IAAMK,GAAG,IAAIX,MAAM,EAAE;IACtB,IAAIA,MAAM,CAACY,cAAc,CAACD,GAAG,CAAC,EAAE;MAC5B,IAAME,MAAM,GAAGZ,YAAW,CAACF,KAAK,CAACY,GAAG,CAAC,EAAEX,MAAM,CAACW,GAAG,CAAC,CAAC;MACnD,IAAIE,MAAM,CAACP,SAAS,EAAE;QAClBP,KAAK,CAACY,GAAG,CAAC,GAAGE,MAAM,CAACR,QAAQ;QAC5BC,SAAS,GAAG,IAAI;MACpB;IACJ;EACJ;EACA,OAAO,IAAIF,iBAAiB,CAACL,KAAK,EAAEO,SAAS,CAAC;AAClD;AACA;AACA;AACA;AAFA,IAGMQ,oBAAoB;EACtB,8BAAYxB,EAAE,EAAE;IAAA;IACZ,IAAI,CAACQ,MAAM,GAAGiB,SAAS;IACvB,IAAI,CAACzB,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACM,IAAI,GAAG,SAAS;IACrB,IAAI,CAACC,YAAY,GAAGkB,SAAS;EACjC;EAAC;IAAA;IAAA,OACD,qBAAYhB,KAAK,EAAEC,MAAM,EAAE;MACvB,OAAOC,YAAW,CAACF,KAAK,EAAEC,MAAM,CAAC;IACrC;EAAC;IAAA;IAAA,OACD,kBAASgB,KAAK,EAAE;MACZ,OAAO,IAAI,CAACnB,YAAY;IAC5B;EAAC;EAAA;AAAA;AAAA,IAECoB,kBAAkB;EACpB,4BAAY3B,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM,EAAE;IAAA;IACxC,IAAI,CAACR,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACM,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EAAC;IAAA;IAAA,OACD,qBAAYC,KAAK,EAAEC,MAAM,EAAE;MACvB,OAAOC,YAAW,CAACF,KAAK,EAAEC,MAAM,CAAC;IACrC;EAAC;IAAA;IAAA,OACD,kBAASgB,KAAK,EAAE;MACZ,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;QAC9B,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,OAAOmB,KAAK;IAChB;EAAC;IAAA;IAAA,OACD,iBAAQd,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB,OAAOA,KAAK;IAChB;EAAC;EAAA;AAAA;AAEL;AACA;AACA;AACA,OAAO,SAASmB,OAAO,CAACnB,KAAK,EAAEF,YAAY,EAAE;EACzC,IAAI,OAAOE,KAAK,KAAK,WAAW,EAAE;IAC9B,OAAOF,YAAY;EACvB;EACA,IAAIE,KAAK,KAAK,OAAO,EAAE;IACnB;IACA,OAAO,KAAK;EAChB;EACA,OAAOoB,OAAO,CAACpB,KAAK,CAAC;AACzB;AAAC,IACKqB,mBAAmB;EAAA;EAAA;EACrB,6BAAY9B,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAsB;IAAA,IAApBC,MAAM,uEAAGiB,SAAS;IAAA;IAClD,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,SAAS;MACvBvB,MAAM,CAACwB,OAAO,GAAGzB,YAAY;IACjC;IAAC,yBACKP,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;EACxC;EAAC;IAAA;IAAA,OACD,kBAASkB,KAAK,EAAE;MACZ,OAAOE,OAAO,CAACF,KAAK,EAAE,IAAI,CAACnB,YAAY,CAAC;IAC5C;EAAC;EAAA;AAAA,EAV6BoB,kBAAkB;AAYpD;AACA;AACA;AACO,SAASM,WAAU,CAACxB,KAAK,EAAEF,YAAY,EAAE2B,OAAO,EAAEC,OAAO,EAAE;EAC9D,IAAI,OAAO1B,KAAK,KAAK,WAAW,EAAE;IAC9B,OAAOF,YAAY;EACvB;EACA,IAAI6B,CAAC,GAAGC,QAAQ,CAAC5B,KAAK,EAAE,EAAE,CAAC;EAC3B,IAAI6B,KAAK,CAACF,CAAC,CAAC,EAAE;IACV,OAAO7B,YAAY;EACvB;EACA6B,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACN,OAAO,EAAEE,CAAC,CAAC;EACxBA,CAAC,GAAGG,IAAI,CAACE,GAAG,CAACN,OAAO,EAAEC,CAAC,CAAC;EACxB,OAAOA,CAAC,GAAG,CAAC;AAChB;AAAC;AAAA,IACKM,eAAe;EAAA;EAAA;EACjB,yBAAY1C,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAE2B,OAAO,EAAEC,OAAO,EAAsB;IAAA;IAAA,IAApB3B,MAAM,uEAAGiB,SAAS;IAAA;IACpE,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,SAAS;MACvBvB,MAAM,CAACwB,OAAO,GAAGzB,YAAY;MAC7BC,MAAM,CAAC0B,OAAO,GAAGA,OAAO;MACxB1B,MAAM,CAAC2B,OAAO,GAAGA,OAAO;IAC5B;IACA,2BAAMnC,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;IACpC,MAAK0B,OAAO,GAAGA,OAAO;IACtB,MAAKC,OAAO,GAAGA,OAAO;IAAC;EAC3B;EAAC;IAAA;IAAA,OAID,kBAAST,KAAK,EAAE;MACZ,OAAOgB,eAAe,CAACT,UAAU,CAACP,KAAK,EAAE,IAAI,CAACnB,YAAY,EAAE,IAAI,CAAC2B,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;IAC3F;EAAC;IAAA;IAAA,OALD,oBAAkB1B,KAAK,EAAEF,YAAY,EAAE2B,OAAO,EAAEC,OAAO,EAAE;MACrD,OAAOF,WAAU,CAACxB,KAAK,EAAEF,YAAY,EAAE2B,OAAO,EAAEC,OAAO,CAAC;IAC5D;EAAC;EAAA;AAAA,EAdyBR,kBAAkB;AAAA,IAmB1CgB,iBAAiB;EAAA;EAAA;EACnB,2BAAY3C,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEqC,YAAY,EAAEpC,MAAM,EAAE;IAAA;IAAA;IACtD,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,QAAQ;MACtBvB,MAAM,CAACwB,OAAO,GAAGzB,YAAY;IACjC;IACA,4BAAMP,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;IACpC,OAAKoC,YAAY,GAAGA,YAAY;IAAC;EACrC;EAAC;IAAA;IAAA,OAoBD,kBAASlB,KAAK,EAAE;MACZ,OAAO,IAAI,CAACkB,YAAY,CAACD,iBAAiB,CAACE,KAAK,CAACnB,KAAK,EAAE,IAAI,CAACnB,YAAY,CAAC,CAAC;IAC/E;EAAC;IAAA;IAAA,OArBD,eAAauC,CAAC,EAAEL,GAAG,EAAED,GAAG,EAAE;MACtB,IAAIM,CAAC,GAAGL,GAAG,EAAE;QACT,OAAOA,GAAG;MACd;MACA,IAAIK,CAAC,GAAGN,GAAG,EAAE;QACT,OAAOA,GAAG;MACd;MACA,OAAOM,CAAC;IACZ;EAAC;IAAA;IAAA,OACD,eAAarC,KAAK,EAAEF,YAAY,EAAE;MAC9B,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;QAC3B,OAAOA,KAAK;MAChB;MACA,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;QAC9B,OAAOF,YAAY;MACvB;MACA,IAAM6B,CAAC,GAAGW,UAAU,CAACtC,KAAK,CAAC;MAC3B,OAAQ6B,KAAK,CAACF,CAAC,CAAC,GAAG7B,YAAY,GAAG6B,CAAC;IACvC;EAAC;EAAA;AAAA,EA3B2BT,kBAAkB;AAAA,IAgC5CqB,kBAAkB;EAAA;EAAA;EAOpB,4BAAYhD,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAsB;IAAA,IAApBC,MAAM,uEAAGiB,SAAS;IAAA;IAClD,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,QAAQ;MACtBvB,MAAM,CAACwB,OAAO,GAAGzB,YAAY;IACjC;IAAC,0BACKP,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;EACxC;EAAC;IAAA;IAAA,OACD,kBAASkB,KAAK,EAAE;MACZ,OAAOsB,kBAAkB,CAACC,MAAM,CAACvB,KAAK,EAAE,IAAI,CAACnB,YAAY,CAAC;IAC9D;EAAC;IAAA;IAAA,OAfD,gBAAcE,KAAK,EAAEF,YAAY,EAAE;MAC/B,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;QAC3B,OAAOF,YAAY;MACvB;MACA,OAAOE,KAAK;IAChB;EAAC;EAAA;AAAA,EAN4BkB,kBAAkB;AAkBnD;AACA;AACA;AACA,OAAO,SAASuB,SAAS,CAACzC,KAAK,EAAEF,YAAY,EAAE4C,aAAa,EAAE;EAC1D,IAAI,OAAO1C,KAAK,KAAK,QAAQ,EAAE;IAC3B,OAAOF,YAAY;EACvB;EACA,IAAI4C,aAAa,CAACC,OAAO,CAAC3C,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IACrC,OAAOF,YAAY;EACvB;EACA,OAAOE,KAAK;AAChB;AAAC,IACK4C,sBAAsB;EAAA;EAAA;EACxB,gCAAYrD,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAE4C,aAAa,EAAsB;IAAA;IAAA,IAApB3C,MAAM,uEAAGiB,SAAS;IAAA;IACjE,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,QAAQ;MACtBvB,MAAM,CAAC8C,IAAI,GAAGH,aAAa;MAC3B3C,MAAM,CAACwB,OAAO,GAAGzB,YAAY;IACjC;IACA,4BAAMP,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;IACpC,OAAK+C,cAAc,GAAGJ,aAAa;IAAC;EACxC;EAAC;IAAA;IAAA,OACD,kBAASzB,KAAK,EAAE;MACZ,OAAOwB,SAAS,CAACxB,KAAK,EAAE,IAAI,CAACnB,YAAY,EAAE,IAAI,CAACgD,cAAc,CAAC;IACnE;EAAC;EAAA;AAAA,EAZgC5B,kBAAkB;AAAA,IAcjD6B,gBAAgB;EAAA;EAAA;EAClB,0BAAYxD,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEkD,kBAAkB,EAAEN,aAAa,EAAEO,OAAO,EAAsB;IAAA;IAAA,IAApBlD,MAAM,uEAAGiB,SAAS;IAAA;IAC9F,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACuB,IAAI,GAAG,QAAQ;MACtBvB,MAAM,CAAC8C,IAAI,GAAGH,aAAa;MAC3B3C,MAAM,CAACwB,OAAO,GAAGyB,kBAAkB;IACvC;IACA,4BAAMzD,EAAE,EAAEM,IAAI,EAAEC,YAAY,EAAEC,MAAM;IACpC,OAAK+C,cAAc,GAAGJ,aAAa;IACnC,OAAKQ,QAAQ,GAAGD,OAAO;IAAC;EAC5B;EAAC;IAAA;IAAA,OACD,kBAAShC,KAAK,EAAE;MACZ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3B,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,IAAI,IAAI,CAACgD,cAAc,CAACH,OAAO,CAAC1B,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3C,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,OAAO,IAAI,CAACoD,QAAQ,CAACjC,KAAK,CAAC;IAC/B;EAAC;EAAA;AAAA,EAnB0BrB,gBAAgB,GAqB/C;AACA;AACA,SAASuD,qBAAqB,CAACC,UAAU,EAAE;EACvC,QAAQA,UAAU;IACd,KAAK,MAAM;MAAE,OAAO,CAAC,CAAC;IACtB,KAAK,MAAM;MAAE,OAAO,CAAC,CAAC;IACtB,KAAK,UAAU;MAAE,OAAO,CAAC,CAAC;IAC1B,KAAK,UAAU;MAAE,OAAO,CAAC,CAAC;IAC1B,KAAK,MAAM;MAAE,OAAO,CAAC,CAAC;EAAoC;AAElE;AACA;AACA;AAAA,IACMC,0BAA0B;EAAA;EAAA;EAC5B,sCAAc;IAAA;IAAA,0BACJ,CAAC,CAAC,yCAAyC,sBAAsB,EAAE,CAAC,CAAC,oCAAoC;MAC3G/B,IAAI,EAAE,QAAQ;MACduB,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;MAC3BS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,+EAA+E,CAAC,EAC1H1E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,0GAA0G,CAAC,EACnJ1E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,oEAAoE,CAAC,CACjH;MACDhC,OAAO,EAAE,MAAM;MACfiC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,sIAAsI;IAC5L,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAAStC,KAAK,EAAE;MACZ,QAAQA,KAAK;QACT,KAAK,MAAM;UAAE,OAAO,CAAC,CAAC;QACtB,KAAK,KAAK;UAAE,OAAO,CAAC,CAAC;QACrB,KAAK,IAAI;UAAE,OAAO,CAAC,CAAC;MAAmC;;MAE3D,OAAO,IAAI,CAACnB,YAAY;IAC5B;EAAC;IAAA;IAAA,OACD,iBAAQK,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB,IAAIA,KAAK,KAAK,CAAC,CAAC,oCAAoC;QAChD;QACA,OAAOG,GAAG,CAACsD,oBAAoB;MACnC;MACA,OAAOzD,KAAK;IAChB;EAAC;EAAA;AAAA,EA5BoCJ,gBAAgB;AAAA,IA8BnD8D,cAAc;EAAA;EAAA;EAChB,0BAAc;IAAA;IACV,IAAMC,QAAQ,GAAG;MACbC,WAAW,EAAE,IAAI;MACjBC,gBAAgB,EAAE;IACtB,CAAC;IAAC,0BACI,EAAE,CAAC,6BAA6B,UAAU,EAAEF,QAAQ,EAAE;MACxD,6BAA6B,EAAE;QAC3BrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACC,WAAW;QAC7BJ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,iEAAiE;MACvH,CAAC;MACD,kCAAkC,EAAE;QAChCjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACE,gBAAgB;QAClCL,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,iGAAiG;MAC5J;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHF,WAAW,EAAEzC,OAAO,CAACF,KAAK,CAAC2C,WAAW,EAAE,IAAI,CAAC9D,YAAY,CAAC8D,WAAW,CAAC;QACtEC,gBAAgB,EAAE1C,OAAO,CAACF,KAAK,CAAC4C,gBAAgB,EAAE,IAAI,CAAC/D,YAAY,CAAC+D,gBAAgB;MACxF,CAAC;IACL;EAAC;EAAA;AAAA,EA5BwBjE,gBAAgB;AA8B7C,SAASmE,8BAA8B,CAACC,mBAAmB,EAAE;EACzD,QAAQA,mBAAmB;IACvB,KAAK,OAAO;MAAE,OAAO,CAAC,CAAC;IACvB,KAAK,QAAQ;MAAE,OAAO,CAAC,CAAC;IACxB,KAAK,OAAO;MAAE,OAAO,CAAC,CAAC;IACvB,KAAK,QAAQ;MAAE,OAAO,CAAC,CAAC;IACxB,KAAK,OAAO;MAAE,OAAO,CAAC,CAAC;EAA0C;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,qBAAqB;AAChC,CAAC,UAAUA,qBAAqB,EAAE;EAC9B;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACjE;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACnE;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC3E;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACzE;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc;EACjF;AACJ;AACA;EACIA,qBAAqB,CAACA,qBAAqB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;AACvF,CAAC,EAAEA,qBAAqB,KAAKA,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD,SAASC,sBAAsB,CAACC,WAAW,EAAE;EACzC,QAAQA,WAAW;IACf,KAAK,MAAM;MAAE,OAAOF,qBAAqB,CAACG,IAAI;IAC9C,KAAK,OAAO;MAAE,OAAOH,qBAAqB,CAACI,KAAK;IAChD,KAAK,WAAW;MAAE,OAAOJ,qBAAqB,CAACK,SAAS;IACxD,KAAK,WAAW;MAAE,OAAOL,qBAAqB,CAACM,QAAQ;IACvD,KAAK,eAAe;MAAE,OAAON,qBAAqB,CAACO,YAAY;IAC/D,KAAK,gBAAgB;MAAE,OAAOP,qBAAqB,CAACQ,aAAa;EAAC;AAE1E;AACA;AACA;AAAA,IACMC,eAAe;EAAA;EAAA;EACjB,2BAAc;IAAA;IAAA,0BACJ,GAAG,CAAC;EACd;EAAC;IAAA;IAAA,OACD,iBAAQvE,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,IAAMC,UAAU,GAAG,CAAC,eAAe,CAAC;MACpC,IAAIxE,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,wCAAwC,EAAE;QACzDD,UAAU,CAACE,IAAI,CAAC1E,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,wCAAwC,CAAC;MAC5E;;MACA,IAAI1E,GAAG,CAAC4E,oBAAoB,EAAE;QAC1BH,UAAU,CAACE,IAAI,CAAC3E,GAAG,CAAC4E,oBAAoB,CAAC;MAC7C;MACA,IAAI3E,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,8BAA8B,KAAK,SAAS,EAAE;QAC7DD,UAAU,CAACE,IAAI,CAAC,eAAe,CAAC;MACpC,CAAC,MACI,IAAI1E,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,8BAA8B,KAAK,MAAM,EAAE;QAC/DD,UAAU,CAACE,IAAI,CAAC,YAAY,CAAC;MACjC;MACA,IAAI1E,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,8BAA8B,EAAE;QAChDD,UAAU,CAACE,IAAI,CAAC,YAAY,CAAC;MACjC;MACA,IAAI1E,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,kCAAkC,EAAE;QACpDD,UAAU,CAACE,IAAI,CAAC,gBAAgB,CAAC;MACrC;MACA,OAAOF,UAAU,CAACI,IAAI,CAAC,GAAG,CAAC;IAC/B;EAAC;EAAA;AAAA,EAzByBjE,oBAAoB,GA2BlD;AACA;AAAA,IACMkE,6BAA6B;EAAA;EAAA;EAC/B,yCAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,4CAA4C,yBAAyB,EAAE,IAAI,EAAE;MAAEzB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,uEAAuE;IAAE,CAAC;EAC3N;EAAC;IAAA;IAAA,OACD,iBAAQpD,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB,OAAOA,KAAK,IAAIG,GAAG,CAAC+E,uBAAuB;IAC/C;EAAC;EAAA;AAAA,EANuC7D,mBAAmB;AAAA,IAQzD8D,UAAU;EAAA;EAAA;EACZ,sBAAc;IAAA;IACV,IAAMxB,QAAQ,GAAG;MACbyB,gBAAgB,EAAE,IAAI;MACtBC,6BAA6B,EAAE,QAAQ;MACvCC,mBAAmB,EAAE,OAAO;MAC5BC,mBAAmB,EAAE,KAAK;MAC1BC,kBAAkB,EAAE,IAAI;MACxBC,IAAI,EAAE;IACV,CAAC;IAAC,2BACI,EAAE,CAAC,yBAAyB,MAAM,EAAE9B,QAAQ,EAAE;MAChD,8BAA8B,EAAE;QAC5BrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACyB,gBAAgB;QAClC5B,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,uEAAuE;MAC9H,CAAC;MACD,2CAA2C,EAAE;QACzCjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC;QACtCtB,OAAO,EAAEoC,QAAQ,CAAC0B,6BAA6B;QAC/C/B,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,iDAAiD,EAAE,qDAAqD,CAAC,EACtH1E,GAAG,CAAC0E,QAAQ,CAAC,kDAAkD,EAAE,yFAAyF,CAAC,EAC3J1E,GAAG,CAAC0E,QAAQ,CAAC,qDAAqD,EAAE,oDAAoD,CAAC,CAC5H;QACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oCAAoC,EAAE,4FAA4F;MAChK,CAAC;MACD,iCAAiC,EAAE;QAC/BjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC;QACtCtB,OAAO,EAAEoC,QAAQ,CAAC2B,mBAAmB;QACrChC,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,uCAAuC,EAAE,0DAA0D,CAAC,EACjH1E,GAAG,CAAC0E,QAAQ,CAAC,wCAAwC,EAAE,iDAAiD,CAAC,EACzG1E,GAAG,CAAC0E,QAAQ,CAAC,2CAA2C,EAAE,sFAAsF,CAAC,CACpJ;QACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,wEAAwE;MAClI,CAAC;MACD,iCAAiC,EAAE;QAC/BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC4B,mBAAmB;QACrC/B,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,4FAA4F,CAAC;QACnJmC,QAAQ,EAAE5G,QAAQ,CAAC6G;MACvB,CAAC;MACD,gCAAgC,EAAE;QAC9BrE,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC6B,kBAAkB;QACpChC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,gKAAgK;MACzN,CAAC;MACD,kBAAkB,EAAE;QAChBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC8B,IAAI;QACtBjC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,WAAW,EAAE,0HAA0H;MACrK;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHsB,gBAAgB,EAAEjE,OAAO,CAACF,KAAK,CAACmE,gBAAgB,EAAE,IAAI,CAACtF,YAAY,CAACsF,gBAAgB,CAAC;QACrFC,6BAA6B,EAAE,OAAOvB,MAAM,CAACuB,6BAA6B,KAAK,SAAS,GACjFvB,MAAM,CAACuB,6BAA6B,GAAG,QAAQ,GAAG,OAAO,GAC1D5C,SAAS,CAACxB,KAAK,CAACoE,6BAA6B,EAAE,IAAI,CAACvF,YAAY,CAACuF,6BAA6B,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;QACvIC,mBAAmB,EAAE,OAAOxB,MAAM,CAACwB,mBAAmB,KAAK,SAAS,GAC7DxB,MAAM,CAACwB,mBAAmB,GAAG,QAAQ,GAAG,OAAO,GAChD7C,SAAS,CAACxB,KAAK,CAACqE,mBAAmB,EAAE,IAAI,CAACxF,YAAY,CAACwF,mBAAmB,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;QACnHC,mBAAmB,EAAEpE,OAAO,CAACF,KAAK,CAACsE,mBAAmB,EAAE,IAAI,CAACzF,YAAY,CAACyF,mBAAmB,CAAC;QAC9FC,kBAAkB,EAAErE,OAAO,CAACF,KAAK,CAACuE,kBAAkB,EAAE,IAAI,CAAC1F,YAAY,CAAC0F,kBAAkB,CAAC;QAC3FC,IAAI,EAAEtE,OAAO,CAACF,KAAK,CAACwE,IAAI,EAAE,IAAI,CAAC3F,YAAY,CAAC2F,IAAI;MACpD,CAAC;IACL;EAAC;EAAA;AAAA,EAzEoB7F,gBAAgB,GA2EzC;AACA;AACA;AACA;AACA;AACA,WAAagG,mBAAmB;EAAA;EAAA;EAC5B,+BAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,kCAAkC,eAAe,EAAEA,mBAAmB,CAACC,GAAG,EAAE;MACjFC,KAAK,EAAE,CACH;QACIxE,IAAI,EAAE,SAAS;QACfkC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,kKAAkK;MACjN,CAAC,EACD;QACIjC,IAAI,EAAE,QAAQ;QACdkC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,4HAA4H;MACjL,CAAC,CACJ;MACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,wKAAwK,CAAC;MAC3NhC,OAAO,EAAE;IACb,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASN,KAAK,EAAE;MACZ,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;QAC9B,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,IAAI,OAAOmB,KAAK,KAAK,QAAQ,EAAE;QAC3B,IAAIA,KAAK,KAAK,OAAO,EAAE;UACnB,OAAO2E,mBAAmB,CAACC,GAAG;QAClC;QACA,IAAI5E,KAAK,KAAK,MAAM,EAAE;UAClB,OAAO2E,mBAAmB,CAACG,EAAE;QACjC;QACA,OAAO9E,KAAK;MAChB;MACA,IAAIG,OAAO,CAACH,KAAK,CAAC,EAAE;QAChB,OAAO2E,mBAAmB,CAACG,EAAE;MACjC;MACA,OAAOH,mBAAmB,CAACC,GAAG;IAClC;EAAC;EAAA;AAAA,EAlCoCjG,gBAAgB;AAoCzDgG,mBAAmB,CAACC,GAAG,GAAG,wBAAwB;AAClDD,mBAAmB,CAACG,EAAE,GAAG,sBAAsB;AAC/C;AACA;AAAA,IACMC,cAAc;EAAA;EAAA;EAChB,0BAAc;IAAA;IAAA,2BACJ,EAAE,CAAC;EACb;EAAC;IAAA;IAAA,OACD,iBAAQ7F,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,OAAOxE,GAAG,CAAC8F,QAAQ;IACvB;EAAC;EAAA;AAAA,EANwBlF,oBAAoB,GAQjD;AACA;AAAA,IACMmF,cAAc;EAAA;EAAA;EAChB,0BAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,6BAA6B,UAAU,EAAEC,oBAAoB,CAACC,QAAQ,EAAE;MAC7E9E,IAAI,EAAE,QAAQ;MACdG,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZH,OAAO,EAAE4E,oBAAoB,CAACC,QAAQ;MACtC5C,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,UAAU,EAAE,mCAAmC;IAC7E,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAAStC,KAAK,EAAE;MACZ,IAAMU,CAAC,GAAGO,iBAAiB,CAACE,KAAK,CAACnB,KAAK,EAAE,IAAI,CAACnB,YAAY,CAAC;MAC3D,IAAI6B,CAAC,KAAK,CAAC,EAAE;QACT,OAAOwE,oBAAoB,CAACC,QAAQ;MACxC;MACA,OAAOlE,iBAAiB,CAACmE,KAAK,CAAC1E,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC7C;EAAC;IAAA;IAAA,OACD,iBAAQxB,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB;MACA;MACA,OAAOG,GAAG,CAAC8F,QAAQ,CAACG,QAAQ;IAChC;EAAC;EAAA;AAAA,EArBwBlF,kBAAkB,GAuB/C;AACA;AAAA,IACMoF,gBAAgB;EAAA;EAAA;EAClB,4BAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,+BAA+B,YAAY,EAAEH,oBAAoB,CAACI,UAAU,EAAE;MACnFT,KAAK,EAAE,CACH;QACIxE,IAAI,EAAE,QAAQ;QACdG,OAAO,EAAE6E,gBAAgB,CAACE,aAAa;QACvC9E,OAAO,EAAE4E,gBAAgB,CAACG,aAAa;QACvCC,YAAY,EAAE7H,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,kFAAkF;MAC3I,CAAC,EACD;QACIjC,IAAI,EAAE,QAAQ;QACdqF,OAAO,EAAE;MACb,CAAC,EACD;QACI9D,IAAI,EAAEyD,gBAAgB,CAACM;MAC3B,CAAC,CACJ;MACDrF,OAAO,EAAE4E,oBAAoB,CAACI,UAAU;MACxC/C,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,mGAAmG;IAC/I,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAAStC,KAAK,EAAE;MACZ,IAAIA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,MAAM,EAAE;QACxC,OAAOA,KAAK;MAChB;MACA,OAAO4F,MAAM,CAAC5E,eAAe,CAACT,UAAU,CAACP,KAAK,EAAEkF,oBAAoB,CAACI,UAAU,EAAED,gBAAgB,CAACE,aAAa,EAAEF,gBAAgB,CAACG,aAAa,CAAC,CAAC;IACrJ;EAAC;EAAA;AAAA,EA3B0B7G,gBAAgB;AA6B/C0G,gBAAgB,CAACM,iBAAiB,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AACtHN,gBAAgB,CAACE,aAAa,GAAG,CAAC;AAClCF,gBAAgB,CAACG,aAAa,GAAG,IAAI;AAAC,IAChCK,kBAAkB;EAAA;EAAA;EACpB,8BAAc;IAAA;IACV,IAAMnD,QAAQ,GAAG;MACboD,QAAQ,EAAE,MAAM;MAChBC,mBAAmB,EAAE,MAAM;MAC3BC,uBAAuB,EAAE,MAAM;MAC/BC,oBAAoB,EAAE,MAAM;MAC5BC,uBAAuB,EAAE,MAAM;MAC/BC,kBAAkB,EAAE,MAAM;MAC1BC,4BAA4B,EAAE,8BAA8B;MAC5DC,gCAAgC,EAAE,8BAA8B;MAChEC,6BAA6B,EAAE,8BAA8B;MAC7DC,gCAAgC,EAAE,EAAE;MACpCC,2BAA2B,EAAE;IACjC,CAAC;IACD,IAAMC,UAAU,GAAG;MACfpG,IAAI,EAAE,QAAQ;MACduB,IAAI,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC;MACrCtB,OAAO,EAAEoC,QAAQ,CAACoD,QAAQ;MAC1BzD,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,yCAAyC,CAAC,EAC5F1E,GAAG,CAAC0E,QAAQ,CAAC,0CAA0C,EAAE,+CAA+C,CAAC,EACzG1E,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,oEAAoE,CAAC;IAE/H,CAAC;IACD,IAAMoE,yBAAyB,GAAG,CAAC,EAAE,EAAE,uCAAuC,EAAE,8BAA8B,EAAE,kCAAkC,EAAE,kCAAkC,EAAE,kCAAkC,EAAE,kCAAkC,EAAE,+BAA+B,EAAE,iCAAiC,EAAE,8BAA8B,EAAE,qCAAqC,EAAE,gCAAgC,CAAC;IAAC,2BACva,EAAE,CAAC,iCAAiC,cAAc,EAAEhE,QAAQ,EAAE;MAChE,8BAA8B,EAAE;QAC5BiE,kBAAkB,EAAE/I,GAAG,CAAC0E,QAAQ,CAAC,yCAAyC,EAAE,iLAAiL;MACjQ,CAAC;MACD,yCAAyC,EAAEsE,MAAM,CAACC,MAAM,CAAC;QAAEtE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gDAAgD,EAAE,4FAA4F;MAAE,CAAC,EAAEmE,UAAU,CAAC;MACnP,6CAA6C,EAAEG,MAAM,CAACC,MAAM,CAAC;QAAEtE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oDAAoD,EAAE,iGAAiG;MAAE,CAAC,EAAEmE,UAAU,CAAC;MAChQ,0CAA0C,EAAEG,MAAM,CAACC,MAAM,CAAC;QAAEtE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iDAAiD,EAAE,6FAA6F;MAAE,CAAC,EAAEmE,UAAU,CAAC;MACtP,6CAA6C,EAAEG,MAAM,CAACC,MAAM,CAAC;QAAEtE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oDAAoD,EAAE,iGAAiG;MAAE,CAAC,EAAEmE,UAAU,CAAC;MAChQ,wCAAwC,EAAEG,MAAM,CAACC,MAAM,CAAC;QAAEtE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,+CAA+C,EAAE,4FAA4F;MAAE,CAAC,EAAEmE,UAAU,CAAC;MACjP,kDAAkD,EAAE;QAChDpG,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC0D,4BAA4B;QAC9CxE,IAAI,EAAE8E,yBAAyB;QAC/BnE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,8GAA8G;MAC5K,CAAC;MACD,sDAAsD,EAAE;QACpDjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC2D,gCAAgC;QAClDzE,IAAI,EAAE8E,yBAAyB;QAC/BnE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,mHAAmH;MACrL,CAAC;MACD,mDAAmD,EAAE;QACjDjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC4D,6BAA6B;QAC/C1E,IAAI,EAAE8E,yBAAyB;QAC/BnE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,+GAA+G;MAC9K,CAAC;MACD,sDAAsD,EAAE;QACpDjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC6D,gCAAgC;QAClD3E,IAAI,EAAE8E,yBAAyB;QAC/BnE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,kHAAkH;MACpL,CAAC;MACD,iDAAiD,EAAE;QAC/CjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC8D,2BAA2B;QAC7C5E,IAAI,EAAE8E,yBAAyB;QAC/BnE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,6GAA6G;MAC1K;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAIiE,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACtB,IAAI,CAACrE,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHiD,QAAQ,EAAEtE,SAAS,CAACxB,KAAK,CAAC8F,QAAQ,EAAE,IAAI,CAACjH,YAAY,CAACiH,QAAQ,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QAChGC,mBAAmB,EAAE,CAACe,EAAE,GAAG9G,KAAK,CAAC+F,mBAAmB,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGtF,SAAS,CAACxB,KAAK,CAAC+F,mBAAmB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QACpKC,uBAAuB,EAAE,CAACe,EAAE,GAAG/G,KAAK,CAACgG,uBAAuB,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGvF,SAAS,CAACxB,KAAK,CAACgG,uBAAuB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QAChLC,oBAAoB,EAAE,CAACe,EAAE,GAAGhH,KAAK,CAACiG,oBAAoB,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGxF,SAAS,CAACxB,KAAK,CAACiG,oBAAoB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QACvKC,uBAAuB,EAAE,CAACe,EAAE,GAAGjH,KAAK,CAACkG,uBAAuB,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGzF,SAAS,CAACxB,KAAK,CAACkG,uBAAuB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QAChLC,kBAAkB,EAAE,CAACe,EAAE,GAAGlH,KAAK,CAACmG,kBAAkB,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG1F,SAAS,CAACxB,KAAK,CAACmG,kBAAkB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QACjKC,4BAA4B,EAAE9E,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAACoG,4BAA4B,EAAE,IAAI,CAACvH,YAAY,CAACuH,4BAA4B,CAAC;QAC3IC,gCAAgC,EAAE/E,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAACqG,gCAAgC,EAAE,IAAI,CAACxH,YAAY,CAACwH,gCAAgC,CAAC;QACvJC,6BAA6B,EAAEhF,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAACsG,6BAA6B,EAAE,IAAI,CAACzH,YAAY,CAACyH,6BAA6B,CAAC;QAC9IC,gCAAgC,EAAEjF,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAACuG,gCAAgC,EAAE,IAAI,CAAC1H,YAAY,CAAC0H,gCAAgC,CAAC;QACvJC,2BAA2B,EAAElF,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAACwG,2BAA2B,EAAE,IAAI,CAAC3H,YAAY,CAAC2H,2BAA2B;MAC3I,CAAC;IACL;EAAC;EAAA;AAAA,EAtF4B7H,gBAAgB;AAAA,IAwF3CwI,WAAW;EAAA;EAAA;EACb,uBAAc;IAAA;IACV,IAAMzE,QAAQ,GAAG;MACb0E,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACX,CAAC;IAAC,2BACI,EAAE,CAAC,0BAA0B,OAAO,EAAE7E,QAAQ,EAAE;MAClD,sBAAsB,EAAE;QACpBrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,sCAAsC;MACrF,CAAC;MACD,oBAAoB,EAAE;QAClBjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC2E,KAAK;QACvB7G,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,KAAK;QACd8B,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,oEAAoE;MACjH,CAAC;MACD,qBAAqB,EAAE;QACnBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC4E,MAAM;QACxB/E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,+EAA+E;MAC7H,CAAC;MACD,oBAAoB,EAAE;QAClBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC6E,KAAK;QACvBhF,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,yDAAyD;MACtG;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,CAAC;QAC1DC,KAAK,EAAErG,eAAe,CAACT,UAAU,CAACP,KAAK,CAACqH,KAAK,EAAE,IAAI,CAACxI,YAAY,CAACwI,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;QACjFC,MAAM,EAAEpH,OAAO,CAACF,KAAK,CAACsH,MAAM,EAAE,IAAI,CAACzI,YAAY,CAACyI,MAAM,CAAC;QACvDC,KAAK,EAAErH,OAAO,CAACF,KAAK,CAACuH,KAAK,EAAE,IAAI,CAAC1I,YAAY,CAAC0I,KAAK;MACvD,CAAC;IACL;EAAC;EAAA;AAAA,EA5CqB5I,gBAAgB;AA8C1C;AACA;AACA;AACA,WAAa6I,wBAAwB;EAAA;EAAA;EACjC,oCAAc;IAAA;IAAA,2BACJ,GAAG,CAAC;EACd;EAAC;IAAA;IAAA,OACD,iBAAQtI,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,OAAO8D,wBAAwB,CAACC,aAAa,CAACtI,OAAO,EAAE;QACnDuI,MAAM,EAAExI,GAAG,CAACwI,MAAM;QAClBC,UAAU,EAAEzI,GAAG,CAACyI,UAAU;QAC1BC,WAAW,EAAE1I,GAAG,CAAC0I,WAAW;QAC5BC,sBAAsB,EAAE3I,GAAG,CAAC2I,sBAAsB;QAClDC,UAAU,EAAE5I,GAAG,CAAC8F,QAAQ,CAAC8C,UAAU;QACnCC,aAAa,EAAE7I,GAAG,CAAC6I,aAAa;QAChCC,qBAAqB,EAAE9I,GAAG,CAAC8I,qBAAqB;QAChDC,8BAA8B,EAAE/I,GAAG,CAAC8F,QAAQ,CAACiD,8BAA8B;QAC3EC,aAAa,EAAEhJ,GAAG,CAAC8F,QAAQ,CAACkD,aAAa;QACzCC,UAAU,EAAEjJ,GAAG,CAACiJ;MACpB,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,0CAAwCnI,KAAK,EAAE;MAC3C,IAAMoI,wBAAwB,GAAGpI,KAAK,CAACqI,MAAM,GAAGrI,KAAK,CAAC8H,UAAU;MAChE,IAAMQ,wBAAwB,GAAGtI,KAAK,CAACuI,oBAAoB,GAAIH,wBAAwB,GAAG,CAAC,GAAI,CAAC;MAChG,IAAMI,YAAY,GAAG,CAACxI,KAAK,CAAC+H,aAAa,GAAGO,wBAAwB,KAAKtI,KAAK,CAACmI,UAAU,GAAGnI,KAAK,CAACqI,MAAM,CAAC;MACzG,IAAMI,gBAAgB,GAAG5H,IAAI,CAAC6H,KAAK,CAAC1I,KAAK,CAAC+H,aAAa,GAAGS,YAAY,CAAC;MACvE,OAAO;QAAEJ,wBAAwB,EAAxBA,wBAAwB;QAAEE,wBAAwB,EAAxBA,wBAAwB;QAAEE,YAAY,EAAZA,YAAY;QAAEC,gBAAgB,EAAhBA;MAAiB,CAAC;IACjG;EAAC;IAAA;IAAA,OACD,+BAA6BzI,KAAK,EAAE0H,MAAM,EAAE;MACxC,IAAMC,UAAU,GAAG3H,KAAK,CAAC2H,UAAU;MACnC,IAAMC,WAAW,GAAG5H,KAAK,CAAC4H,WAAW;MACrC,IAAMO,UAAU,GAAGnI,KAAK,CAACmI,UAAU;MACnC,IAAI,CAACnI,KAAK,CAAC2I,OAAO,CAACvB,OAAO,EAAE;QACxB,OAAO;UACHwB,aAAa,EAAE,CAAC,CAAC;UACjBC,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE,CAAC;UACfC,2BAA2B,EAAE,KAAK;UAClCC,iBAAiB,EAAE,KAAK;UACxBC,YAAY,EAAE,CAAC;UACfC,iBAAiB,EAAE,CAAC;UACpBC,uBAAuB,EAAE,CAAC;UAC1BC,wBAAwB,EAAEvI,IAAI,CAAC6H,KAAK,CAACP,UAAU,GAAGP,WAAW,CAAC;UAC9DyB,uBAAuB,EAAE,CAAC;UAC1BC,wBAAwB,EAAE1B;QAC9B,CAAC;MACL;MACA;MACA,IAAMpJ,wBAAwB,GAAGkJ,MAAM,CAAClJ,wBAAwB;MAChE,IAAM+K,cAAc,GAAI/K;MACpB;MAAA,GACGwB,KAAK,CAAC4H,WAAW,KAAKpJ,wBAAwB,CAACoJ,WAAW,IAC1D5H,KAAK,CAAC8H,UAAU,KAAKtJ,wBAAwB,CAACsJ,UAAU,IACxD9H,KAAK,CAACiI,8BAA8B,KAAKzJ,wBAAwB,CAACyJ,8BAA8B,IAChGjI,KAAK,CAACmI,UAAU,KAAK3J,wBAAwB,CAAC2J,UAAU,IACxDnI,KAAK,CAACuI,oBAAoB,KAAK/J,wBAAwB,CAAC+J,oBAAoB,IAC5EvI,KAAK,CAAC2I,OAAO,CAACvB,OAAO,KAAK5I,wBAAwB,CAACmK,OAAO,CAACvB,OAAO,IAClEpH,KAAK,CAAC2I,OAAO,CAACa,IAAI,KAAKhL,wBAAwB,CAACmK,OAAO,CAACa,IAAI,IAC5DxJ,KAAK,CAAC2I,OAAO,CAACc,IAAI,KAAKjL,wBAAwB,CAACmK,OAAO,CAACc,IAAI,IAC5DzJ,KAAK,CAAC2I,OAAO,CAACe,UAAU,KAAKlL,wBAAwB,CAACmK,OAAO,CAACe,UAAU,IACxE1J,KAAK,CAAC2I,OAAO,CAACgB,gBAAgB,KAAKnL,wBAAwB,CAACmK,OAAO,CAACgB,gBAAgB,IACpF3J,KAAK,CAAC2I,OAAO,CAACiB,SAAS,KAAKpL,wBAAwB,CAACmK,OAAO,CAACiB,SAAS,IACtE5J,KAAK,CAAC2I,OAAO,CAACkB,KAAK,KAAKrL,wBAAwB,CAACmK,OAAO,CAACkB,KAAK,IAC9D7J,KAAK,CAAC8J,sBAAsB,KAAKtL,wBAAwB,CAACsL;MAC7D;MACA;MAAA,GACG9J,KAAK,CAAC+J,kBAAkB,KAAKvL,wBAAwB,CAACuL,kBAAmB;MAChF,IAAMjC,UAAU,GAAG9H,KAAK,CAAC8H,UAAU;MACnC,IAAMG,8BAA8B,GAAGjI,KAAK,CAACiI,8BAA8B;MAC3E,IAAMM,oBAAoB,GAAGvI,KAAK,CAACuI,oBAAoB;MACvD,IAAMyB,uBAAuB,GAAGhK,KAAK,CAAC2I,OAAO,CAACgB,gBAAgB;MAC9D,IAAIV,YAAY,GAAId,UAAU,IAAI,CAAC,GAAGtH,IAAI,CAACoJ,KAAK,CAACjK,KAAK,CAAC2I,OAAO,CAACkB,KAAK,GAAG,CAAC,CAAC,GAAG7J,KAAK,CAAC2I,OAAO,CAACkB,KAAM;MAChG,IAAMK,gBAAgB,GAAGlK,KAAK,CAAC2I,OAAO,CAACiB,SAAS;MAChD,IAAMO,WAAW,GAAGnK,KAAK,CAAC2I,OAAO,CAACc,IAAI;MACtC,IAAMW,WAAW,GAAGpK,KAAK,CAAC2I,OAAO,CAACa,IAAI;MACtC,IAAMM,sBAAsB,GAAG9J,KAAK,CAAC8J,sBAAsB;MAC3D,IAAM/B,aAAa,GAAG/H,KAAK,CAAC+H,aAAa;MACzC,IAAMsC,cAAc,GAAGrK,KAAK,CAACqK,cAAc;MAC3C,IAAMN,kBAAkB,GAAG/J,KAAK,CAAC+J,kBAAkB;MACnD,IAAMO,cAAc,GAAGN,uBAAuB,GAAG,CAAC,GAAG,CAAC;MACtD,IAAIZ,wBAAwB,GAAGvI,IAAI,CAAC6H,KAAK,CAACP,UAAU,GAAGP,WAAW,CAAC;MACnE,IAAM0B,wBAAwB,GAAGF,wBAAwB,GAAGjB,UAAU;MACtE,IAAIY,2BAA2B,GAAG,KAAK;MACvC,IAAIC,iBAAiB,GAAG,KAAK;MAC7B,IAAIE,iBAAiB,GAAGoB,cAAc,GAAGrB,YAAY;MACrD,IAAIsB,gBAAgB,GAAGtB,YAAY,GAAGd,UAAU;MAChD,IAAIqC,sBAAsB,GAAG,CAAC;MAC9B,IAAIL,WAAW,KAAK,MAAM,IAAIA,WAAW,KAAK,KAAK,EAAE;QACjD,4BAA+F3C,wBAAwB,CAACiD,gCAAgC,CAAC;YACrJ1C,aAAa,EAAEA,aAAa;YAC5BQ,oBAAoB,EAAEA,oBAAoB;YAC1CF,MAAM,EAAET,WAAW;YACnBE,UAAU,EAAEA,UAAU;YACtBK,UAAU,EAAEA;UAChB,CAAC,CAAC;UANMC,wBAAwB,yBAAxBA,wBAAwB;UAAEE,wBAAwB,yBAAxBA,wBAAwB;UAAEE,YAAY,yBAAZA,YAAY;UAAEC,gBAAgB,yBAAhBA,gBAAgB;QAO1F;QACA;QACA,IAAMiC,KAAK,GAAG3C,aAAa,GAAGU,gBAAgB;QAC9C,IAAIiC,KAAK,GAAG,CAAC,EAAE;UACX3B,2BAA2B,GAAG,IAAI;UAClCC,iBAAiB,GAAG,IAAI;UACxBC,YAAY,GAAG,CAAC;UAChBC,iBAAiB,GAAG,CAAC;UACrBqB,gBAAgB,GAAGtB,YAAY,GAAGd,UAAU;QAChD,CAAC,MACI;UACD,IAAIwC,cAAc,GAAG,KAAK;UAC1B,IAAIC,eAAe,GAAG3B,YAAY,GAAG,CAAC;UACtC,IAAIkB,WAAW,KAAK,KAAK,EAAE;YACvB,IAAMU,sBAAsB,GAAGhK,IAAI,CAACiK,IAAI,CAAC,CAAC/C,aAAa,GAAGO,wBAAwB,IAAIY,iBAAiB,CAAC;YACxG,IAAIa,kBAAkB,IAAIR,cAAc,IAAIc,cAAc,IAAI3C,MAAM,CAAChJ,uBAAuB,EAAE;cAC1F;cACA;cACA;cACA;cACA;cACAiM,cAAc,GAAG,IAAI;cACrBC,eAAe,GAAGlD,MAAM,CAACjJ,wBAAwB;YACrD,CAAC,MACI;cACDkM,cAAc,GAAIE,sBAAsB,GAAGzB,wBAAyB;YACxE;UACJ;UACA,IAAIe,WAAW,KAAK,MAAM,IAAIQ,cAAc,EAAE;YAC1C5B,2BAA2B,GAAG,IAAI;YAClC,IAAMgC,sBAAsB,GAAG9B,YAAY;YAC3CC,iBAAiB,GAAGrI,IAAI,CAACE,GAAG,CAAC+G,UAAU,GAAGK,UAAU,EAAEtH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC6H,KAAK,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;YAChG,IAAIuB,kBAAkB,IAAIR,cAAc,IAAIc,cAAc,IAAI3C,MAAM,CAAChJ,uBAAuB,EAAE;cAC1F;cACA;cACA;cACA;cACA;cACAkM,eAAe,GAAGlD,MAAM,CAACjJ,wBAAwB;YACrD;YACAwK,YAAY,GAAGpI,IAAI,CAACE,GAAG,CAAC6J,eAAe,EAAE/J,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC6H,KAAK,CAACQ,iBAAiB,GAAGoB,cAAc,CAAC,CAAC,CAAC;YACrG,IAAIrB,YAAY,GAAG8B,sBAAsB,EAAE;cACvCP,sBAAsB,GAAG3J,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEkI,YAAY,GAAG8B,sBAAsB,CAAC;YAC/E;YACAR,gBAAgB,GAAGtB,YAAY,GAAGd,UAAU,GAAGqC,sBAAsB;YACrEpB,wBAAwB,GAAGvI,IAAI,CAACiK,IAAI,CAAEjK,IAAI,CAACC,GAAG,CAACsH,wBAAwB,EAAEL,aAAa,GAAGO,wBAAwB,CAAC,GAAIY,iBAAiB,CAAC;YACxI,IAAIa,kBAAkB,EAAE;cACpB;cACArC,MAAM,CAAClJ,wBAAwB,GAAGwB,KAAK;cACvC0H,MAAM,CAAChJ,uBAAuB,GAAG2L,cAAc;cAC/C3C,MAAM,CAACjJ,wBAAwB,GAAGwK,YAAY;YAClD,CAAC,MACI;cACDvB,MAAM,CAAClJ,wBAAwB,GAAG,IAAI;cACtCkJ,MAAM,CAAChJ,uBAAuB,GAAG,CAAC;YACtC;UACJ;QACJ;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAMsM,eAAe,GAAGnK,IAAI,CAAC6H,KAAK,CAACwB,gBAAgB,GAAGK,gBAAgB,CAAC;MACvE,IAAMzB,YAAY,GAAGjI,IAAI,CAACE,GAAG,CAACiK,eAAe,EAAEnK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC6H,KAAK,CAAE,CAAC2B,cAAc,GAAGP,sBAAsB,GAAG,CAAC,IAAIS,gBAAgB,IAAKtC,8BAA8B,GAAGsC,gBAAgB,CAAC,CAAC,CAAC,GAAGrM,oBAAoB,CAAC;MACxN,IAAIiL,uBAAuB,GAAGtI,IAAI,CAAC6H,KAAK,CAACP,UAAU,GAAGW,YAAY,CAAC;MACnE,IAAMO,uBAAuB,GAAGF,uBAAuB,GAAGhB,UAAU;MACpEgB,uBAAuB,GAAGtI,IAAI,CAAC6H,KAAK,CAACS,uBAAuB,GAAGqB,sBAAsB,CAAC;MACtF,IAAM5B,aAAa,GAAIoB,uBAAuB,GAAG,CAAC,CAAC,2BAA2B,CAAC,CAAC,0BAA2B;MAC3G,IAAMnB,WAAW,GAAIuB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAIzC,UAAU,GAAGmB,YAAY,GAAGgB,sBAAwB;MACvG,OAAO;QACHlB,aAAa,EAAbA,aAAa;QACbC,WAAW,EAAXA,WAAW;QACXC,YAAY,EAAZA,YAAY;QACZC,2BAA2B,EAA3BA,2BAA2B;QAC3BC,iBAAiB,EAAjBA,iBAAiB;QACjBC,YAAY,EAAZA,YAAY;QACZC,iBAAiB,EAAjBA,iBAAiB;QACjBC,uBAAuB,EAAvBA,uBAAuB;QACvBC,wBAAwB,EAAxBA,wBAAwB;QACxBC,uBAAuB,EAAvBA,uBAAuB;QACvBC,wBAAwB,EAAxBA;MACJ,CAAC;IACL;EAAC;IAAA;IAAA,OACD,uBAAqBnK,OAAO,EAAED,GAAG,EAAE;MAC/B,IAAMyI,UAAU,GAAGzI,GAAG,CAACyI,UAAU,GAAG,CAAC;MACrC,IAAMC,WAAW,GAAG1I,GAAG,CAAC0I,WAAW,GAAG,CAAC;MACvC,IAAME,UAAU,GAAG5I,GAAG,CAAC4I,UAAU,GAAG,CAAC;MACrC,IAAME,qBAAqB,GAAG9I,GAAG,CAAC8I,qBAAqB,GAAG,CAAC;MAC3D,IAAMC,8BAA8B,GAAG/I,GAAG,CAAC+I,8BAA8B;MACzE,IAAMC,aAAa,GAAGhJ,GAAG,CAACgJ,aAAa;MACvC,IAAMC,UAAU,GAAGjJ,GAAG,CAACiJ,UAAU;MACjC,IAAMJ,aAAa,GAAG7I,GAAG,CAAC6I,aAAa;MACvC,IAAMkD,iBAAiB,GAAG9L,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,qCAAqC;MAC/E,IAAMsH,iBAAiB,GAAID,iBAAiB,KAAK,SAAS,GAAG9L,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,qCAAqC,GAAGqH,iBAAkB;MACvI,IAAME,QAAQ,GAAID,iBAAiB,KAAK,SAAS,GAAG/L,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,4BAA4B,GAAGsH,iBAAkB;MACrH,IAAME,cAAc,GAAGjM,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,kCAAkC;MACzE,IAAMpB,oBAAoB,GAAGrD,OAAO,CAACyE,GAAG,CAAC,CAAC,CAAC,wCAAwC;MACnF,IAAMiE,sBAAsB,GAAG3I,GAAG,CAAC2I,sBAAsB;MACzD,IAAMwD,eAAe,GAAGlM,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,+BAA+B;MACtE,IAAM0H,eAAe,GAAInM,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,+BAA+B,CAAC2H,UAAU,KAAK,CAAC,CAAC,+BAAgC;MACzH,IAAMC,mBAAmB,GAAGrM,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,uCAAuC;MAClF,IAAM2E,oBAAoB,GAAGpJ,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,wCAAwC;MACpF,IAAM+E,OAAO,GAAGxJ,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,2BAA2B;MAC1D,IAAM6H,SAAS,GAAGtM,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,6BAA6B;MAC9D,IAAMkG,sBAAsB,GAAG2B,SAAS,CAACC,qBAAqB;MAC9D,IAAMC,0BAA0B,GAAGF,SAAS,CAACG,iBAAiB;MAC9D,IAAMC,kBAAkB,GAAGJ,SAAS,CAACK,SAAS;MAC9C,IAAMC,yBAAyB,GAAGN,SAAS,CAACO,uBAAuB;MACnE,IAAMC,uBAAuB,GAAG9M,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,wCAAwC;MACvF,IAAMsI,OAAO,GAAG/M,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,2BAA2B;MAC1D,IAAMuI,qBAAqB,GAAGhN,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,uCAAuC,KAAK,OAAO;MACjG,IAAIwI,oBAAoB;MACxB,IAAI,OAAOH,uBAAuB,KAAK,QAAQ,IAAI,iBAAiB,CAACI,IAAI,CAACJ,uBAAuB,CAAC,EAAE;QAChG,IAAMnG,QAAQ,GAAGzE,UAAU,CAAC4K,uBAAuB,CAACK,MAAM,CAAC,CAAC,EAAEL,uBAAuB,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;QAClGH,oBAAoB,GAAGpL,eAAe,CAACT,UAAU,CAACuF,QAAQ,GAAGmC,8BAA8B,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC5G,CAAC,MACI;QACDmE,oBAAoB,GAAGpL,eAAe,CAACT,UAAU,CAAC0L,uBAAuB,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC1F;MACA,IAAIC,OAAO,IAAIC,qBAAqB,EAAE;QAClCC,oBAAoB,IAAI,EAAE;MAC9B;MACA,IAAII,gBAAgB,GAAG,CAAC;MACxB,IAAIlB,eAAe,EAAE;QACjB,IAAMmB,UAAU,GAAG5L,IAAI,CAACC,GAAG,CAACkH,qBAAqB,EAAEwD,mBAAmB,CAAC;QACvEgB,gBAAgB,GAAG3L,IAAI,CAACoJ,KAAK,CAACwC,UAAU,GAAGvE,aAAa,CAAC;MAC7D;MACA,IAAIwE,gBAAgB,GAAG,CAAC;MACxB,IAAIrB,eAAe,EAAE;QACjBqB,gBAAgB,GAAG5E,UAAU;MACjC;MACA,IAAI6E,eAAe,GAAG,CAAC;MACvB,IAAIC,eAAe,GAAGD,eAAe,GAAGD,gBAAgB;MACxD,IAAIG,eAAe,GAAGD,eAAe,GAAGJ,gBAAgB;MACxD,IAAIM,WAAW,GAAGD,eAAe,GAAGT,oBAAoB;MACxD,IAAM/B,cAAc,GAAG1C,UAAU,GAAG+E,gBAAgB,GAAGF,gBAAgB,GAAGJ,oBAAoB;MAC9F,IAAIW,kBAAkB,GAAG,KAAK;MAC9B,IAAIhD,kBAAkB,GAAG,KAAK;MAC9B,IAAIiD,cAAc,GAAG,CAAC,CAAC;MACvB,IAAIxK,oBAAoB,KAAK,CAAC,CAAC,oCAAoC;QAC/D;QACA;QACA;QACA;QACA,IAAI0I,iBAAiB,KAAK,SAAS,IAAIrD,sBAAsB,EAAE;UAC3D;UACAkF,kBAAkB,GAAG,IAAI;UACzBhD,kBAAkB,GAAG,IAAI;QAC7B,CAAC,MACI,IAAIoB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,SAAS,EAAE;UAClDpB,kBAAkB,GAAG,IAAI;QAC7B,CAAC,MACI,IAAIoB,QAAQ,KAAK,gBAAgB,EAAE;UACpC6B,cAAc,GAAG5B,cAAc;QACnC;MACJ;MACA,IAAM6B,aAAa,GAAGzF,wBAAwB,CAAC0F,qBAAqB,CAAC;QACjEvF,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA,WAAW;QACxBE,UAAU,EAAEA,UAAU;QACtBG,8BAA8B,EAAEA,8BAA8B;QAC9DE,UAAU,EAAEA,UAAU;QACtBI,oBAAoB,EAAEA,oBAAoB;QAC1CI,OAAO,EAAEA,OAAO;QAChBmB,sBAAsB,EAAEA,sBAAsB;QAC9C/B,aAAa,EAAEA,aAAa;QAC5BsC,cAAc,EAAEA,cAAc;QAC9BN,kBAAkB,EAAEA;MACxB,CAAC,EAAE7K,GAAG,CAACwI,MAAM,IAAI,IAAInJ,oBAAoB,EAAE,CAAC;MAC5C,IAAI0O,aAAa,CAACrE,aAAa,KAAK,CAAC,CAAC,4BAA4BqE,aAAa,CAACpE,WAAW,KAAK,CAAC,EAAE;QAC/F;QACA8D,eAAe,IAAIM,aAAa,CAACnE,YAAY;QAC7C8D,eAAe,IAAIK,aAAa,CAACnE,YAAY;QAC7C+D,eAAe,IAAII,aAAa,CAACnE,YAAY;QAC7CgE,WAAW,IAAIG,aAAa,CAACnE,YAAY;MAC7C;MACA,IAAMqE,YAAY,GAAG9C,cAAc,GAAG4C,aAAa,CAACnE,YAAY;MAChE;MACA,IAAMsE,cAAc,GAAGvM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC6H,KAAK,CAAC,CAACyE,YAAY,GAAGrD,sBAAsB,GAAG,CAAC,IAAI7B,8BAA8B,CAAC,CAAC;MAC5H,IAAMoF,iBAAiB,GAAI1B,0BAA0B,GAAGE,kBAAkB,GAAG,CAAE;MAC/E,IAAI9B,kBAAkB,EAAE;QACpB;QACAiD,cAAc,GAAGnM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEsM,cAAc,CAAC;QAC5C,IAAIjC,QAAQ,KAAK,SAAS,EAAE;UACxB6B,cAAc,GAAGnM,IAAI,CAACE,GAAG,CAACiM,cAAc,EAAE5B,cAAc,CAAC;QAC7D;MACJ;MACA,OAAO;QACHkC,KAAK,EAAE3F,UAAU;QACjBU,MAAM,EAAET,WAAW;QACnB+E,eAAe,EAAEA,eAAe;QAChCD,gBAAgB,EAAEA,gBAAgB;QAClCE,eAAe,EAAEA,eAAe;QAChCJ,gBAAgB,EAAEA,gBAAgB;QAClCK,eAAe,EAAEA,eAAe;QAChCU,gBAAgB,EAAEnB,oBAAoB;QACtCU,WAAW,EAAEA,WAAW;QACxBK,YAAY,EAAEA,YAAY;QAC1BxE,OAAO,EAAEsE,aAAa;QACtBG,cAAc,EAAEA,cAAc;QAC9BL,kBAAkB,EAAEA,kBAAkB;QACtChD,kBAAkB,EAAEA,kBAAkB;QACtCiD,cAAc,EAAEA,cAAc;QAC9BlD,sBAAsB,EAAEA,sBAAsB;QAC9CiC,yBAAyB,EAAEA,yBAAyB;QACpDyB,aAAa,EAAE;UACXC,GAAG,EAAEJ,iBAAiB;UACtBC,KAAK,EAAExD,sBAAsB;UAC7BzB,MAAM,EAAGT,WAAW,GAAG,CAAC,GAAGyF,iBAAkB;UAC7CK,KAAK,EAAE;QACX;MACJ,CAAC;IACL;EAAC;EAAA;AAAA,EAxTyC5N,oBAAoB;AAyTjE,IACK6N,eAAe;EAAA;EAAA;EACjB,2BAAc;IAAA;IACV,IAAMjL,QAAQ,GAAG;MAAE0E,OAAO,EAAE;IAAK,CAAC;IAAC,2BAC7B,EAAE,CAAC,8BAA8B,WAAW,EAAE1E,QAAQ,EAAE;MAC1D,0BAA0B,EAAE;QACxBrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,kDAAkD;MAC/F;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO;MAC7D,CAAC;IACL;EAAC;EAAA;AAAA,EAnByBzI,gBAAgB;AAAA,IAqBxCiP,kBAAkB;EAAA;EAAA;EACpB,8BAAc;IAAA;IACV,IAAMlL,QAAQ,GAAG;MAAEmL,YAAY,EAAE;QAAEzG,OAAO,EAAE;MAAM;IAAE,CAAC;IAAC,2BAChD,EAAE,CAAC,iCAAiC,cAAc,EAAE1E,QAAQ,EAAE;MAChE,0CAA0C,EAAE;QACxCrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACmL,YAAY,CAACzG,OAAO;QACtC7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,6EAA6E;MAC/I;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAIiE,EAAE;MACN,IAAI,CAACjE,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHgL,YAAY,EAAE;UACVzG,OAAO,EAAElH,OAAO,CAAC,CAAC4G,EAAE,GAAG9G,KAAK,CAAC6N,YAAY,MAAM,IAAI,IAAI/G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACgP,YAAY,CAACzG,OAAO;QACtI;MACJ,CAAC;IACL;EAAC;EAAA;AAAA,EAtB4BzI,gBAAgB;AAAA,IAwB3CmP,gBAAgB;EAAA;EAAA;EAClB,4BAAc;IAAA;IACV,IAAMpL,QAAQ,GAAG;MAAE0E,OAAO,EAAE,IAAI;MAAEjC,QAAQ,EAAE,CAAC;MAAE4I,UAAU,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC;IAAC,2BAC1E,GAAG,CAAC,+BAA+B,YAAY,EAAEtL,QAAQ,EAAE;MAC7D,2BAA2B,EAAE;QACzBrC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,wCAAwC,CAAC;QACxFV,IAAI,EAAE,CAAC,IAAI,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,KAAK,CAAC;QAC1DqM,wBAAwB,EAAE,CACtBrQ,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,EAC/D1E,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,qEAAqE,CAAC,EACxH1E,GAAG,CAAC0E,QAAQ,CAAC,oCAAoC,EAAE,oEAAoE,CAAC,EACxH1E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,0BAA0B,CAAC;MAEzE,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACyC,QAAQ;QAC1B+I,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,8JAA8J,EAAE,qBAAqB,EAAE,KAAK;MACzP,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACqL,UAAU;QAC5BG,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,wFAAwF,EAAE,uBAAuB;MAChL,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACsL,OAAO;QACzBzL,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,2DAA2D;MAC/G;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,IAAI,OAAO7C,KAAK,CAACoH,OAAO,KAAK,SAAS,EAAE;QACpCpH,KAAK,CAACoH,OAAO,GAAGpH,KAAK,CAACoH,OAAO,GAAG,IAAI,GAAG,KAAK;MAChD;MACA,OAAO;QACHA,OAAO,EAAE5F,SAAS,CAACxB,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;QAClHjC,QAAQ,EAAEnE,eAAe,CAACT,UAAU,CAACP,KAAK,CAACmF,QAAQ,EAAE,IAAI,CAACtG,YAAY,CAACsG,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC;QACxF4I,UAAU,EAAEzM,kBAAkB,CAACC,MAAM,CAACvB,KAAK,CAAC+N,UAAU,EAAE,IAAI,CAAClP,YAAY,CAACkP,UAAU,CAAC;QACrFC,OAAO,EAAE9N,OAAO,CAACF,KAAK,CAACgO,OAAO,EAAE,IAAI,CAACnP,YAAY,CAACmP,OAAO;MAC7D,CAAC;IACL;EAAC;EAAA;AAAA,EA/C0BrP,gBAAgB,GAiD/C;AACA;AAAA,IACMwP,gBAAgB;EAAA;EAAA;EAClB,4BAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,+BAA+B,YAAY,EAAEjJ,oBAAoB,CAAC4C,UAAU,EAAE,UAAAsG,CAAC;MAAA,OAAInN,iBAAiB,CAACmE,KAAK,CAACgJ,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAAA,GAAE;MAAEF,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,uPAAuP;IAAE,CAAC;EAChb;EAAC;IAAA;IAAA,OACD,iBAAQpD,GAAG,EAAEC,OAAO,EAAEJ,KAAK,EAAE;MACzB;MACA;MACA;MACA,OAAOG,GAAG,CAAC8F,QAAQ,CAAC8C,UAAU;IAClC;EAAC;EAAA;AAAA,EAT0B7G,iBAAiB;AAAA,IAW1CoN,aAAa;EAAA;EAAA;EACf,yBAAc;IAAA;IACV,IAAM3L,QAAQ,GAAG;MACb0E,OAAO,EAAE,IAAI;MACbqC,IAAI,EAAE,cAAc;MACpBD,IAAI,EAAE,OAAO;MACbE,UAAU,EAAE,WAAW;MACvB4E,QAAQ,EAAE,KAAK;MACf3E,gBAAgB,EAAE,IAAI;MACtBC,SAAS,EAAE,GAAG;MACdC,KAAK,EAAE;IACX,CAAC;IAAC,2BACI,EAAE,CAAC,4BAA4B,SAAS,EAAEnH,QAAQ,EAAE;MACtD,wBAAwB,EAAE;QACtBrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,wCAAwC;MACzF,CAAC;MACD,yBAAyB,EAAE;QACvBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC4L,QAAQ;QAC1B/L,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,uDAAuD;MACzG,CAAC;MACD,qBAAqB,EAAE;QACnBjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,cAAc,EAAE,MAAM,EAAE,KAAK,CAAC;QACrCS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,0EAA0E,CAAC,EACrH1E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,kGAAkG,CAAC,EACrI1E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,yFAAyF,CAAC,CAC9H;QACDhC,OAAO,EAAEoC,QAAQ,CAAC+G,IAAI;QACtBlH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,mCAAmC;MACjF,CAAC;MACD,qBAAqB,EAAE;QACnBjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;QACvBtB,OAAO,EAAEoC,QAAQ,CAAC8G,IAAI;QACtBjH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,gDAAgD;MAC9F,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC7BtB,OAAO,EAAEoC,QAAQ,CAACgH,UAAU;QAC5BnH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,4CAA4C;MAChG,CAAC;MACD,sBAAsB,EAAE;QACpBjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACmH,KAAK;QACvBrJ,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,CAAC;QACVmB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACfW,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,mDAAmD;MAClG,CAAC;MACD,iCAAiC,EAAE;QAC/BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACiH,gBAAgB;QAClCpH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,oEAAoE;MAC9H,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACkH,SAAS;QAC3BrH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,+EAA+E;MAClI;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,CAAC;QAC1DkH,QAAQ,EAAEpO,OAAO,CAACF,KAAK,CAACsO,QAAQ,EAAE,IAAI,CAACzP,YAAY,CAACyP,QAAQ,CAAC;QAC7D7E,IAAI,EAAEjI,SAAS,CAACxB,KAAK,CAACyJ,IAAI,EAAE,IAAI,CAAC5K,YAAY,CAAC4K,IAAI,EAAE,CAAC,cAAc,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACpFD,IAAI,EAAEhI,SAAS,CAACxB,KAAK,CAACwJ,IAAI,EAAE,IAAI,CAAC3K,YAAY,CAAC2K,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACtEE,UAAU,EAAElI,SAAS,CAACxB,KAAK,CAAC0J,UAAU,EAAE,IAAI,CAAC7K,YAAY,CAAC6K,UAAU,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC9FC,gBAAgB,EAAEzJ,OAAO,CAACF,KAAK,CAAC2J,gBAAgB,EAAE,IAAI,CAAC9K,YAAY,CAAC8K,gBAAgB,CAAC;QACrFE,KAAK,EAAE7I,eAAe,CAACT,UAAU,CAACP,KAAK,CAAC6J,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACvDD,SAAS,EAAE5I,eAAe,CAACT,UAAU,CAACP,KAAK,CAAC4J,SAAS,EAAE,IAAI,CAAC/K,YAAY,CAAC+K,SAAS,EAAE,CAAC,EAAE,KAAK;MAChG,CAAC;IACL;EAAC;EAAA;AAAA,EAjFuBjL,gBAAgB,GAmF5C;AACA;AACA,SAAS4P,8BAA8B,CAACC,mBAAmB,EAAE;EACzD,IAAIA,mBAAmB,KAAK,SAAS,EAAE;IACnC,OAAQ3Q,QAAQ,CAAC6G,WAAW,GAAG,SAAS,GAAG,SAAS;EACxD;EACA,OAAO,QAAQ;AACnB;AAAC,IACK+J,aAAa;EAAA;EAAA;EACf,yBAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,4BAA4B,SAAS,EAAE;MAAEhB,GAAG,EAAE,CAAC;MAAEiB,MAAM,EAAE;IAAE,CAAC,EAAE;MACnE,oBAAoB,EAAE;QAClBrO,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CAAC;QACVE,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,IAAI;QACb8B,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,qFAAqF;MAClI,CAAC;MACD,uBAAuB,EAAE;QACrBjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CAAC;QACVE,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,IAAI;QACb8B,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,uFAAuF;MACvI;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACH4K,GAAG,EAAEzM,eAAe,CAACT,UAAU,CAACP,KAAK,CAACyN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;QACtDiB,MAAM,EAAE1N,eAAe,CAACT,UAAU,CAACP,KAAK,CAAC0O,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI;MAC/D,CAAC;IACL;EAAC;EAAA;AAAA,EA5BuB/P,gBAAgB;AAAA,IA8BtCgQ,oBAAoB;EAAA;EAAA;EACtB,gCAAc;IAAA;IACV,IAAMjM,QAAQ,GAAG;MACb0E,OAAO,EAAE,IAAI;MACbwH,KAAK,EAAE;IACX,CAAC;IAAC,2BACI,EAAE,CAAC,mCAAmC,gBAAgB,EAAElM,QAAQ,EAAE;MACpE,+BAA+B,EAAE;QAC7BrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,uFAAuF;MAC/I,CAAC;MACD,6BAA6B,EAAE;QAC3BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACkM,KAAK;QACvBrM,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,+FAA+F;MACrJ;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,CAAC;QAC1DwH,KAAK,EAAE1O,OAAO,CAACF,KAAK,CAAC4O,KAAK,EAAE,IAAI,CAAC/P,YAAY,CAAC+P,KAAK;MACvD,CAAC;IACL;EAAC;EAAA;AAAA,EA5B8BjQ,gBAAgB,GA8BnD;AACA;AAAA,IACMkQ,gBAAgB;EAAA;EAAA;EAClB,4BAAc;IAAA;IAAA,2BACJ,GAAG,CAAC;EACd;EAAC;IAAA;IAAA,OACD,iBAAQ3P,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,OAAOxE,GAAG,CAACiJ,UAAU;IACzB;EAAC;EAAA;AAAA,EAN0BrI,oBAAoB;AAAA,IAQ7CgP,sBAAsB;EAAA;EAAA;EACxB,kCAAc;IAAA;IAAA;IACV,IAAMpM,QAAQ,GAAG;MACbqM,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACb,CAAC;IACD,IAAMC,KAAK,GAAG,CACV;MAAE7O,IAAI,EAAE;IAAU,CAAC,EACnB;MACIA,IAAI,EAAE,QAAQ;MACduB,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;MAC7BS,gBAAgB,EAAE,CAACzE,GAAG,CAAC0E,QAAQ,CAAC,IAAI,EAAE,kDAAkD,CAAC,EAAE1E,GAAG,CAAC0E,QAAQ,CAAC,QAAQ,EAAE,sCAAsC,CAAC,EAAE1E,GAAG,CAAC0E,QAAQ,CAAC,KAAK,EAAE,gCAAgC,CAAC;IACpN,CAAC,CACJ;IACD,6BAAM,EAAE,CAAC,qCAAqC,kBAAkB,EAAEI,QAAQ,EAAE;MACxErC,IAAI,EAAE,QAAQ;MACd8O,oBAAoB,EAAE,KAAK;MAC3BC,UAAU,EAAE;QACRH,OAAO,EAAE;UACLpK,KAAK,EAAEqK,KAAK;UACZ5O,OAAO,EAAEoC,QAAQ,CAACuM,OAAO;UACzB1M,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,0CAA0C;QACpG,CAAC;QACD0M,QAAQ,EAAE;UACNnK,KAAK,EAAEqK,KAAK;UACZ5O,OAAO,EAAEoC,QAAQ,CAACsM,QAAQ;UAC1BzM,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,2CAA2C;QACtG,CAAC;QACDyM,KAAK,EAAE;UACHlK,KAAK,EAAEqK,KAAK;UACZ5O,OAAO,EAAEoC,QAAQ,CAACqM,KAAK;UACvBxM,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,2DAA2D;QACnH;MACJ,CAAC;MACDhC,OAAO,EAAEoC,QAAQ;MACjBwL,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,4UAA4U;IACtY,CAAC;IACD,OAAKzD,YAAY,GAAG6D,QAAQ;IAAC;EACjC;EAAC;IAAA;IAAA,OACD,kBAAS1C,KAAK,EAAE;MACZ,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;QAC5B;QACA,IAAMjB,KAAK,GAAGiB,KAAK,GAAG,IAAI,GAAG,KAAK;QAClC,OAAO;UAAEgP,QAAQ,EAAEjQ,KAAK;UAAEkQ,OAAO,EAAElQ,KAAK;UAAEgQ,KAAK,EAAEhQ;QAAM,CAAC;MAC5D;MACA,IAAI,CAACiB,KAAK,IAAI,QAAOA,KAAK,MAAK,QAAQ,EAAE;QACrC;QACA,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,IAAQkQ,KAAK,GAAwB/O,KAAK,CAAlC+O,KAAK;QAAEC,QAAQ,GAAchP,KAAK,CAA3BgP,QAAQ;QAAEC,OAAO,GAAKjP,KAAK,CAAjBiP,OAAO;MAChC,IAAMxN,aAAa,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;MAC7C,IAAI4N,cAAc;MAClB,IAAIC,iBAAiB;MACrB,IAAIC,gBAAgB;MACpB,IAAI,OAAOR,KAAK,KAAK,SAAS,EAAE;QAC5BM,cAAc,GAAGN,KAAK,GAAG,IAAI,GAAG,KAAK;MACzC,CAAC,MACI;QACDM,cAAc,GAAG7N,SAAS,CAACuN,KAAK,EAAE,IAAI,CAAClQ,YAAY,CAACkQ,KAAK,EAAEtN,aAAa,CAAC;MAC7E;MACA,IAAI,OAAOuN,QAAQ,KAAK,SAAS,EAAE;QAC/BM,iBAAiB,GAAGN,QAAQ,GAAG,IAAI,GAAG,KAAK;MAC/C,CAAC,MACI;QACDM,iBAAiB,GAAG9N,SAAS,CAACwN,QAAQ,EAAE,IAAI,CAACnQ,YAAY,CAACmQ,QAAQ,EAAEvN,aAAa,CAAC;MACtF;MACA,IAAI,OAAOwN,OAAO,KAAK,SAAS,EAAE;QAC9BM,gBAAgB,GAAGN,OAAO,GAAG,IAAI,GAAG,KAAK;MAC7C,CAAC,MACI;QACDM,gBAAgB,GAAG/N,SAAS,CAACyN,OAAO,EAAE,IAAI,CAACpQ,YAAY,CAACoQ,OAAO,EAAExN,aAAa,CAAC;MACnF;MACA,OAAO;QACHsN,KAAK,EAAEM,cAAc;QACrBL,QAAQ,EAAEM,iBAAiB;QAC3BL,OAAO,EAAEM;MACb,CAAC;IACL;EAAC;EAAA;AAAA,EA9EgC5Q,gBAAgB;AAAA,IAgF/C6Q,6BAA6B;EAAA;EAAA;EAC/B,yCAAc;IAAA;IAAA,2BACJ,EAAE,CAAC,gCAAgC,aAAa,EAAE;MAAEjE,UAAU,EAAE,CAAC,CAAC;MAAgCkE,QAAQ,EAAE;IAAK,CAAC,EAAE;MACtHpP,IAAI,EAAE,QAAQ;MACduB,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC;MAC3CS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,gCAAgC,CAAC,EACjE1E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,+CAA+C,CAAC,EAC/E1E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,oEAAoE,CAAC,EAC1G1E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,2CAA2C,CAAC,CACpF;MACDhC,OAAO,EAAE,IAAI;MACbiC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,uCAAuC;IACpF,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASoN,WAAW,EAAE;MAClB,IAAInE,UAAU,GAAG,IAAI,CAAC1M,YAAY,CAAC0M,UAAU;MAC7C,IAAIkE,QAAQ,GAAG,IAAI,CAAC5Q,YAAY,CAAC4Q,QAAQ;MACzC,IAAI,OAAOC,WAAW,KAAK,WAAW,EAAE;QACpC,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;UACnCnE,UAAU,GAAG,CAAC,CAAC;UACfkE,QAAQ,GAAGC,WAAW;QAC1B,CAAC,MACI,IAAIA,WAAW,KAAK,UAAU,EAAE;UACjCnE,UAAU,GAAG,CAAC,CAAC;QACnB,CAAC,MACI,IAAImE,WAAW,KAAK,UAAU,EAAE;UACjCnE,UAAU,GAAG,CAAC,CAAC;QACnB,CAAC,MACI,IAAImE,WAAW,KAAK,IAAI,EAAE;UAC3BnE,UAAU,GAAG,CAAC,CAAC;QACnB,CAAC,MACI;UACDA,UAAU,GAAG,CAAC,CAAC;QACnB;MACJ;;MACA,OAAO;QACHA,UAAU,EAAVA,UAAU;QACVkE,QAAQ,EAARA;MACJ,CAAC;IACL;EAAC;EAAA;AAAA,EAxCuC9Q,gBAAgB,GA0C5D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgR,2BAA2B,CAACxQ,OAAO,EAAE;EACjD,IAAMyQ,2BAA2B,GAAGzQ,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,+CAA+C;EAClG,IAAIgM,2BAA2B,KAAK,UAAU,EAAE;IAC5C,OAAOzQ,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,4BAA4B;EACtD;;EACA,OAAOgM,2BAA2B,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI;AAC9D;AAAC,IACKC,YAAY;EAAA;EAAA;EACd,wBAAc;IAAA;IACV,IAAMnN,QAAQ,GAAG,EAAE;IACnB,IAAMoN,YAAY,GAAG;MAAEzP,IAAI,EAAE,QAAQ;MAAEkC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,wEAAwE;IAAE,CAAC;IAAC,2BACtJ,EAAE,CAAC,2BAA2B,QAAQ,EAAEI,QAAQ,EAAE;MACpDrC,IAAI,EAAE,OAAO;MACb0P,KAAK,EAAE;QACHlL,KAAK,EAAE,CACHiL,YAAY,EACZ;UACIzP,IAAI,EAAE,CACF,QAAQ,CACX;UACD+O,UAAU,EAAE;YACRY,MAAM,EAAEF,YAAY;YACpBG,KAAK,EAAE;cACH5P,IAAI,EAAE,QAAQ;cACdkC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,6BAA6B,CAAC;cACxE4N,MAAM,EAAE;YACZ;UACJ;QACJ,CAAC;MAET,CAAC;MACD5P,OAAO,EAAEoC,QAAQ;MACjBH,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,QAAQ,EAAE,wJAAwJ;IAChM,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAAStC,KAAK,EAAE;MACZ,IAAIT,KAAK,CAACC,OAAO,CAACQ,KAAK,CAAC,EAAE;QACtB,IAAMmQ,MAAM,GAAG,EAAE;QAAC,2CACKnQ,KAAK;UAAA;QAAA;UAA5B,oDAA8B;YAAA,IAAnBoQ,QAAQ;YACf,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;cAC9BD,MAAM,CAACtM,IAAI,CAAC;gBACRmM,MAAM,EAAEhP,eAAe,CAACT,UAAU,CAAC6P,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;gBACzDH,KAAK,EAAE;cACX,CAAC,CAAC;YACN,CAAC,MACI,IAAIG,QAAQ,IAAI,QAAOA,QAAQ,MAAK,QAAQ,EAAE;cAC/C,IAAMC,OAAO,GAAGD,QAAQ;cACxBD,MAAM,CAACtM,IAAI,CAAC;gBACRmM,MAAM,EAAEhP,eAAe,CAACT,UAAU,CAAC8P,OAAO,CAACL,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;gBAC/DC,KAAK,EAAEI,OAAO,CAACJ;cACnB,CAAC,CAAC;YACN;UACJ;QAAC;UAAA;QAAA;UAAA;QAAA;QACDE,MAAM,CAACG,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;UAAA,OAAKD,CAAC,CAACP,MAAM,GAAGQ,CAAC,CAACR,MAAM;QAAA,EAAC;QAC1C,OAAOG,MAAM;MACjB;MACA,OAAO,IAAI,CAACtR,YAAY;IAC5B;EAAC;EAAA;AAAA,EAlDsBF,gBAAgB;AAoD3C,SAAS8R,8BAA8B,CAACC,UAAU,EAAE7R,YAAY,EAAE;EAC9D,IAAI,OAAO6R,UAAU,KAAK,QAAQ,EAAE;IAChC,OAAO7R,YAAY;EACvB;EACA,QAAQ6R,UAAU;IACd,KAAK,QAAQ;MAAE,OAAO,CAAC,CAAC;IACxB,KAAK,SAAS;MAAE,OAAO,CAAC,CAAC;IACzB;MAAS,OAAO,CAAC,CAAC;EAA+B;AAEzD;AAAC,IACKC,eAAe;EAAA;EAAA;EACjB,2BAAc;IAAA;IACV,IAAMjO,QAAQ,GAAG;MACbkO,QAAQ,EAAE,CAAC,CAAC;MACZC,UAAU,EAAE,CAAC,CAAC;MACd/E,SAAS,EAAE,EAAE;MACbgF,UAAU,EAAE,IAAI;MAChBlF,iBAAiB,EAAE,KAAK;MACxBmF,mBAAmB,EAAE,KAAK;MAC1B/E,uBAAuB,EAAE,EAAE;MAC3BgF,oBAAoB,EAAE,EAAE;MACxBtF,qBAAqB,EAAE,EAAE;MACzBuF,kBAAkB,EAAE,EAAE;MACtBC,gBAAgB,EAAE,IAAI;MACtBC,uBAAuB,EAAE,IAAI;MAC7BC,YAAY,EAAE;IAClB,CAAC;IAAC,2BACI,EAAE,CAAC,8BAA8B,WAAW,EAAE1O,QAAQ,EAAE;MAC1D,2BAA2B,EAAE;QACzBrC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;QACnCS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,6DAA6D,CAAC,EACtG1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,gDAAgD,CAAC,EAC5F1E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,+CAA+C,CAAC,CAC1F;QACDhC,OAAO,EAAE,MAAM;QACfiC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,oDAAoD;MACxG,CAAC;MACD,6BAA6B,EAAE;QAC3BjC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;QACnCS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,+DAA+D,CAAC,EAC1G1E,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,kDAAkD,CAAC,EAChG1E,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,iDAAiD,CAAC,CAC9F;QACDhC,OAAO,EAAE,MAAM;QACfiC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,sDAAsD;MAC5G,CAAC;MACD,wCAAwC,EAAE;QACtCjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACgJ,qBAAqB;QACvCnJ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,sCAAsC;MACvG,CAAC;MACD,0CAA0C,EAAE;QACxCjC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEoC,QAAQ,CAACsJ,uBAAuB;QACzCzJ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,yCAAyC;MAC5G,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0O,YAAY;QAC9B7O,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,mEAAmE;MAC3H;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,IAAMmJ,uBAAuB,GAAGhL,eAAe,CAACT,UAAU,CAACP,KAAK,CAACgM,uBAAuB,EAAE,IAAI,CAACnN,YAAY,CAACmN,uBAAuB,EAAE,CAAC,EAAE,IAAI,CAAC;MAC7I,IAAMN,qBAAqB,GAAG1K,eAAe,CAACT,UAAU,CAACP,KAAK,CAAC0L,qBAAqB,EAAE,IAAI,CAAC7M,YAAY,CAAC6M,qBAAqB,EAAE,CAAC,EAAE,IAAI,CAAC;MACvI,OAAO;QACHI,SAAS,EAAE9K,eAAe,CAACT,UAAU,CAACP,KAAK,CAAC8L,SAAS,EAAE,IAAI,CAACjN,YAAY,CAACiN,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC;QAC5F8E,QAAQ,EAAEH,8BAA8B,CAACzQ,KAAK,CAAC4Q,QAAQ,EAAE,IAAI,CAAC/R,YAAY,CAAC+R,QAAQ,CAAC;QACpFC,UAAU,EAAEJ,8BAA8B,CAACzQ,KAAK,CAAC6Q,UAAU,EAAE,IAAI,CAAChS,YAAY,CAACgS,UAAU,CAAC;QAC1FC,UAAU,EAAE5Q,OAAO,CAACF,KAAK,CAAC8Q,UAAU,EAAE,IAAI,CAACjS,YAAY,CAACiS,UAAU,CAAC;QACnElF,iBAAiB,EAAE1L,OAAO,CAACF,KAAK,CAAC4L,iBAAiB,EAAE,IAAI,CAAC/M,YAAY,CAAC+M,iBAAiB,CAAC;QACxFmF,mBAAmB,EAAE7Q,OAAO,CAACF,KAAK,CAAC+Q,mBAAmB,EAAE,IAAI,CAAClS,YAAY,CAACkS,mBAAmB,CAAC;QAC9FG,gBAAgB,EAAEhR,OAAO,CAACF,KAAK,CAACkR,gBAAgB,EAAE,IAAI,CAACrS,YAAY,CAACqS,gBAAgB,CAAC;QACrFC,uBAAuB,EAAEjR,OAAO,CAACF,KAAK,CAACmR,uBAAuB,EAAE,IAAI,CAACtS,YAAY,CAACsS,uBAAuB,CAAC;QAC1GnF,uBAAuB,EAAEA,uBAAuB;QAChDgF,oBAAoB,EAAEhQ,eAAe,CAACT,UAAU,CAACP,KAAK,CAACgR,oBAAoB,EAAEhF,uBAAuB,EAAE,CAAC,EAAE,IAAI,CAAC;QAC9GN,qBAAqB,EAAEA,qBAAqB;QAC5CuF,kBAAkB,EAAEjQ,eAAe,CAACT,UAAU,CAACP,KAAK,CAACiR,kBAAkB,EAAEvF,qBAAqB,EAAE,CAAC,EAAE,IAAI,CAAC;QACxG0F,YAAY,EAAElR,OAAO,CAACF,KAAK,CAACoR,YAAY,EAAE,IAAI,CAACvS,YAAY,CAACuS,YAAY;MAC5E,CAAC;IACL;EAAC;EAAA;AAAA,EA/EyBzS,gBAAgB;AAiF9C;AACA;AACA;AACA,OAAO,IAAM0S,oBAAoB,GAAG,sBAAsB;AAC1D;AACA;AACA;AACA,OAAO,IAAMC,0BAA0B,GAAG;EACtCC,iBAAiB,EAAE,2CAA2C;EAC9DC,mBAAmB,EAAE,6CAA6C;EAClEC,aAAa,EAAE,uCAAuC;EACtDC,mBAAmB,EAAE,6CAA6C;EAClEC,eAAe,EAAE,yCAAyC;EAC1DC,cAAc,EAAE,wCAAwC;EACxDC,cAAc,EAAE;AACpB,CAAC;AAAC,IACIC,gBAAgB;EAAA;EAAA;EAClB,4BAAc;IAAA;IAAA;IACV,IAAMpP,QAAQ,GAAG;MACb+O,aAAa,EAAEJ,oBAAoB;MACnCG,mBAAmB,EAAE,IAAI;MACzBE,mBAAmB,EAAE,IAAI;MACzBC,eAAe,EAAEN,oBAAoB;MACrCO,cAAc,EAAE,IAAI;MACpBL,iBAAiB,EAAE,CAAC,CAAC;MACrBM,cAAc,EAAE;QAAEE,GAAG,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAK;IAC/C,CAAC;IAAC,2BACI,GAAG,CAAC,wCAAwC,kBAAkB,EAAEtP,QAAQ,sDACzE4O,0BAA0B,CAACG,aAAa,EAAG;MACxCQ,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;MAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEyP,oBAAoB,CAAC;MACzC/Q,OAAO,EAAEoC,QAAQ,CAAC+O,aAAa;MAC/BlP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gCAAgC,EAAE,4KAA4K;IAC5O,CAAC,kCACAgP,0BAA0B,CAACE,mBAAmB,EAAG;MAC9CS,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,SAAS;MACfC,OAAO,EAAEoC,QAAQ,CAAC8O,mBAAmB;MACrCjP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sCAAsC,EAAE,8FAA8F;IACpK,CAAC,kCACAgP,0BAA0B,CAACI,mBAAmB,EAAG;MAC9CO,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,SAAS;MACfC,OAAO,EAAEoC,QAAQ,CAACgP,mBAAmB;MACrCnP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sCAAsC,EAAE,wJAAwJ;IAC9N,CAAC,kCACAgP,0BAA0B,CAACK,eAAe,EAAG;MAC1CM,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;MAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEyP,oBAAoB,CAAC;MACzC/Q,OAAO,EAAEoC,QAAQ,CAACiP,eAAe;MACjCpP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,yFAAyF;IAC3J,CAAC,kCACAgP,0BAA0B,CAACM,cAAc,EAAG;MACzCK,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;MAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEyP,oBAAoB,CAAC;MACzC/Q,OAAO,EAAEoC,QAAQ,CAACkP,cAAc;MAChCrP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,wFAAwF;IACzJ,CAAC,kCACAgP,0BAA0B,CAACC,iBAAiB,EAAG;MAC5CU,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAEoC,QAAQ,CAAC6O,iBAAiB;MACnChP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oCAAoC,EAAE,4DAA4D,CAAC;MAC7H6M,oBAAoB,EAAE;QAClB9O,IAAI,EAAE;MACV;IACJ,CAAC,kCACAiR,0BAA0B,CAACO,cAAc,EAAG;MACzCI,UAAU,EAAE,IAAI;MAChB5R,IAAI,EAAE,QAAQ;MACd8O,oBAAoB,EAAE;QAClB9O,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAEoC,QAAQ,CAACmP,cAAc;MAChCtP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,kFAAkF;IACnJ,CAAC;EAET;EAAC;IAAA;IAAA,OACD,qBAAYvD,KAAK,EAAEC,MAAM,EAAE;MACvB,IAAIM,SAAS,GAAG,KAAK;MACrB,IAAIN,MAAM,CAACuS,iBAAiB,IAAIxS,KAAK,EAAE;QACnC;QACA,IAAI,CAACf,OAAO,CAAC0B,MAAM,CAACX,KAAK,CAACwS,iBAAiB,EAAEvS,MAAM,CAACuS,iBAAiB,CAAC,EAAE;UACpExS,KAAK,GAAG6H,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE9H,KAAK,CAAC,EAAE;YAAEwS,iBAAiB,EAAEvS,MAAM,CAACuS;UAAkB,CAAC,CAAC;UAChGjS,SAAS,GAAG,IAAI;QACpB;MACJ;MACA,IAAIN,MAAM,CAAC6S,cAAc,IAAI9S,KAAK,EAAE;QAChC;QACA,IAAI,CAACf,OAAO,CAAC0B,MAAM,CAACX,KAAK,CAAC8S,cAAc,EAAE7S,MAAM,CAAC6S,cAAc,CAAC,EAAE;UAC9D9S,KAAK,GAAG6H,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE9H,KAAK,CAAC,EAAE;YAAE8S,cAAc,EAAE7S,MAAM,CAAC6S;UAAe,CAAC,CAAC;UAC1FvS,SAAS,GAAG,IAAI;QACpB;MACJ;MACA,IAAMO,MAAM,qFAAqBd,KAAK,EAAEC,MAAM,CAAC;MAC/C,IAAIM,SAAS,EAAE;QACX,OAAO,IAAIF,iBAAiB,CAACS,MAAM,CAACR,QAAQ,EAAE,IAAI,CAAC;MACvD;MACA,OAAOQ,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,kBAASgD,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACH4O,aAAa,EAAES,YAAY,CAAClS,KAAK,CAACyR,aAAa,EAAEJ,oBAAoB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEA,oBAAoB,CAAC,CAAC;QAC3GG,mBAAmB,EAAEtR,OAAO,CAACF,KAAK,CAACwR,mBAAmB,EAAE,IAAI,CAAC3S,YAAY,CAAC2S,mBAAmB,CAAC;QAC9FE,mBAAmB,EAAExR,OAAO,CAACF,KAAK,CAAC0R,mBAAmB,EAAE,IAAI,CAAC7S,YAAY,CAAC6S,mBAAmB,CAAC;QAC9FC,eAAe,EAAEO,YAAY,CAAClS,KAAK,CAAC2R,eAAe,EAAEN,oBAAoB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEA,oBAAoB,CAAC,CAAC;QAC/GO,cAAc,EAAEM,YAAY,CAAClS,KAAK,CAAC4R,cAAc,EAAEP,oBAAoB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAEA,oBAAoB,CAAC,CAAC;QAC7GE,iBAAiB,EAAE,IAAI,CAACY,kBAAkB,CAACtP,MAAM,CAAC0O,iBAAiB,EAAE,IAAI,CAAC1S,YAAY,CAAC0S,iBAAiB,CAAC;QACzGM,cAAc,EAAE,IAAI,CAACM,kBAAkB,CAACtP,MAAM,CAACgP,cAAc,EAAE,IAAI,CAAChT,YAAY,CAACgT,cAAc;MACnG,CAAC;IACL;EAAC;IAAA;IAAA,OACD,4BAAmBO,GAAG,EAAEvT,YAAY,EAAE;MAClC,IAAK,QAAOuT,GAAG,MAAK,QAAQ,IAAK,CAACA,GAAG,EAAE;QACnC,OAAOvT,YAAY;MACvB;MACA,IAAMgB,MAAM,GAAG,CAAC,CAAC;MACjB,mCAA2B+G,MAAM,CAACyL,OAAO,CAACD,GAAG,CAAC,qCAAE;QAA3C;UAAOzS,GAAG;UAAEZ,KAAK;QAClB,IAAIA,KAAK,KAAK,IAAI,EAAE;UAChBc,MAAM,CAACF,GAAG,CAAC,GAAG,IAAI;QACtB;MACJ;MACA,OAAOE,MAAM;IACjB;EAAC;EAAA;AAAA,EAjH0BlB,gBAAgB;AAmH/C;AACA;AACA;AAFA,IAGM2T,mBAAmB;EAAA;EAAA;EACrB,+BAAc;IAAA;IACV,IAAM5P,QAAQ,GAAG;MACb0E,OAAO,EAAE,IAAI;MACbmL,IAAI,EAAE;IACV,CAAC;IAAC,2BACI,EAAE,CAAC,kCAAkC,eAAe,EAAE7P,QAAQ,EAAE;MAClE,8BAA8B,EAAE;QAC5BrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB7E,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,0EAA0E;MACjI;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,CAAC;QAC1DmL,IAAI,EAAE/Q,SAAS,CAACxB,KAAK,CAACuS,IAAI,EAAE,IAAI,CAAC1T,YAAY,CAAC0T,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,cAAc,CAAC;MAC7F,CAAC;IACL;EAAC;EAAA;AAAA,EAvB6B5T,gBAAgB;AAyBlD;AACA;AACA;AAFA,IAGM6T,uBAAuB;EAAA;EAAA;EACzB,mCAAc;IAAA;IACV,IAAM9P,QAAQ,GAAG;MACb0E,OAAO,EAAEnJ,qBAAqB,CAACwU,8BAA8B,CAACrL,OAAO;MACrEsL,kCAAkC,EAAEzU,qBAAqB,CAACwU,8BAA8B,CAACC;IAC7F,CAAC;IAAC,2BACI,EAAE,CAAC,4CAA4C,yBAAyB,EAAEhQ,QAAQ,EAAE;MACtF,wCAAwC,EAAE;QACtCrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB8G,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,iHAAiH,EAAE,mCAAmC;MAC/N,CAAC;MACD,mEAAmE,EAAE;QACjEjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACgQ,kCAAkC;QACpDnQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,4DAA4D,EAAE,wEAAwE;MACpK;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO,CAAC;QAC1DsL,kCAAkC,EAAExS,OAAO,CAACF,KAAK,CAAC0S,kCAAkC,EAAE,IAAI,CAAC7T,YAAY,CAAC6T,kCAAkC;MAC9I,CAAC;IACL;EAAC;EAAA;AAAA,EA5BiC/T,gBAAgB;AA8BtD;AACA;AACA;AAFA,IAGMgU,YAAY;EAAA;EAAA;EACd,wBAAc;IAAA;IACV,IAAMjQ,QAAQ,GAAG;MACbkQ,YAAY,EAAE,KAAK;MACnBC,sBAAsB,EAAE,QAAQ;MAChCC,0BAA0B,EAAE,IAAI;MAChCC,WAAW,EAAE,IAAI;MACjBC,0BAA0B,EAAE;IAChC,CAAC;IAAC,2BACI,EAAE,CAAC,2BAA2B,QAAQ,EAAEtQ,QAAQ,EAAE;MACpD,4BAA4B,EAAE;QAC1BrC,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;QAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;QAC7BS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,8BAA8B,CAAC,EAC/E1E,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,+DAA+D,CAAC,EAClH1E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,+BAA+B,CAAC,CACpF;QACDhC,OAAO,EAAEoC,QAAQ,CAACkQ,YAAY;QAC9BrQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,0DAA0D;MACtH,CAAC;MACD,sCAAsC,EAAE;QACpCjC,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;QAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;QAC7BS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,2CAA2C,EAAE,wEAAwE,CAAC,EACnI1E,GAAG,CAAC0E,QAAQ,CAAC,6CAA6C,EAAE,6DAA6D,CAAC,EAC1H1E,GAAG,CAAC0E,QAAQ,CAAC,4CAA4C,EAAE,0CAA0C,CAAC,CACzG;QACDhC,OAAO,EAAEoC,QAAQ,CAACmQ,sBAAsB;QACxCtQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sCAAsC,EAAE,qEAAqE;MAC3I,CAAC;MACD,0CAA0C,EAAE;QACxCjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACoQ,0BAA0B;QAC5CvQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0CAA0C,EAAE,uEAAuE;MACjJ,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACqQ,WAAW;QAC7BxQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,0DAA0D;MACrH,CAAC;MACD,0CAA0C,EAAE;QACxCjC,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;QAC3BuB,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;QAC7BS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,+CAA+C,EAAE,qCAAqC,CAAC,EACpG1E,GAAG,CAAC0E,QAAQ,CAAC,iDAAiD,EAAE,4EAA4E,CAAC,EAC7I1E,GAAG,CAAC0E,QAAQ,CAAC,gDAAgD,EAAE,2CAA2C,CAAC,CAC9G;QACDhC,OAAO,EAAEoC,QAAQ,CAACsQ,0BAA0B;QAC5CzQ,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,0CAA0C,EAAE,uEAAuE;MACjJ;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACH+P,YAAY,EAAEV,YAAY,CAAClS,KAAK,CAAC4S,YAAY,EAAE,IAAI,CAAC/T,YAAY,CAAC+T,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvGC,sBAAsB,EAAEX,YAAY,CAAClS,KAAK,CAAC6S,sBAAsB,EAAE,IAAI,CAAChU,YAAY,CAACgU,sBAAsB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrIC,0BAA0B,EAAE5S,OAAO,CAACF,KAAK,CAAC8S,0BAA0B,EAAE,IAAI,CAACjU,YAAY,CAACiU,0BAA0B,CAAC;QACnHC,WAAW,EAAE7S,OAAO,CAACF,KAAK,CAAC+S,WAAW,EAAE,IAAI,CAAClU,YAAY,CAACkU,WAAW,CAAC;QACtEC,0BAA0B,EAAEd,YAAY,CAAClS,KAAK,CAACgT,0BAA0B,EAAE,IAAI,CAACnU,YAAY,CAACmU,0BAA0B,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;MACpJ,CAAC;IACL;EAAC;EAAA;AAAA,EAnEsBrU,gBAAgB;AAqE3C,SAASuT,YAAY,CAACnT,KAAK,EAAEF,YAAY,EAAE4C,aAAa,EAAE;EACtD,IAAMwR,GAAG,GAAGxR,aAAa,CAACC,OAAO,CAAC3C,KAAK,CAAC;EACxC,IAAIkU,GAAG,KAAK,CAAC,CAAC,EAAE;IACZ,OAAOpU,YAAY;EACvB;EACA,OAAO4C,aAAa,CAACwR,GAAG,CAAC;AAC7B;AAAC,IACKC,aAAa;EAAA;EAAA;EACf,yBAAc;IAAA;IACV,IAAMxQ,QAAQ,GAAG;MACbyQ,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,IAAI;MACpBC,+BAA+B,EAAE,IAAI;MACrCC,aAAa,EAAE,KAAK;MACpBC,sBAAsB,EAAE,KAAK;MAC7BC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE,KAAK;MACpBC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,cAAc;MAC3BC,iBAAiB,EAAE,IAAI;MACvBC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,IAAI;MACnBC,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,IAAI;MACrBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;IAChB,CAAC;IAAC,2BACI,GAAG,CAAC,4BAA4B,SAAS,EAAE9S,QAAQ,EAAE;MACvD,2BAA2B,EAAE;QACzBrC,IAAI,EAAE,QAAQ;QACduB,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;QAC3BS,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,iEAAiE,CAAC,EAC5G1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,2DAA2D,CAAC,CAC1G;QACDhC,OAAO,EAAEoC,QAAQ,CAACyQ,UAAU;QAC5B5Q,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,mIAAmI;MACvL,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0Q,cAAc;QAChC7Q,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,8EAA8E;MACtI,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC4Q,aAAa;QAC/B/Q,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,wEAAwE;MAC/H,CAAC;MACD,uCAAuC,EAAE;QACrCjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC6Q,sBAAsB;QACxCrF,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,gCAAgC,EAAE,2IAA2I;MACnN,CAAC;MACD,gDAAgD,EAAE;QAC9CjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC2Q,+BAA+B;QACjD9Q,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,yCAAyC,EAAE,gEAAgE;MACzI,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC8Q,SAAS;QAC3BjR,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,wDAAwD;MAC3G,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC+Q,aAAa;QAC/BlR,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,gFAAgF;MACvI,CAAC;MACD,wBAAwB,EAAE;QACtBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACgR,OAAO;QACzBnR,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,mEAAmE;MACpH,CAAC;MACD,kCAAkC,EAAE;QAChCjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAACkR,iBAAiB;QACnCrR,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,2FAA2F;MACtJ,CAAC;MACD,sCAAsC,EAAE;QACpCjC,IAAI,EAAE,QAAQ;QACdsG,kBAAkB,EAAE/I,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,oEAAoE;MAC9I,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,QAAQ;QACdsG,kBAAkB,EAAE/I,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,uIAAuI;MAC1L,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,uDAAuD;MAC3H,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,yDAAyD;MAC/H,CAAC;MACD,iCAAiC,EAAE;QAC/BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,4DAA4D;MACrI,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,2DAA2D;MAClI,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sDAAsD;MACzH,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,yDAAyD;MAC/H,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sDAAsD;MACzH,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,uDAAuD;MAC3H,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,0DAA0D;MACjI,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,uDAAuD;MAC3H,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,yDAAyD;MAC/H,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sDAAsD;MACzH,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,yDAAyD;MAC/H,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,qDAAqD;MACvH,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sDAAsD;MACzH,CAAC;MACD,8BAA8B,EAAE;QAC5BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,yDAAyD;MAC/H,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,qDAAqD;MACvH,CAAC;MACD,gCAAgC,EAAE;QAC9BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,gCAAgC,EAAE,2DAA2D;MACnI,CAAC;MACD,6BAA6B,EAAE;QAC3BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,wDAAwD;MAC7H,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,qDAAqD;MACvH,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sDAAsD;MACzH,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,qDAAqD;MACvH,CAAC;MACD,+BAA+B,EAAE;QAC7BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,0DAA0D;MACjI,CAAC;MACD,iCAAiC,EAAE;QAC/BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,4DAA4D;MACrI,CAAC;MACD,4BAA4B,EAAE;QAC1BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,uDAAuD;MAC3H,CAAC;MACD,mCAAmC,EAAE;QACjCjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,8DAA8D;MACzI,CAAC;MACD,6BAA6B,EAAE;QAC3BjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,wDAAwD;MAC7H,CAAC;MACD,0BAA0B,EAAE;QACxBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,0BAA0B,EAAE,qDAAqD;MACvH,CAAC;MACD,2BAA2B,EAAE;QACzBjC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI;QACb4N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,uDAAuD;MAC1H;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHsQ,UAAU,EAAE3R,SAAS,CAACxB,KAAK,CAACmT,UAAU,EAAE,IAAI,CAACtU,YAAY,CAACsU,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC5FC,cAAc,EAAElT,OAAO,CAACF,KAAK,CAACoT,cAAc,EAAE,IAAI,CAACvU,YAAY,CAACuU,cAAc,CAAC;QAC/EC,+BAA+B,EAAEnT,OAAO,CAACF,KAAK,CAACqT,+BAA+B,EAAE,IAAI,CAACxU,YAAY,CAACuU,cAAc,CAAC;QACjHE,aAAa,EAAEpT,OAAO,CAACF,KAAK,CAACsT,aAAa,EAAE,IAAI,CAACzU,YAAY,CAACyU,aAAa,CAAC;QAC5EC,sBAAsB,EAAErT,OAAO,CAACF,KAAK,CAACuT,sBAAsB,EAAE,IAAI,CAAC1U,YAAY,CAAC0U,sBAAsB,CAAC;QACvGC,SAAS,EAAEtT,OAAO,CAACF,KAAK,CAACwT,SAAS,EAAE,IAAI,CAAC3U,YAAY,CAAC2U,SAAS,CAAC;QAChEC,aAAa,EAAEvT,OAAO,CAACF,KAAK,CAACyT,aAAa,EAAE,IAAI,CAAC5U,YAAY,CAAC4U,aAAa,CAAC;QAC5EC,OAAO,EAAExT,OAAO,CAACF,KAAK,CAAC0T,OAAO,EAAE,IAAI,CAAC7U,YAAY,CAAC6U,OAAO,CAAC;QAC1DC,WAAW,EAAEnS,SAAS,CAACxB,KAAK,CAAC2T,WAAW,EAAE,IAAI,CAAC9U,YAAY,CAAC8U,WAAW,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;QAC/GC,iBAAiB,EAAE1T,OAAO,CAACF,KAAK,CAAC4T,iBAAiB,EAAE,IAAI,CAAC/U,YAAY,CAAC+U,iBAAiB,CAAC;QACxFC,WAAW,EAAE3T,OAAO,CAACF,KAAK,CAAC6T,WAAW,EAAE,IAAI,CAAChV,YAAY,CAACgV,WAAW,CAAC;QACtEC,aAAa,EAAE5T,OAAO,CAACF,KAAK,CAAC8T,aAAa,EAAE,IAAI,CAACjV,YAAY,CAACiV,aAAa,CAAC;QAC5EC,gBAAgB,EAAE7T,OAAO,CAACF,KAAK,CAAC+T,gBAAgB,EAAE,IAAI,CAAClV,YAAY,CAACkV,gBAAgB,CAAC;QACrFC,cAAc,EAAE9T,OAAO,CAACF,KAAK,CAACgU,cAAc,EAAE,IAAI,CAACnV,YAAY,CAACmV,cAAc,CAAC;QAC/EC,UAAU,EAAE/T,OAAO,CAACF,KAAK,CAACiU,UAAU,EAAE,IAAI,CAACpV,YAAY,CAACoV,UAAU,CAAC;QACnEC,aAAa,EAAEhU,OAAO,CAACF,KAAK,CAACkU,aAAa,EAAE,IAAI,CAACrV,YAAY,CAACqV,aAAa,CAAC;QAC5EC,WAAW,EAAEjU,OAAO,CAACF,KAAK,CAACmU,WAAW,EAAE,IAAI,CAACtV,YAAY,CAACsV,WAAW,CAAC;QACtEC,WAAW,EAAElU,OAAO,CAACF,KAAK,CAACoU,WAAW,EAAE,IAAI,CAACvV,YAAY,CAACuV,WAAW,CAAC;QACtEC,cAAc,EAAEnU,OAAO,CAACF,KAAK,CAACqU,cAAc,EAAE,IAAI,CAACxV,YAAY,CAACwV,cAAc,CAAC;QAC/EC,WAAW,EAAEpU,OAAO,CAACF,KAAK,CAACsU,WAAW,EAAE,IAAI,CAACzV,YAAY,CAACyV,WAAW,CAAC;QACtEC,cAAc,EAAErU,OAAO,CAACF,KAAK,CAACuU,cAAc,EAAE,IAAI,CAAC1V,YAAY,CAAC0V,cAAc,CAAC;QAC/EC,UAAU,EAAEtU,OAAO,CAACF,KAAK,CAACwU,UAAU,EAAE,IAAI,CAAC3V,YAAY,CAAC2V,UAAU,CAAC;QACnEC,aAAa,EAAEvU,OAAO,CAACF,KAAK,CAACyU,aAAa,EAAE,IAAI,CAAC5V,YAAY,CAAC4V,aAAa,CAAC;QAC5EC,SAAS,EAAExU,OAAO,CAACF,KAAK,CAAC0U,SAAS,EAAE,IAAI,CAAC7V,YAAY,CAAC6V,SAAS,CAAC;QAChEC,UAAU,EAAEzU,OAAO,CAACF,KAAK,CAAC2U,UAAU,EAAE,IAAI,CAAC9V,YAAY,CAAC8V,UAAU,CAAC;QACnEC,aAAa,EAAE1U,OAAO,CAACF,KAAK,CAAC4U,aAAa,EAAE,IAAI,CAAC/V,YAAY,CAAC+V,aAAa,CAAC;QAC5EC,SAAS,EAAE3U,OAAO,CAACF,KAAK,CAAC6U,SAAS,EAAE,IAAI,CAAChW,YAAY,CAACgW,SAAS,CAAC;QAChEC,eAAe,EAAE5U,OAAO,CAACF,KAAK,CAAC8U,eAAe,EAAE,IAAI,CAACjW,YAAY,CAACiW,eAAe,CAAC;QAClFC,YAAY,EAAE7U,OAAO,CAACF,KAAK,CAAC+U,YAAY,EAAE,IAAI,CAAClW,YAAY,CAACkW,YAAY,CAAC;QACzEC,SAAS,EAAE9U,OAAO,CAACF,KAAK,CAACgV,SAAS,EAAE,IAAI,CAACnW,YAAY,CAACmW,SAAS,CAAC;QAChEC,UAAU,EAAE/U,OAAO,CAACF,KAAK,CAACiV,UAAU,EAAE,IAAI,CAACpW,YAAY,CAACoW,UAAU,CAAC;QACnEC,SAAS,EAAEhV,OAAO,CAACF,KAAK,CAACkV,SAAS,EAAE,IAAI,CAACrW,YAAY,CAACqW,SAAS,CAAC;QAChEC,cAAc,EAAEjV,OAAO,CAACF,KAAK,CAACmV,cAAc,EAAE,IAAI,CAACtW,YAAY,CAACsW,cAAc,CAAC;QAC/EC,WAAW,EAAElV,OAAO,CAACF,KAAK,CAACoV,WAAW,EAAE,IAAI,CAACvW,YAAY,CAACuW,WAAW,CAAC;QACtEC,kBAAkB,EAAEnV,OAAO,CAACF,KAAK,CAACqV,kBAAkB,EAAE,IAAI,CAACxW,YAAY,CAACwW,kBAAkB,CAAC;QAC3FC,YAAY,EAAEpV,OAAO,CAACF,KAAK,CAACsV,YAAY,EAAE,IAAI,CAACzW,YAAY,CAACyW,YAAY,CAAC;QACzEC,SAAS,EAAErV,OAAO,CAACF,KAAK,CAACuV,SAAS,EAAE,IAAI,CAAC1W,YAAY,CAAC0W,SAAS,CAAC;QAChEC,UAAU,EAAEtV,OAAO,CAACF,KAAK,CAACwV,UAAU,EAAE,IAAI,CAAC3W,YAAY,CAAC2W,UAAU;MACtE,CAAC;IACL;EAAC;EAAA;AAAA,EArSuB7W,gBAAgB;AAAA,IAuStC8W,WAAW;EAAA;EAAA;EACb,uBAAc;IAAA;IAAA,2BACJ,GAAG,CAAC,gCAAgC,aAAa,EAAE;MACrDC,kCAAkC,EAAE;IACxC,CAAC,EAAE;MACC,uDAAuD,EAAE;QACrDnT,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oCAAoC,EAAE,oEAAoE,CAAC;QACrIhC,OAAO,EAAE,IAAI;QACbD,IAAI,EAAE;MACV;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASL,KAAK,EAAE;MACZ,IAAI,CAACA,KAAK,IAAI,QAAOA,KAAK,MAAK,QAAQ,EAAE;QACrC,OAAO,IAAI,CAACnB,YAAY;MAC5B;MACA,OAAO;QACH6W,kCAAkC,EAAExV,OAAO,CAACF,KAAK,CAAC0V,kCAAkC,EAAE,IAAI,CAAC7W,YAAY,CAAC6W,kCAAkC;MAC9I,CAAC;IACL;EAAC;EAAA;AAAA,EAnBqB/W,gBAAgB,GAqB1C;AACA;AAAA,IACMgX,kBAAkB;EAAA;EAAA;EACpB,8BAAc;IAAA;IAAA,2BACJ,GAAG,CAAC;EACd;EAAC;IAAA;IAAA,OACD,iBAAQzW,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,IAAMkS,QAAQ,GAAGzW,OAAO,CAACyE,GAAG,CAAC,EAAE,CAAC,4BAA4B;MAC5D,OAAQgS,QAAQ,GAAG,IAAI,GAAG1W,GAAG,CAAC2W,YAAY;IAC9C;EAAC;EAAA;AAAA,EAP4B/V,oBAAoB;AASrD,SAASgW,yBAAyB,CAACC,cAAc,EAAE;EAC/C,QAAQA,cAAc;IAClB,KAAK,MAAM;MAAE,OAAO,CAAC,CAAC;IACtB,KAAK,MAAM;MAAE,OAAO,CAAC,CAAC;IACtB,KAAK,QAAQ;MAAE,OAAO,CAAC,CAAC;IACxB,KAAK,YAAY;MAAE,OAAO,CAAC,CAAC;EAAgC;AAEpE;AAAC,IACKC,0BAA0B;EAAA;EAAA;EAC5B,sCAAc;IAAA;IAAA,2BACJ,GAAG,CAAC;EACd;EAAC;IAAA;IAAA,OACD,iBAAQ9W,GAAG,EAAEC,OAAO,EAAEuE,CAAC,EAAE;MACrB,IAAMuS,UAAU,GAAG9W,OAAO,CAACyE,GAAG,CAAC,GAAG,CAAC,8BAA8B;MACjE,OAAO;QACHiE,sBAAsB,EAAE3I,GAAG,CAAC2I,sBAAsB;QAClDkF,kBAAkB,EAAEkJ,UAAU,CAAClJ,kBAAkB;QACjDhD,kBAAkB,EAAEkM,UAAU,CAAClM,kBAAkB;QACjDiD,cAAc,EAAEiJ,UAAU,CAACjJ;MAC/B,CAAC;IACL;EAAC;EAAA;AAAA,EAZoClN,oBAAoB;AAAA,IAcvDoW,oBAAoB;EAAA;EAAA;EACtB,gCAAc;IAAA;IACV,IAAMxT,QAAQ,GAAG;MAAE0E,OAAO,EAAE;IAAK,CAAC;IAAC,2BAC7B,EAAE,CAAC,mCAAmC,gBAAgB,EAAE1E,QAAQ,EAAE;MACpE,+BAA+B,EAAE;QAC7BrC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEoC,QAAQ,CAAC0E,OAAO;QACzB8G,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,sIAAsI;MACtM;IACJ,CAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASO,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,IAAI,QAAOA,MAAM,MAAK,QAAQ,EAAE;QACvC,OAAO,IAAI,CAAChE,YAAY;MAC5B;MACA,IAAMmB,KAAK,GAAG6C,MAAM;MACpB,OAAO;QACHuE,OAAO,EAAElH,OAAO,CAACF,KAAK,CAACoH,OAAO,EAAE,IAAI,CAACvI,YAAY,CAACuI,OAAO;MAC7D,CAAC;IACL;EAAC;EAAA;AAAA,EAnB8BzI,gBAAgB,GAqBnD;AACA,IAAMwX,2BAA2B,GAAG,sCAAsC;AAC1E,IAAMC,uBAAuB,GAAG,2CAA2C;AAC3E,IAAMC,yBAAyB,GAAG,+CAA+C;AACjF;AACA;AACA;AACA,OAAO,IAAMnR,oBAAoB,GAAG;EAChC6I,UAAU,EAAGlQ,QAAQ,CAAC6G,WAAW,GAAG0R,uBAAuB,GAAIvY,QAAQ,CAACyY,OAAO,GAAGD,yBAAyB,GAAGF,2BAA6B;EAC3I7Q,UAAU,EAAE,QAAQ;EACpBH,QAAQ,EAAGtH,QAAQ,CAAC6G,WAAW,GAAG,EAAE,GAAG,EAAG;EAC1CoD,UAAU,EAAE,CAAC;EACbyO,aAAa,EAAE;AACnB,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAMC,qBAAqB,GAAG,EAAE;AACvC,SAASC,QAAQ,CAACC,MAAM,EAAE;EACtBF,qBAAqB,CAACE,MAAM,CAACpY,EAAE,CAAC,GAAGoY,MAAM;EACzC,OAAOA,MAAM;AACjB;AACA,OAAO,IAAMC,aAAa,GAAG;EACzBC,iCAAiC,EAAEH,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,CAAC,CAAC,sDAAsD,mCAAmC,EAAE,IAAI,EAAE;IAAE8N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,mCAAmC,EAAE,uMAAuM;EAAE,CAAC,CAAC,CAAC;EAC5buU,uBAAuB,EAAEJ,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,CAAC,CAAC,4CAA4C,yBAAyB,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE;IAChKsM,wBAAwB,EAAE,CACtB,EAAE,EACFrQ,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,uEAAuE,CAAC,EACrH,EAAE,CACL;IACD4L,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,kKAAkK;EACnO,CAAC,CAAC,CAAC;EACHE,oBAAoB,EAAEiU,QAAQ,CAAC,IAAIrU,0BAA0B,EAAE,CAAC;EAChE0U,qBAAqB,EAAEL,QAAQ,CAAC,IAAIzV,eAAe,CAAC,CAAC,CAAC,0CAA0C,uBAAuB,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAC/KuB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,yPAAyP;EAChT,CAAC,CAAC,CAAC;EACHyU,SAAS,EAAEN,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,CAAC,CAAC,8BAA8B,WAAW,EAAE1D,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,CAAC,CAAC;EACrJ0U,mBAAmB,EAAEP,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,CAAC,CAAC,wCAAwC,qBAAqB,EAAE,iBAAiB,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,OAAO,CAAC,EAAE;IACrMU,gBAAgB,EAAE,CACd,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,4CAA4C,EAAE,sEAAsE,CAAC,EAClI1E,GAAG,CAAC0E,QAAQ,CAAC,6CAA6C,EAAE,uEAAuE,CAAC,EACpI,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,yGAAyG;EAC9J,CAAC,CAAC,CAAC;EACH2U,iBAAiB,EAAER,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,CAAC,CAAC,sCAAsC,mBAAmB,EAAE,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;IACrJU,gBAAgB,EAAE,CACd,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,sFAAsF,CAAC,EACrI,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,8FAA8F;EACjJ,CAAC,CAAC,CAAC;EACH4U,mBAAmB,EAAET,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,CAAC,CAAC,wCAAwC,qBAAqB,EAAE,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;IAC3JU,gBAAgB,EAAE,CACd,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,gFAAgF,CAAC,EACjI,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,0EAA0E;EAC/H,CAAC,CAAC,CAAC;EACH6U,iBAAiB,EAAEV,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,CAAC,CAAC,sCAAsC,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,OAAO,CAAC,EAAE;IAC/LU,gBAAgB,EAAE,CACd,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,0CAA0C,EAAE,oEAAoE,CAAC,EAC9H1E,GAAG,CAAC0E,QAAQ,CAAC,2CAA2C,EAAE,qEAAqE,CAAC,EAChI,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,qGAAqG;EACxJ,CAAC,CAAC,CAAC;EACHH,UAAU,EAAEsU,QAAQ,CAAC,IAAI3U,gBAAgB,CAAC,CAAC,CAAC,+BAA+B,YAAY,EAAE,CAAC,CAAC,qCAAqC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,EAAEI,qBAAqB,EAAE;IAC7MG,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,uDAAuD,CAAC,EAC/F1E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,sDAAsD,CAAC,EAC9F1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,0FAA0F,CAAC,EACtI1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,4IAA4I,CAAC,EACxL1E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,0LAA0L,CAAC,CACrO;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,uHAAuH;EACnK,CAAC,CAAC,CAAC;EACH8U,eAAe,EAAEX,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,oCAAoC,iBAAiB,EAAE,KAAK,CAAC,CAAC;EACnHiX,YAAY,EAAEZ,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,iCAAiC,cAAc,EAAE,iBAAiB,EAAE,CAAC,iBAAiB,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE;IACzKU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,qCAAqC,EAAE,qFAAqF,CAAC,EAC1I1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,wCAAwC,CAAC,EACpF1E,GAAG,CAAC0E,QAAQ,CAAC,8BAA8B,EAAE,wCAAwC,CAAC,EACtF,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,sGAAsG;EACpJ,CAAC,CAAC,CAAC;EACHgV,uBAAuB,EAAEb,QAAQ,CAAC,IAAIjE,uBAAuB,EAAE,CAAC;EAChE+E,iBAAiB,EAAEd,QAAQ,CAAC,IAAI9D,YAAY,EAAE,CAAC;EAC/C6E,cAAc,EAAEf,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,mCAAmC,gBAAgB,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,oHAAoH;EAAE,CAAC,CAAC,CAAC;EACxRmV,QAAQ,EAAEhB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,6BAA6B,UAAU,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,UAAU,EAAE,6CAA6C;EAAE,CAAC,CAAC,CAAC;EACvLoV,kBAAkB,EAAEjB,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,EAAE,CAAC,uCAAuC,oBAAoB,EAAE,EAAE,EAAE;IAAEiB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,wCAAwC;EAAE,CAAC,CAAC,CAAC;EACvNqV,gBAAgB,EAAElB,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,qCAAqC,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;IAClHX,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,CAAC;IACVE,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,GAAG;IACZyN,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,qGAAqG;EAC/J,CAAC,CAAC,CAAC;EACHsV,eAAe,EAAEnB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,oCAAoC,iBAAiB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,yFAAyF;EAAE,CAAC,CAAC,CAAC;EAC/PuV,eAAe,EAAEpB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,oCAAoC,iBAAiB,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,8EAA8E;EAAE,CAAC,CAAC,CAAC;EACrP0M,QAAQ,EAAEyH,QAAQ,CAAC,IAAIhU,cAAc,EAAE,CAAC;EACxCqV,WAAW,EAAErB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAE,IAAI,CAAC,CAAC;EACtG2X,0BAA0B,EAAEtB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,+CAA+C,4BAA4B,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,2EAA2E;EAAE,CAAC,CAAC,CAAC;EAC7R0V,cAAc,EAAEvB,QAAQ,CAAC,IAAI3U,gBAAgB,CAAC,EAAE,CAAC,mCAAmC,gBAAgB,EAAE,CAAC,CAAC,2CAA2C,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAEgB,8BAA8B,EAAE;IAAEP,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,qCAAqC;EAAE,CAAC,CAAC,CAAC;EACrU2V,0BAA0B,EAAExB,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,+CAA+C,4BAA4B,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,gEAAgE;EAAE,CAAC,CAAC,CAAC;EACnRY,WAAW,EAAEuT,QAAQ,CAAC,IAAI3U,gBAAgB,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAEkB,qBAAqB,CAACG,IAAI,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,eAAe,EAAE,gBAAgB,CAAC,EAAEF,sBAAsB,EAAE;IAAEV,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,4BAA4B;EAAE,CAAC,CAAC,CAAC;EACrT4V,sBAAsB,EAAEzB,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,2CAA2C,wBAAwB,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAAEuB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,yJAAyJ;EAAE,CAAC,CAAC,CAAC;EAC1Y6V,2BAA2B,EAAE1B,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,gDAAgD,6BAA6B,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;IAC9KU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,qCAAqC,EAAE,mFAAmF,CAAC,EACxI1E,GAAG,CAAC0E,QAAQ,CAAC,iCAAiC,EAAE,8CAA8C,CAAC,CAClG;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,4DAA4D;EACzH,CAAC,CAAC,CAAC;EACH8V,WAAW,EAAE3B,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAAEkN,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,gFAAgF;EAAE,CAAC,CAAC,CAAC;EAC7R+V,mBAAmB,EAAE5B,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,wCAAwC,qBAAqB,EAAE,KAAK,CAAC,CAAC;EAC/HkY,6BAA6B,EAAE7B,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,kDAAkD,+BAA+B,EAAE,KAAK,CAAC,CAAC;EAC7JmY,WAAW,EAAE9B,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAE,KAAK,CAAC,CAAC;EACvGoY,WAAW,EAAE/B,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,+EAA+E;EAAE,CAAC,CAAC,CAAC;EACrO2B,uBAAuB,EAAEwS,QAAQ,CAAC,IAAIzS,6BAA6B,EAAE,CAAC;EACtEyU,cAAc,EAAEhC,QAAQ,CAAC,IAAIP,oBAAoB,EAAE,CAAC;EACpDwC,YAAY,EAAEjC,QAAQ,CAAC,IAAI7I,kBAAkB,EAAE,CAAC;EAChD9J,oBAAoB,EAAE2S,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,EAAE,CAAC,yCAAyC,sBAAsB,EAAE,EAAE,CAAC,CAAC;EAC9HqX,qBAAqB,EAAElC,QAAQ,CAAC,IAAIxV,iBAAiB,CAAC,EAAE,CAAC,0CAA0C,uBAAuB,EAAE,CAAC,EAAE,UAAAmN,CAAC;IAAA,OAAKA,CAAC,IAAI,CAAC,GAAG,CAAC,GAAGA,CAAC;EAAA,CAAC,EAAE;IAAEF,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,iDAAiD;EAAE,CAAC,CAAC,CAAC;EACzQsW,IAAI,EAAEnC,QAAQ,CAAC,IAAIvS,UAAU,EAAE,CAAC;EAChC2U,oBAAoB,EAAEpC,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,yCAAyC,sBAAsB,EAAE,KAAK,CAAC,CAAC;EAClI8L,OAAO,EAAEuK,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,4BAA4B,SAAS,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,SAAS,EAAE,uDAAuD;EAAE,CAAC,CAAC,CAAC;EAC7LwW,eAAe,EAAErC,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,oCAAoC,iBAAiB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE;IAC5IU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,wFAAwF,CAAC,EAC9H1E,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,6CAA6C,CAAC,CAC7F;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,qDAAqD;EACtG,CAAC,CAAC,CAAC;EACHyW,gBAAgB,EAAEtC,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,qCAAqC,kBAAkB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,6DAA6D;EAAE,CAAC,CAAC,CAAC;EACvO0W,uBAAuB,EAAEvC,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,4CAA4C,yBAAyB,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,oEAAoE;EAAE,CAAC,CAAC,CAAC;EAC3Q2W,qBAAqB,EAAExC,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,0CAA0C,uBAAuB,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK;EAAE;EAC3I;IAAEuB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,iLAAiL;EAAE,CAAC,CAAC,CAAC;EAC3O4W,2BAA2B,EAAEzC,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gDAAgD,6BAA6B,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,0FAA0F;EAAE,CAAC,CAAC,CAAC;EACjTyL,UAAU,EAAE0I,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,EAAE,CAAC,+BAA+B,YAAY,EAAE4D,oBAAoB,CAAC6I,UAAU,EAAE;IAAExL,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,2BAA2B;EAAE,CAAC,CAAC,CAAC;EACvM0C,QAAQ,EAAEyR,QAAQ,CAAC,IAAI1R,cAAc,EAAE,CAAC;EACxCoU,cAAc,EAAE1C,QAAQ,CAAC,IAAI9R,mBAAmB,EAAE,CAAC;EACnDQ,QAAQ,EAAEsR,QAAQ,CAAC,IAAIxR,cAAc,EAAE,CAAC;EACxCK,UAAU,EAAEmR,QAAQ,CAAC,IAAIpR,gBAAgB,EAAE,CAAC;EAC5C+T,aAAa,EAAE3C,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,kCAAkC,eAAe,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,6KAA6K;EAAE,CAAC,CAAC,CAAC;EAC5U+W,YAAY,EAAE5C,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,iCAAiC,cAAc,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,gFAAgF;EAAE,CAAC,CAAC,CAAC;EAC3OgX,WAAW,EAAE7C,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gCAAgC,aAAa,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,iHAAiH;EAAE,CAAC,CAAC,CAAC;EACvQiX,YAAY,EAAE9C,QAAQ,CAAC,IAAI5Q,kBAAkB,EAAE,CAAC;EAChD2T,yBAAyB,EAAE/C,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,8CAA8C,2BAA2B,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,qEAAqE;EAAE,CAAC,CAAC,CAAC;EACpRmX,KAAK,EAAEhD,QAAQ,CAAC,IAAItP,WAAW,EAAE,CAAC;EAClCuS,YAAY,EAAEjD,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,iCAAiC,cAAc,EAAE,KAAK,CAAC,CAAC;EAC1GmW,aAAa,EAAEE,QAAQ,CAAC,IAAIxV,iBAAiB,CAAC,EAAE,CAAC,kCAAkC,eAAe,EAAEiE,oBAAoB,CAACqR,aAAa,EAAE,UAAAnI,CAAC;IAAA,OAAInN,iBAAiB,CAACmE,KAAK,CAACgJ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAA,GAAE;IAAE7L,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,wCAAwC;EAAE,CAAC,CAAC,CAAC;EAC3QqX,SAAS,EAAElD,QAAQ,CAAC,IAAI9I,eAAe,EAAE,CAAC;EAC1CvB,oBAAoB,EAAEqK,QAAQ,CAAC,IAAIxW,kBAAkB,CAAC,EAAE,CAAC,yCAAyC,sBAAsB,EAAE,EAAE,CAAC,CAAC;EAC9H6H,UAAU,EAAE2O,QAAQ,CAAC,IAAItI,gBAAgB,EAAE,CAAC;EAC5CuB,WAAW,EAAE+G,QAAQ,CAAC,IAAIjH,6BAA6B,EAAE,CAAC;EAC1DhE,mBAAmB,EAAEiL,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,wCAAwC,qBAAqB,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;EAC/H4Y,aAAa,EAAEnD,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,kCAAkC,eAAe,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,gJAAgJ;EAAE,CAAC,CAAC,CAAC;EAC/SuX,KAAK,EAAEpD,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,0BAA0B,OAAO,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,OAAO,EAAE,0EAA0E;EAAE,CAAC,CAAC,CAAC;EACxMwX,aAAa,EAAErD,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,kCAAkC,eAAe,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;IAAEY,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,8BAA8B;EAAE,CAAC,CAAC,CAAC;EAChOqG,OAAO,EAAE8N,QAAQ,CAAC,IAAIpI,aAAa,EAAE,CAAC;EACtC0L,UAAU,EAAEtD,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,+BAA+B,YAAY,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;EACrIqY,2BAA2B,EAAEvD,QAAQ,CAAC,IAAIxV,iBAAiB,CAAC,EAAE,CAAC,gDAAgD,6BAA6B,EAAE,CAAC,EAAE,UAAAmN,CAAC;IAAA,OAAKA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;EAAA,CAAC,EAAE;IAAEF,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,oFAAoF;EAAE,CAAC,CAAC,CAAC;EACrU2X,cAAc,EAAExD,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,mCAAmC,gBAAgB,EAAE,KAAK,EAAE;IAAE8N,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,wEAAwE;EAAE,CAAC,CAAC,CAAC;EACnP4X,2BAA2B,EAAEzD,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,gDAAgD,6BAA6B,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,mDAAmD;EAAE,CAAC,CAAC,CAAC;EACzQkM,mBAAmB,EAAEiI,QAAQ,CAAC,IAAI3U,gBAAgB,CAAC,EAAE,CAAC,wCAAwC,qBAAqB,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAEyM,8BAA8B,EAAE;IACtLN,wBAAwB,EAAE,CACtBrQ,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,mEAAmE,CAAC,EAChH1E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,8DAA8D,CAAC,CAC1G;IACD4L,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC;MAC9B3C,GAAG,EAAE,qBAAqB;MAC1Bwa,OAAO,EAAE,CACL,iFAAiF,EACjF,wGAAwG;IAEhH,CAAC,EAAE,0QAA0Q;EACjR,CAAC,CAAC,CAAC;EACHC,gBAAgB,EAAE3D,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,qCAAqC,kBAAkB,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE;IAC5IsM,wBAAwB,EAAE,CACtBrQ,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,+CAA+C,CAAC,EACxF1E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,mCAAmC,CAAC,CAC7E;IACD4L,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,mFAAmF;EAC7I,CAAC,CAAC,CAAC;EACH+X,oBAAoB,EAAE5D,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,yCAAyC,sBAAsB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,2EAA2E;EAAE,CAAC,CAAC,CAAC;EACrQgY,mBAAmB,EAAE7D,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,wCAAwC,qBAAqB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,sEAAsE;EAAE,CAAC,CAAC,CAAC;EAC5PiY,kBAAkB,EAAE9D,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,uCAAuC,oBAAoB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1HgN,OAAO,EAAEyI,QAAQ,CAAC,IAAIhI,aAAa,EAAE,CAAC;EACtC+L,cAAc,EAAE/D,QAAQ,CAAC,IAAI9H,oBAAoB,EAAE,CAAC;EACpD8L,sBAAsB,EAAEhE,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,2CAA2C,wBAAwB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;IAC5JU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,kCAAkC,CAAC,EAC/E1E,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,oCAAoC,CAAC,CACtF;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,6EAA6E;EACrI,CAAC,CAAC,CAAC;EACHoY,yBAAyB,EAAEjE,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,8CAA8C,2BAA2B,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,mFAAmF;EAAE,CAAC,CAAC,CAAC;EAClSqY,gBAAgB,EAAElE,QAAQ,CAAC,IAAI3H,sBAAsB,EAAE,CAAC;EACxD8L,qBAAqB,EAAEnE,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,0CAA0C,uBAAuB,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAAEuB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,gFAAgF;EAAE,CAAC,CAAC,CAAC;EAC9TsT,QAAQ,EAAEa,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,6BAA6B,UAAU,EAAE,KAAK,CAAC,CAAC;EAC9Fya,YAAY,EAAEpE,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,iCAAiC,cAAc,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,mDAAmD,CAAC;IAAEwY,0BAA0B,EAAEld,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,iDAAiD;EAAE,CAAC,CAAC,CAAC;EACpUyY,uBAAuB,EAAEtE,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,4CAA4C,yBAAyB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,+DAA+D,CAAC;IAAE2P,UAAU,EAAE;EAAK,CAAC,CAAC,CAAC;EACvR+I,kBAAkB,EAAEvE,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,uCAAuC,oBAAoB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,4DAA4D;EAAE,CAAC,CAAC,CAAC;EAC9O2Y,mBAAmB,EAAExE,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,wCAAwC,qBAAqB,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE;IAClKU,gBAAgB,EAAE,CACd,EAAE,EACF,EAAE,EACF,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,kDAAkD,CAAC,CAC9F;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,mEAAmE;EACxH,CAAC,CAAC,CAAC;EACH4Y,gCAAgC,EAAEzE,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,qDAAqD,kCAAkC,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kCAAkC,EAAE,kGAAkG;EAAE,CAAC,CAAC,CAAC;EAC7UsN,2BAA2B,EAAE6G,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,gDAAgD,6BAA6B,EAAE,UAAU,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;EAC1LwZ,gBAAgB,EAAE1E,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,EAAE,CAAC,qCAAqC,kBAAkB,EAAE,WAAW,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC,EAAE;IACjLU,gBAAgB,EAAE,CACd,EAAE,EACFzE,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,sEAAsE,CAAC,EACjH1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,qDAAqD,CAAC,EACjG1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,6CAA6C,CAAC,EACxF,EAAE,CACL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,8DAA8D;EAChH,CAAC,CAAC,CAAC;EACH8Y,4BAA4B,EAAE3E,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,iDAAiD,8BAA8B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;EAC5Jqa,gBAAgB,EAAE5E,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,qCAAqC,kBAAkB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,0DAA0D;EAAE,CAAC,CAAC,CAAC;EACpO6N,MAAM,EAAEsG,QAAQ,CAAC,IAAI5G,YAAY,EAAE,CAAC;EACpCpE,SAAS,EAAEgL,QAAQ,CAAC,IAAI9F,eAAe,EAAE,CAAC;EAC1C2K,sBAAsB,EAAE7E,QAAQ,CAAC,IAAIzV,eAAe,CAAC,EAAE,CAAC,2CAA2C,wBAAwB,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAAEuB,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,2FAA2F;EAAE,CAAC,CAAC,CAAC;EAC5UiG,oBAAoB,EAAEkO,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,yCAAyC,sBAAsB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,sBAAsB,EAAE,+DAA+D;EAAE,CAAC,CAAC,CAAC;EACzPiZ,qBAAqB,EAAE9E,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,0CAA0C,uBAAuB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,6KAA6K;EAAE,CAAC,CAAC,CAAC;EAC3WkZ,kBAAkB,EAAE/E,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,uCAAuC,oBAAoB,EAAE,IAAI,EAAE;IACvHmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,mEAAmE,CAAC;IACpHmC,QAAQ,EAAE5G,QAAQ,CAACyY;EACvB,CAAC,CAAC,CAAC;EACHmF,kBAAkB,EAAEhF,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,EAAE,CAAC,uCAAuC,oBAAoB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,gFAAgF;EAAE,CAAC,CAAC,CAAC;EAClQoZ,mBAAmB,EAAEjF,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,wCAAwC,qBAAqB,EAAE,IAAI,CAAC,CAAC;EAC/Hub,mBAAmB,EAAElF,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,wCAAwC,qBAAqB,EAAE,WAAW,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,WAAW,CAAC,EAAE;IACvKU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,mCAAmC,CAAC,EAC/E1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,6DAA6D,CAAC,EACxG1E,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,mEAAmE,CAAC,CACrH;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,6DAA6D;EAClH,CAAC,CAAC,CAAC;EACHsZ,UAAU,EAAEnF,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,+BAA+B,YAAY,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,YAAY,EAAE,qCAAqC;EAAE,CAAC,CAAC,CAAC;EACxL0R,cAAc,EAAEyC,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,mCAAmC,gBAAgB,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,8CAA8C;EAAE,CAAC,CAAC,CAAC;EACjNuZ,UAAU,EAAEpF,QAAQ,CAAC,IAAI3I,gBAAgB,EAAE,CAAC;EAC5CgO,kBAAkB,EAAErF,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,uCAAuC,oBAAoB,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE;IACpKU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,uDAAuD,CAAC,EAC/F1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,mDAAmD,CAAC,EAC9F1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,mDAAmD,CAAC,EAC9F1E,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,kCAAkC,CAAC,CAC9E;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,oBAAoB,EAAE,qFAAqF;EACzI,CAAC,CAAC,CAAC;EACHyZ,WAAW,EAAEtF,QAAQ,CAAC,IAAIhB,WAAW,EAAE,CAAC;EACxCuG,eAAe,EAAEvF,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,oCAAoC,iBAAiB,EAAE,KAAK,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,6DAA6D;EAAE,CAAC,CAAC,CAAC;EACrO2Z,sBAAsB,EAAExF,QAAQ,CAAC,IAAIzV,eAAe,CAAC,GAAG,CAAC,2CAA2C,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,uCAAuC,CAAC;EAC5Lkb,OAAO,EAAEzF,QAAQ,CAAC,IAAIvD,aAAa,EAAE,CAAC;EACtCiJ,aAAa,EAAE1F,QAAQ,CAAC,IAAInE,mBAAmB,EAAE,CAAC;EAClD8J,eAAe,EAAE3F,QAAQ,CAAC,IAAIzV,eAAe,CAAC,GAAG,CAAC,oCAAoC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IAAEkN,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,iBAAiB,EAAE,8EAA8E,EAAE,KAAK,EAAE,qBAAqB;EAAE,CAAC,CAAC,CAAC;EAC7R+Z,iBAAiB,EAAE5F,QAAQ,CAAC,IAAIzV,eAAe,CAAC,GAAG,CAAC,sCAAsC,mBAAmB,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IAAEkN,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,wGAAwG,EAAE,KAAK,EAAE,uBAAuB;EAAE,CAAC,CAAC,CAAC;EACjUga,0BAA0B,EAAE7F,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,+CAA+C,4BAA4B,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,2FAA2F;EAAE,CAAC,CAAC,CAAC;EAC9Sia,gBAAgB,EAAE9F,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,qCAAqC,kBAAkB,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,sBAAsB,CAAC,EAAE;IAC3KsM,wBAAwB,EAAE,CACtBrQ,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,qCAAqC,CAAC,EAC7E1E,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,yIAAyI,CAAC,EACxL1E,GAAG,CAAC0E,QAAQ,CAAC,uCAAuC,EAAE,+HAA+H,CAAC,CACzL;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,0EAA0E;EAC5H,CAAC,CAAC,CAAC;EACHka,aAAa,EAAE/F,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,kCAAkC,eAAe,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC,EAAE;IAC5IU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,0EAA0E,CAAC,EAC5G1E,GAAG,CAAC0E,QAAQ,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,EAC7D1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,mGAAmG,CAAC,CAClJ;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,eAAe,EAAE,0BAA0B;EACzE,CAAC,CAAC,CAAC;EACHma,QAAQ,EAAEhG,QAAQ,CAAC,IAAIzV,eAAe,CAAC,GAAG,CAAC,6BAA6B,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,uCAAuC,CAAC;EAC9I0b,gBAAgB,EAAEjG,QAAQ,CAAC,IAAI3E,gBAAgB,EAAE,CAAC;EAClD6K,sBAAsB,EAAElG,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,2CAA2C,wBAAwB,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,EAAE;IACtKU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,6BAA6B,EAAE,qDAAqD,CAAC,EAClG1E,GAAG,CAAC0E,QAAQ,CAAC,4BAA4B,EAAE,uCAAuC,CAAC,EACnF1E,GAAG,CAAC0E,QAAQ,CAAC,+BAA+B,EAAE,gDAAgD,CAAC,CAClG;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,wBAAwB,EAAE,4DAA4D;EACpH,CAAC,CAAC,CAAC;EACHsa,YAAY,EAAEnG,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,iCAAiC,cAAc,EAAE,IAAI,CAAC,CAAC;EAC1Gyc,WAAW,EAAEpG,QAAQ,CAAC,IAAIrW,mBAAmB,CAAC,GAAG,CAAC,gCAAgC,aAAa,EAAE,IAAI,EAAE;IAAEmC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,sDAAsD;EAAE,CAAC,CAAC,CAAC;EAC7Mwa,cAAc,EAAErG,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,GAAG,CAAC,mCAAmC,gBAAgB,EAAExD,qBAAqB,EAAE;IAAEyE,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,oGAAoG;EAAE,CAAC,CAAC,CAAC;EACvR6I,QAAQ,EAAEsL,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,6BAA6B,UAAU,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,CAAC,EAAE;IAC1IsM,wBAAwB,EAAE,CACtBrQ,GAAG,CAAC0E,QAAQ,CAAC,cAAc,EAAE,wBAAwB,CAAC,EACtD1E,GAAG,CAAC0E,QAAQ,CAAC,aAAa,EAAE,wCAAwC,CAAC,EACrE1E,GAAG,CAAC0E,QAAQ,CAAC;MACT3C,GAAG,EAAE,yBAAyB;MAC9Bwa,OAAO,EAAE,CACL,sFAAsF;IAE9F,CAAC,EAAE,+CAA+C,CAAC,EACnDvc,GAAG,CAAC0E,QAAQ,CAAC;MACT3C,GAAG,EAAE,kBAAkB;MACvBwa,OAAO,EAAE,CACL,uDAAuD,EACvD,sFAAsF;IAE9F,CAAC,EAAE,2EAA2E,CAAC,CAClF;IACD5X,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC;MACtB3C,GAAG,EAAE,UAAU;MACfwa,OAAO,EAAE,CACL,yHAAyH,EACzH,sFAAsF;IAE9F,CAAC,EAAE,iCAAiC;EACxC,CAAC,CAAC,CAAC;EACH4C,4BAA4B,EAAEtG,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,GAAG,CAAC,iDAAiD,8BAA8B;EACjJ;EACA,uGAAuG,CAAC,CAAC;EACzG0b,6BAA6B,EAAEvG,QAAQ,CAAC,IAAInV,kBAAkB,CAAC,GAAG,CAAC,kDAAkD,+BAA+B;EACpJ;EACA,wBAAwB,CAAC,CAAC;EAC1B8J,cAAc,EAAEqL,QAAQ,CAAC,IAAIzV,eAAe,CAAC,GAAG,CAAC,mCAAmC,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,wCAAwC;IAC5JkN,mBAAmB,EAAEtQ,GAAG,CAAC0E,QAAQ,CAAC;MAC9B3C,GAAG,EAAE,gBAAgB;MACrBwa,OAAO,EAAE,CACL,gFAAgF,EAChF,kHAAkH;IAE1H,CAAC,EAAE,uGAAuG;EAC9G,CAAC,CAAC,CAAC;EACHjP,iBAAiB,EAAEuL,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,sCAAsC,mBAAmB,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;EAC3JsJ,iBAAiB,EAAEwL,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,sCAAsC,mBAAmB,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;EAC3JoU,cAAc,EAAEU,QAAQ,CAAC,IAAI3U,gBAAgB,CAAC,GAAG,CAAC,mCAAmC,gBAAgB,EAAE,CAAC,CAAC,2BAA2B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC,EAAEgU,yBAAyB,EAAE;IAC7MzT,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,kDAAkD,CAAC,EACvF1E,GAAG,CAAC0E,QAAQ,CAAC,qBAAqB,EAAE,uDAAuD,CAAC,EAC5F1E,GAAG,CAAC0E,QAAQ,CAAC,uBAAuB,EAAE,qDAAqD,CAAC,EAC5F1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,qDAAqD,CAAC,CACnG;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,gBAAgB,EAAE,4CAA4C;EAC5F,CAAC,CAAC,CAAC;EACH2a,gBAAgB,EAAExG,QAAQ,CAAC,IAAI9U,sBAAsB,CAAC,GAAG,CAAC,qCAAqC,kBAAkB,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE;IACjJU,gBAAgB,EAAE,CACdzE,GAAG,CAAC0E,QAAQ,CAAC,yBAAyB,EAAE,mMAAmM,CAAC,EAC5O1E,GAAG,CAAC0E,QAAQ,CAAC,2BAA2B,EAAE,gKAAgK,CAAC,CAC9M;IACDC,WAAW,EAAE3E,GAAG,CAAC0E,QAAQ,CAAC,kBAAkB,EAAE,uDAAuD;EACzG,CAAC,CAAC,CAAC;EACH;EACA4a,eAAe,EAAEzG,QAAQ,CAAC,IAAIhT,eAAe,EAAE,CAAC;EAChD0E,UAAU,EAAEsO,QAAQ,CAAC,IAAI5H,gBAAgB,EAAE,CAAC;EAC5CgH,YAAY,EAAEY,QAAQ,CAAC,IAAId,kBAAkB,EAAE,CAAC;EAChDM,UAAU,EAAEQ,QAAQ,CAAC,IAAIjP,wBAAwB,EAAE,CAAC;EACpD2V,YAAY,EAAE1G,QAAQ,CAAC,IAAIT,0BAA0B,EAAE;AAC3D,CAAC"}]}