{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensEditing.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensEditing.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["LineTokens","EMPTY_LINE_TOKENS","Uint32Array","buffer","ContiguousTokensEditing","lineTokens","toChIndex","delete","fromChIndex","tokens","toUint32Array","lineTextLength","length","tokensCount","fromTokenIndex","findIndexInTokensArray","fromTokenStartOffset","fromTokenEndOffset","delta","i","dest","lastEnd","tokenIndex","tokenEndOffset","tmp","set","subarray","_otherTokens","myTokens","otherTokens","otherTokensCount","result","chIndex","textLength","arr"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensEditing.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineTokens } from './lineTokens.js';\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\nexport class ContiguousTokensEditing {\n    static deleteBeginning(lineTokens, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        return ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n    }\n    static deleteEnding(lineTokens, fromChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const lineTextLength = tokens[tokens.length - 2];\n        return ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n    }\n    static delete(lineTokens, fromChIndex, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        // special case: deleting everything\n        if (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n            return EMPTY_LINE_TOKENS;\n        }\n        const fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n        const fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n        const fromTokenEndOffset = tokens[fromTokenIndex << 1];\n        if (toChIndex < fromTokenEndOffset) {\n            // the delete range is inside a single token\n            const delta = (toChIndex - fromChIndex);\n            for (let i = fromTokenIndex; i < tokensCount; i++) {\n                tokens[i << 1] -= delta;\n            }\n            return lineTokens;\n        }\n        let dest;\n        let lastEnd;\n        if (fromTokenStartOffset !== fromChIndex) {\n            tokens[fromTokenIndex << 1] = fromChIndex;\n            dest = ((fromTokenIndex + 1) << 1);\n            lastEnd = fromChIndex;\n        }\n        else {\n            dest = (fromTokenIndex << 1);\n            lastEnd = fromTokenStartOffset;\n        }\n        const delta = (toChIndex - fromChIndex);\n        for (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n            const tokenEndOffset = tokens[tokenIndex << 1] - delta;\n            if (tokenEndOffset > lastEnd) {\n                tokens[dest++] = tokenEndOffset;\n                tokens[dest++] = tokens[(tokenIndex << 1) + 1];\n                lastEnd = tokenEndOffset;\n            }\n        }\n        if (dest === tokens.length) {\n            // nothing to trim\n            return lineTokens;\n        }\n        const tmp = new Uint32Array(dest);\n        tmp.set(tokens.subarray(0, dest), 0);\n        return tmp.buffer;\n    }\n    static append(lineTokens, _otherTokens) {\n        if (_otherTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        if (lineTokens === EMPTY_LINE_TOKENS) {\n            return _otherTokens;\n        }\n        if (lineTokens === null) {\n            return lineTokens;\n        }\n        if (_otherTokens === null) {\n            // cannot determine combined line length...\n            return null;\n        }\n        const myTokens = toUint32Array(lineTokens);\n        const otherTokens = toUint32Array(_otherTokens);\n        const otherTokensCount = (otherTokens.length >>> 1);\n        const result = new Uint32Array(myTokens.length + otherTokens.length);\n        result.set(myTokens, 0);\n        let dest = myTokens.length;\n        const delta = myTokens[myTokens.length - 2];\n        for (let i = 0; i < otherTokensCount; i++) {\n            result[dest++] = otherTokens[(i << 1)] + delta;\n            result[dest++] = otherTokens[(i << 1) + 1];\n        }\n        return result.buffer;\n    }\n    static insert(lineTokens, chIndex, textLength) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            // nothing to do\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        let fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n        if (fromTokenIndex > 0) {\n            const fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n            if (fromTokenStartOffset === chIndex) {\n                fromTokenIndex--;\n            }\n        }\n        for (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n            tokens[tokenIndex << 1] += textLength;\n        }\n        return lineTokens;\n    }\n}\nexport function toUint32Array(arr) {\n    if (arr instanceof Uint32Array) {\n        return arr;\n    }\n    else {\n        return new Uint32Array(arr);\n    }\n}\n"],"mappings":"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"}]}