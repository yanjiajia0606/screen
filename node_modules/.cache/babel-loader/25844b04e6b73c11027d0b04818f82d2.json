{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy95YW5qaWFqaWEvRGVza3RvcC93b3Jrc3BhY2UvYXZ1ZS1kYXRhLW5ldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9Vc2Vycy95YW5qaWFqaWEvRGVza3RvcC93b3Jrc3BhY2UvYXZ1ZS1kYXRhLW5ldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9nZXQgZnJvbSAiL1VzZXJzL3lhbmppYWppYS9EZXNrdG9wL3dvcmtzcGFjZS9hdnVlLWRhdGEtbmV3L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQuanMiOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIi9Vc2Vycy95YW5qaWFqaWEvRGVza3RvcC93b3Jrc3BhY2UvYXZ1ZS1kYXRhLW5ldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YuanMiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiL1VzZXJzL3lhbmppYWppYS9EZXNrdG9wL3dvcmtzcGFjZS9hdnVlLWRhdGEtbmV3L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuYW5jaG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7Ci8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uCiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwp2YXIgX19hd2FpdGVyID0gdGhpcyAmJiB0aGlzLl9fYXdhaXRlciB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7CiAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsKICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIHJlc29sdmUodmFsdWUpOwogICAgfSk7CiAgfQogIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7CiAgICAgIHRyeSB7CiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgcmVqZWN0KGUpOwogICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgewogICAgICB0cnkgewogICAgICAgIHN0ZXAoZ2VuZXJhdG9yWyJ0aHJvdyJdKHZhbHVlKSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICByZWplY3QoZSk7CiAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7CiAgICAgIHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOwogICAgfQogICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpOwogIH0pOwp9OwppbXBvcnQgeyAkLCBhcHBlbmQsIGNsZWFyTm9kZSwgY3JlYXRlU3R5bGVTaGVldCwgaCwgaGFzUGFyZW50V2l0aENsYXNzIH0gZnJvbSAnLi4vLi4vZG9tLmpzJzsKaW1wb3J0IHsgRG9tRW1pdHRlciB9IGZyb20gJy4uLy4uL2V2ZW50LmpzJzsKaW1wb3J0IHsgU3RhbmRhcmRLZXlib2FyZEV2ZW50IH0gZnJvbSAnLi4vLi4va2V5Ym9hcmRFdmVudC5qcyc7CmltcG9ydCB7IEFjdGlvbkJhciB9IGZyb20gJy4uL2FjdGlvbmJhci9hY3Rpb25iYXIuanMnOwppbXBvcnQgeyBGaW5kSW5wdXQgfSBmcm9tICcuLi9maW5kaW5wdXQvZmluZElucHV0LmpzJzsKaW1wb3J0IHsgRWxlbWVudHNEcmFnQW5kRHJvcERhdGEgfSBmcm9tICcuLi9saXN0L2xpc3RWaWV3LmpzJzsKaW1wb3J0IHsgaXNCdXR0b24sIGlzSW5wdXRFbGVtZW50LCBpc01vbmFjb0VkaXRvciwgTGlzdCwgTW91c2VDb250cm9sbGVyIH0gZnJvbSAnLi4vbGlzdC9saXN0V2lkZ2V0LmpzJzsKaW1wb3J0IHsgVG9nZ2xlIH0gZnJvbSAnLi4vdG9nZ2xlL3RvZ2dsZS5qcyc7CmltcG9ydCB7IGdldFZpc2libGVTdGF0ZSwgaXNGaWx0ZXJSZXN1bHQgfSBmcm9tICcuL2luZGV4VHJlZU1vZGVsLmpzJzsKaW1wb3J0IHsgVHJlZU1vdXNlRXZlbnRUYXJnZXQgfSBmcm9tICcuL3RyZWUuanMnOwppbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuLi8uLi8uLi9jb21tb24vYWN0aW9ucy5qcyc7CmltcG9ydCB7IGRpc3RpbmN0LCBlcXVhbHMsIHJhbmdlIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2FycmF5cy5qcyc7CmltcG9ydCB7IGRpc3Bvc2FibGVUaW1lb3V0LCB0aW1lb3V0IH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2FzeW5jLmpzJzsKaW1wb3J0IHsgQ29kaWNvbiB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9jb2RpY29ucy5qcyc7CmltcG9ydCB7IFNldE1hcCB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9jb2xsZWN0aW9ucy5qcyc7CmltcG9ydCB7IEVtaXR0ZXIsIEV2ZW50LCBFdmVudEJ1ZmZlcmVyLCBSZWxheSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9ldmVudC5qcyc7CmltcG9ydCB7IGZ1enp5U2NvcmUsIEZ1enp5U2NvcmUgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vZmlsdGVycy5qcyc7CmltcG9ydCB7IERpc3Bvc2FibGUsIERpc3Bvc2FibGVTdG9yZSwgZGlzcG9zZSBhcyBfZGlzcG9zZSwgdG9EaXNwb3NhYmxlIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2xpZmVjeWNsZS5qcyc7CmltcG9ydCB7IGNsYW1wIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL251bWJlcnMuanMnOwppbXBvcnQgeyBpc051bWJlciB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi90eXBlcy5qcyc7CmltcG9ydCAnLi9tZWRpYS90cmVlLmNzcyc7CmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnLi4vLi4vLi4vLi4vbmxzLmpzJzsKdmFyIFRyZWVFbGVtZW50c0RyYWdBbmREcm9wRGF0YSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0VsZW1lbnRzRHJhZ0FuZERyb3BEKSB7CiAgX2luaGVyaXRzKFRyZWVFbGVtZW50c0RyYWdBbmREcm9wRGF0YSwgX0VsZW1lbnRzRHJhZ0FuZERyb3BEKTsKICB2YXIgX3N1cGVyMiA9IF9jcmVhdGVTdXBlcihUcmVlRWxlbWVudHNEcmFnQW5kRHJvcERhdGEpOwogIGZ1bmN0aW9uIFRyZWVFbGVtZW50c0RyYWdBbmREcm9wRGF0YShkYXRhKSB7CiAgICB2YXIgX3RoaXM7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJlZUVsZW1lbnRzRHJhZ0FuZERyb3BEYXRhKTsKICAgIF90aGlzID0gX3N1cGVyMi5jYWxsKHRoaXMsIGRhdGEuZWxlbWVudHMubWFwKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHJldHVybiBub2RlLmVsZW1lbnQ7CiAgICB9KSk7CiAgICBfdGhpcy5kYXRhID0gZGF0YTsKICAgIHJldHVybiBfdGhpczsKICB9CiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhUcmVlRWxlbWVudHNEcmFnQW5kRHJvcERhdGEpOwp9KEVsZW1lbnRzRHJhZ0FuZERyb3BEYXRhKTsKZnVuY3Rpb24gYXNUcmVlRHJhZ0FuZERyb3BEYXRhKGRhdGEpIHsKICBpZiAoZGF0YSBpbnN0YW5jZW9mIEVsZW1lbnRzRHJhZ0FuZERyb3BEYXRhKSB7CiAgICByZXR1cm4gbmV3IFRyZWVFbGVtZW50c0RyYWdBbmREcm9wRGF0YShkYXRhKTsKICB9CiAgcmV0dXJuIGRhdGE7Cn0KdmFyIFRyZWVOb2RlTGlzdERyYWdBbmREcm9wID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBUcmVlTm9kZUxpc3REcmFnQW5kRHJvcChtb2RlbFByb3ZpZGVyLCBkbmQpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUcmVlTm9kZUxpc3REcmFnQW5kRHJvcCk7CiAgICB0aGlzLm1vZGVsUHJvdmlkZXIgPSBtb2RlbFByb3ZpZGVyOwogICAgdGhpcy5kbmQgPSBkbmQ7CiAgICB0aGlzLmF1dG9FeHBhbmREaXNwb3NhYmxlID0gRGlzcG9zYWJsZS5Ob25lOwogIH0KICBfY3JlYXRlQ2xhc3MoVHJlZU5vZGVMaXN0RHJhZ0FuZERyb3AsIFt7CiAgICBrZXk6ICJnZXREcmFnVVJJIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREcmFnVVJJKG5vZGUpIHsKICAgICAgcmV0dXJuIHRoaXMuZG5kLmdldERyYWdVUkkobm9kZS5lbGVtZW50KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXREcmFnTGFiZWwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERyYWdMYWJlbChub2Rlcywgb3JpZ2luYWxFdmVudCkgewogICAgICBpZiAodGhpcy5kbmQuZ2V0RHJhZ0xhYmVsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZG5kLmdldERyYWdMYWJlbChub2Rlcy5tYXAoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIHJldHVybiBub2RlLmVsZW1lbnQ7CiAgICAgICAgfSksIG9yaWdpbmFsRXZlbnQpOwogICAgICB9CiAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CiAgfSwgewogICAga2V5OiAib25EcmFnU3RhcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uRHJhZ1N0YXJ0KGRhdGEsIG9yaWdpbmFsRXZlbnQpIHsKICAgICAgdmFyIF9hLCBfYjsKICAgICAgKF9iID0gKF9hID0gdGhpcy5kbmQpLm9uRHJhZ1N0YXJ0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgYXNUcmVlRHJhZ0FuZERyb3BEYXRhKGRhdGEpLCBvcmlnaW5hbEV2ZW50KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRyYWdPdmVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRyYWdPdmVyKGRhdGEsIHRhcmdldE5vZGUsIHRhcmdldEluZGV4LCBvcmlnaW5hbEV2ZW50KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB2YXIgcmF3ID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiB0cnVlOwogICAgICB2YXIgcmVzdWx0ID0gdGhpcy5kbmQub25EcmFnT3Zlcihhc1RyZWVEcmFnQW5kRHJvcERhdGEoZGF0YSksIHRhcmdldE5vZGUgJiYgdGFyZ2V0Tm9kZS5lbGVtZW50LCB0YXJnZXRJbmRleCwgb3JpZ2luYWxFdmVudCk7CiAgICAgIHZhciBkaWRDaGFuZ2VBdXRvRXhwYW5kTm9kZSA9IHRoaXMuYXV0b0V4cGFuZE5vZGUgIT09IHRhcmdldE5vZGU7CiAgICAgIGlmIChkaWRDaGFuZ2VBdXRvRXhwYW5kTm9kZSkgewogICAgICAgIHRoaXMuYXV0b0V4cGFuZERpc3Bvc2FibGUuZGlzcG9zZSgpOwogICAgICAgIHRoaXMuYXV0b0V4cGFuZE5vZGUgPSB0YXJnZXROb2RlOwogICAgICB9CiAgICAgIGlmICh0eXBlb2YgdGFyZ2V0Tm9kZSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICB9CiAgICAgIGlmIChkaWRDaGFuZ2VBdXRvRXhwYW5kTm9kZSAmJiB0eXBlb2YgcmVzdWx0ICE9PSAnYm9vbGVhbicgJiYgcmVzdWx0LmF1dG9FeHBhbmQpIHsKICAgICAgICB0aGlzLmF1dG9FeHBhbmREaXNwb3NhYmxlID0gZGlzcG9zYWJsZVRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIG1vZGVsID0gX3RoaXMyLm1vZGVsUHJvdmlkZXIoKTsKICAgICAgICAgIHZhciByZWYgPSBtb2RlbC5nZXROb2RlTG9jYXRpb24odGFyZ2V0Tm9kZSk7CiAgICAgICAgICBpZiAobW9kZWwuaXNDb2xsYXBzZWQocmVmKSkgewogICAgICAgICAgICBtb2RlbC5zZXRDb2xsYXBzZWQocmVmLCBmYWxzZSk7CiAgICAgICAgICB9CiAgICAgICAgICBfdGhpczIuYXV0b0V4cGFuZE5vZGUgPSB1bmRlZmluZWQ7CiAgICAgICAgfSwgNTAwKTsKICAgICAgfQogICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ2Jvb2xlYW4nIHx8ICFyZXN1bHQuYWNjZXB0IHx8IHR5cGVvZiByZXN1bHQuYnViYmxlID09PSAndW5kZWZpbmVkJyB8fCByZXN1bHQuZmVlZGJhY2spIHsKICAgICAgICBpZiAoIXJhdykgewogICAgICAgICAgdmFyIGFjY2VwdCA9IHR5cGVvZiByZXN1bHQgPT09ICdib29sZWFuJyA/IHJlc3VsdCA6IHJlc3VsdC5hY2NlcHQ7CiAgICAgICAgICB2YXIgZWZmZWN0ID0gdHlwZW9mIHJlc3VsdCA9PT0gJ2Jvb2xlYW4nID8gdW5kZWZpbmVkIDogcmVzdWx0LmVmZmVjdDsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGFjY2VwdDogYWNjZXB0LAogICAgICAgICAgICBlZmZlY3Q6IGVmZmVjdCwKICAgICAgICAgICAgZmVlZGJhY2s6IFt0YXJnZXRJbmRleF0KICAgICAgICAgIH07CiAgICAgICAgfQogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH0KICAgICAgaWYgKHJlc3VsdC5idWJibGUgPT09IDEgLyogVHJlZURyYWdPdmVyQnViYmxlLlVwICovKSB7CiAgICAgICAgdmFyIF9tb2RlbCA9IHRoaXMubW9kZWxQcm92aWRlcigpOwogICAgICAgIHZhciBfcmVmID0gX21vZGVsLmdldE5vZGVMb2NhdGlvbih0YXJnZXROb2RlKTsKICAgICAgICB2YXIgcGFyZW50UmVmID0gX21vZGVsLmdldFBhcmVudE5vZGVMb2NhdGlvbihfcmVmKTsKICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IF9tb2RlbC5nZXROb2RlKHBhcmVudFJlZik7CiAgICAgICAgdmFyIHBhcmVudEluZGV4ID0gcGFyZW50UmVmICYmIF9tb2RlbC5nZXRMaXN0SW5kZXgocGFyZW50UmVmKTsKICAgICAgICByZXR1cm4gdGhpcy5vbkRyYWdPdmVyKGRhdGEsIHBhcmVudE5vZGUsIHBhcmVudEluZGV4LCBvcmlnaW5hbEV2ZW50LCBmYWxzZSk7CiAgICAgIH0KICAgICAgdmFyIG1vZGVsID0gdGhpcy5tb2RlbFByb3ZpZGVyKCk7CiAgICAgIHZhciByZWYgPSBtb2RlbC5nZXROb2RlTG9jYXRpb24odGFyZ2V0Tm9kZSk7CiAgICAgIHZhciBzdGFydCA9IG1vZGVsLmdldExpc3RJbmRleChyZWYpOwogICAgICB2YXIgbGVuZ3RoID0gbW9kZWwuZ2V0TGlzdFJlbmRlckNvdW50KHJlZik7CiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlc3VsdCksIHsKICAgICAgICBmZWVkYmFjazogcmFuZ2Uoc3RhcnQsIHN0YXJ0ICsgbGVuZ3RoKQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkcm9wIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkcm9wKGRhdGEsIHRhcmdldE5vZGUsIHRhcmdldEluZGV4LCBvcmlnaW5hbEV2ZW50KSB7CiAgICAgIHRoaXMuYXV0b0V4cGFuZERpc3Bvc2FibGUuZGlzcG9zZSgpOwogICAgICB0aGlzLmF1dG9FeHBhbmROb2RlID0gdW5kZWZpbmVkOwogICAgICB0aGlzLmRuZC5kcm9wKGFzVHJlZURyYWdBbmREcm9wRGF0YShkYXRhKSwgdGFyZ2V0Tm9kZSAmJiB0YXJnZXROb2RlLmVsZW1lbnQsIHRhcmdldEluZGV4LCBvcmlnaW5hbEV2ZW50KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRyYWdFbmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uRHJhZ0VuZChvcmlnaW5hbEV2ZW50KSB7CiAgICAgIHZhciBfYSwgX2I7CiAgICAgIChfYiA9IChfYSA9IHRoaXMuZG5kKS5vbkRyYWdFbmQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBvcmlnaW5hbEV2ZW50KTsKICAgIH0KICB9XSk7CiAgcmV0dXJuIFRyZWVOb2RlTGlzdERyYWdBbmREcm9wOwp9KCk7CmZ1bmN0aW9uIGFzTGlzdE9wdGlvbnMobW9kZWxQcm92aWRlciwgb3B0aW9ucykgewogIHJldHVybiBvcHRpb25zICYmIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsKICAgIGlkZW50aXR5UHJvdmlkZXI6IG9wdGlvbnMuaWRlbnRpdHlQcm92aWRlciAmJiB7CiAgICAgIGdldElkOiBmdW5jdGlvbiBnZXRJZChlbCkgewogICAgICAgIHJldHVybiBvcHRpb25zLmlkZW50aXR5UHJvdmlkZXIuZ2V0SWQoZWwuZWxlbWVudCk7CiAgICAgIH0KICAgIH0sCiAgICBkbmQ6IG9wdGlvbnMuZG5kICYmIG5ldyBUcmVlTm9kZUxpc3REcmFnQW5kRHJvcChtb2RlbFByb3ZpZGVyLCBvcHRpb25zLmRuZCksCiAgICBtdWx0aXBsZVNlbGVjdGlvbkNvbnRyb2xsZXI6IG9wdGlvbnMubXVsdGlwbGVTZWxlY3Rpb25Db250cm9sbGVyICYmIHsKICAgICAgaXNTZWxlY3Rpb25TaW5nbGVDaGFuZ2VFdmVudDogZnVuY3Rpb24gaXNTZWxlY3Rpb25TaW5nbGVDaGFuZ2VFdmVudChlKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbnMubXVsdGlwbGVTZWxlY3Rpb25Db250cm9sbGVyLmlzU2VsZWN0aW9uU2luZ2xlQ2hhbmdlRXZlbnQoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBlKSwgewogICAgICAgICAgZWxlbWVudDogZS5lbGVtZW50CiAgICAgICAgfSkpOwogICAgICB9LAogICAgICBpc1NlbGVjdGlvblJhbmdlQ2hhbmdlRXZlbnQ6IGZ1bmN0aW9uIGlzU2VsZWN0aW9uUmFuZ2VDaGFuZ2VFdmVudChlKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbnMubXVsdGlwbGVTZWxlY3Rpb25Db250cm9sbGVyLmlzU2VsZWN0aW9uUmFuZ2VDaGFuZ2VFdmVudChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGUpLCB7CiAgICAgICAgICBlbGVtZW50OiBlLmVsZW1lbnQKICAgICAgICB9KSk7CiAgICAgIH0KICAgIH0sCiAgICBhY2Nlc3NpYmlsaXR5UHJvdmlkZXI6IG9wdGlvbnMuYWNjZXNzaWJpbGl0eVByb3ZpZGVyICYmIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIpLCB7CiAgICAgIGdldFNldFNpemU6IGZ1bmN0aW9uIGdldFNldFNpemUobm9kZSkgewogICAgICAgIHZhciBtb2RlbCA9IG1vZGVsUHJvdmlkZXIoKTsKICAgICAgICB2YXIgcmVmID0gbW9kZWwuZ2V0Tm9kZUxvY2F0aW9uKG5vZGUpOwogICAgICAgIHZhciBwYXJlbnRSZWYgPSBtb2RlbC5nZXRQYXJlbnROb2RlTG9jYXRpb24ocmVmKTsKICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IG1vZGVsLmdldE5vZGUocGFyZW50UmVmKTsKICAgICAgICByZXR1cm4gcGFyZW50Tm9kZS52aXNpYmxlQ2hpbGRyZW5Db3VudDsKICAgICAgfSwKICAgICAgZ2V0UG9zSW5TZXQ6IGZ1bmN0aW9uIGdldFBvc0luU2V0KG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS52aXNpYmxlQ2hpbGRJbmRleCArIDE7CiAgICAgIH0sCiAgICAgIGlzQ2hlY2tlZDogb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIgJiYgb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuaXNDaGVja2VkID8gZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuaXNDaGVja2VkKG5vZGUuZWxlbWVudCk7CiAgICAgIH0gOiB1bmRlZmluZWQsCiAgICAgIGdldFJvbGU6IG9wdGlvbnMuYWNjZXNzaWJpbGl0eVByb3ZpZGVyICYmIG9wdGlvbnMuYWNjZXNzaWJpbGl0eVByb3ZpZGVyLmdldFJvbGUgPyBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBvcHRpb25zLmFjY2Vzc2liaWxpdHlQcm92aWRlci5nZXRSb2xlKG5vZGUuZWxlbWVudCk7CiAgICAgIH0gOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuICd0cmVlaXRlbSc7CiAgICAgIH0sCiAgICAgIGdldEFyaWFMYWJlbDogZnVuY3Rpb24gZ2V0QXJpYUxhYmVsKGUpIHsKICAgICAgICByZXR1cm4gb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuZ2V0QXJpYUxhYmVsKGUuZWxlbWVudCk7CiAgICAgIH0sCiAgICAgIGdldFdpZGdldEFyaWFMYWJlbDogZnVuY3Rpb24gZ2V0V2lkZ2V0QXJpYUxhYmVsKCkgewogICAgICAgIHJldHVybiBvcHRpb25zLmFjY2Vzc2liaWxpdHlQcm92aWRlci5nZXRXaWRnZXRBcmlhTGFiZWwoKTsKICAgICAgfSwKICAgICAgZ2V0V2lkZ2V0Um9sZTogb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIgJiYgb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuZ2V0V2lkZ2V0Um9sZSA/IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuZ2V0V2lkZ2V0Um9sZSgpOwogICAgICB9IDogZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiAndHJlZSc7CiAgICAgIH0sCiAgICAgIGdldEFyaWFMZXZlbDogb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIgJiYgb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuZ2V0QXJpYUxldmVsID8gZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gb3B0aW9ucy5hY2Nlc3NpYmlsaXR5UHJvdmlkZXIuZ2V0QXJpYUxldmVsKG5vZGUuZWxlbWVudCk7CiAgICAgIH0gOiBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlLmRlcHRoOwogICAgICB9LAogICAgICBnZXRBY3RpdmVEZXNjZW5kYW50SWQ6IG9wdGlvbnMuYWNjZXNzaWJpbGl0eVByb3ZpZGVyLmdldEFjdGl2ZURlc2NlbmRhbnRJZCAmJiBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBvcHRpb25zLmFjY2Vzc2liaWxpdHlQcm92aWRlci5nZXRBY3RpdmVEZXNjZW5kYW50SWQobm9kZS5lbGVtZW50KTsKICAgICAgfQogICAgfSksCiAgICBrZXlib2FyZE5hdmlnYXRpb25MYWJlbFByb3ZpZGVyOiBvcHRpb25zLmtleWJvYXJkTmF2aWdhdGlvbkxhYmVsUHJvdmlkZXIgJiYgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLmtleWJvYXJkTmF2aWdhdGlvbkxhYmVsUHJvdmlkZXIpLCB7CiAgICAgIGdldEtleWJvYXJkTmF2aWdhdGlvbkxhYmVsOiBmdW5jdGlvbiBnZXRLZXlib2FyZE5hdmlnYXRpb25MYWJlbChub2RlKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbnMua2V5Ym9hcmROYXZpZ2F0aW9uTGFiZWxQcm92aWRlci5nZXRLZXlib2FyZE5hdmlnYXRpb25MYWJlbChub2RlLmVsZW1lbnQpOwogICAgICB9CiAgICB9KQogIH0pOwp9CmV4cG9ydCB2YXIgQ29tcG9zZWRUcmVlRGVsZWdhdGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIENvbXBvc2VkVHJlZURlbGVnYXRlKGRlbGVnYXRlKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tcG9zZWRUcmVlRGVsZWdhdGUpOwogICAgdGhpcy5kZWxlZ2F0ZSA9IGRlbGVnYXRlOwogIH0KICBfY3JlYXRlQ2xhc3MoQ29tcG9zZWRUcmVlRGVsZWdhdGUsIFt7CiAgICBrZXk6ICJnZXRIZWlnaHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEhlaWdodChlbGVtZW50KSB7CiAgICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLmdldEhlaWdodChlbGVtZW50LmVsZW1lbnQpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFRlbXBsYXRlSWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRlbXBsYXRlSWQoZWxlbWVudCkgewogICAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5nZXRUZW1wbGF0ZUlkKGVsZW1lbnQuZWxlbWVudCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaGFzRHluYW1pY0hlaWdodCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzRHluYW1pY0hlaWdodChlbGVtZW50KSB7CiAgICAgIHJldHVybiAhIXRoaXMuZGVsZWdhdGUuaGFzRHluYW1pY0hlaWdodCAmJiB0aGlzLmRlbGVnYXRlLmhhc0R5bmFtaWNIZWlnaHQoZWxlbWVudC5lbGVtZW50KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXREeW5hbWljSGVpZ2h0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREeW5hbWljSGVpZ2h0KGVsZW1lbnQsIGhlaWdodCkgewogICAgICB2YXIgX2EsIF9iOwogICAgICAoX2IgPSAoX2EgPSB0aGlzLmRlbGVnYXRlKS5zZXREeW5hbWljSGVpZ2h0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZWxlbWVudC5lbGVtZW50LCBoZWlnaHQpOwogICAgfQogIH1dKTsKICByZXR1cm4gQ29tcG9zZWRUcmVlRGVsZWdhdGU7Cn0oKTsKZXhwb3J0IHZhciBSZW5kZXJJbmRlbnRHdWlkZXM7CihmdW5jdGlvbiAoUmVuZGVySW5kZW50R3VpZGVzKSB7CiAgUmVuZGVySW5kZW50R3VpZGVzWyJOb25lIl0gPSAibm9uZSI7CiAgUmVuZGVySW5kZW50R3VpZGVzWyJPbkhvdmVyIl0gPSAib25Ib3ZlciI7CiAgUmVuZGVySW5kZW50R3VpZGVzWyJBbHdheXMiXSA9ICJhbHdheXMiOwp9KShSZW5kZXJJbmRlbnRHdWlkZXMgfHwgKFJlbmRlckluZGVudEd1aWRlcyA9IHt9KSk7CnZhciBFdmVudENvbGxlY3Rpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEV2ZW50Q29sbGVjdGlvbihvbkRpZENoYW5nZSkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICB2YXIgX2VsZW1lbnRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFdmVudENvbGxlY3Rpb24pOwogICAgdGhpcy5fZWxlbWVudHMgPSBfZWxlbWVudHM7CiAgICB0aGlzLmRpc3Bvc2FibGVzID0gbmV3IERpc3Bvc2FibGVTdG9yZSgpOwogICAgdGhpcy5vbkRpZENoYW5nZSA9IEV2ZW50LmZvckVhY2gob25EaWRDaGFuZ2UsIGZ1bmN0aW9uIChlbGVtZW50cykgewogICAgICByZXR1cm4gX3RoaXMzLl9lbGVtZW50cyA9IGVsZW1lbnRzOwogICAgfSwgdGhpcy5kaXNwb3NhYmxlcyk7CiAgfQogIF9jcmVhdGVDbGFzcyhFdmVudENvbGxlY3Rpb24sIFt7CiAgICBrZXk6ICJlbGVtZW50cyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnRzOwogICAgfQogIH0sIHsKICAgIGtleTogImRpc3Bvc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7CiAgICAgIHRoaXMuZGlzcG9zYWJsZXMuZGlzcG9zZSgpOwogICAgfQogIH1dKTsKICByZXR1cm4gRXZlbnRDb2xsZWN0aW9uOwp9KCk7CnZhciBUcmVlUmVuZGVyZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFRyZWVSZW5kZXJlcihyZW5kZXJlciwgbW9kZWxQcm92aWRlciwgb25EaWRDaGFuZ2VDb2xsYXBzZVN0YXRlLCBhY3RpdmVOb2RlcykgewogICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHt9OwogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyZWVSZW5kZXJlcik7CiAgICB2YXIgX2E7CiAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7CiAgICB0aGlzLm1vZGVsUHJvdmlkZXIgPSBtb2RlbFByb3ZpZGVyOwogICAgdGhpcy5hY3RpdmVOb2RlcyA9IGFjdGl2ZU5vZGVzOwogICAgdGhpcy5yZW5kZXJlZEVsZW1lbnRzID0gbmV3IE1hcCgpOwogICAgdGhpcy5yZW5kZXJlZE5vZGVzID0gbmV3IE1hcCgpOwogICAgdGhpcy5pbmRlbnQgPSBUcmVlUmVuZGVyZXIuRGVmYXVsdEluZGVudDsKICAgIHRoaXMuaGlkZVR3aXN0aWVzT2ZDaGlsZGxlc3NFbGVtZW50cyA9IGZhbHNlOwogICAgdGhpcy5zaG91bGRSZW5kZXJJbmRlbnRHdWlkZXMgPSBmYWxzZTsKICAgIHRoaXMucmVuZGVyZWRJbmRlbnRHdWlkZXMgPSBuZXcgU2V0TWFwKCk7CiAgICB0aGlzLmFjdGl2ZUluZGVudE5vZGVzID0gbmV3IFNldCgpOwogICAgdGhpcy5pbmRlbnRHdWlkZXNEaXNwb3NhYmxlID0gRGlzcG9zYWJsZS5Ob25lOwogICAgdGhpcy5kaXNwb3NhYmxlcyA9IG5ldyBEaXNwb3NhYmxlU3RvcmUoKTsKICAgIHRoaXMudGVtcGxhdGVJZCA9IHJlbmRlcmVyLnRlbXBsYXRlSWQ7CiAgICB0aGlzLnVwZGF0ZU9wdGlvbnMob3B0aW9ucyk7CiAgICBFdmVudC5tYXAob25EaWRDaGFuZ2VDb2xsYXBzZVN0YXRlLCBmdW5jdGlvbiAoZSkgewogICAgICByZXR1cm4gZS5ub2RlOwogICAgfSkodGhpcy5vbkRpZENoYW5nZU5vZGVUd2lzdGllU3RhdGUsIHRoaXMsIHRoaXMuZGlzcG9zYWJsZXMpOwogICAgKF9hID0gcmVuZGVyZXIub25EaWRDaGFuZ2VUd2lzdGllU3RhdGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKHJlbmRlcmVyLCB0aGlzLm9uRGlkQ2hhbmdlVHdpc3RpZVN0YXRlLCB0aGlzLCB0aGlzLmRpc3Bvc2FibGVzKTsKICB9CiAgX2NyZWF0ZUNsYXNzKFRyZWVSZW5kZXJlciwgW3sKICAgIGtleTogInVwZGF0ZU9wdGlvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZU9wdGlvbnMoKSB7CiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmluZGVudCAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICB0aGlzLmluZGVudCA9IGNsYW1wKG9wdGlvbnMuaW5kZW50LCAwLCA0MCk7CiAgICAgIH0KICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnJlbmRlckluZGVudEd1aWRlcyAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICB2YXIgc2hvdWxkUmVuZGVySW5kZW50R3VpZGVzID0gb3B0aW9ucy5yZW5kZXJJbmRlbnRHdWlkZXMgIT09IFJlbmRlckluZGVudEd1aWRlcy5Ob25lOwogICAgICAgIGlmIChzaG91bGRSZW5kZXJJbmRlbnRHdWlkZXMgIT09IHRoaXMuc2hvdWxkUmVuZGVySW5kZW50R3VpZGVzKSB7CiAgICAgICAgICB0aGlzLnNob3VsZFJlbmRlckluZGVudEd1aWRlcyA9IHNob3VsZFJlbmRlckluZGVudEd1aWRlczsKICAgICAgICAgIHRoaXMuaW5kZW50R3VpZGVzRGlzcG9zYWJsZS5kaXNwb3NlKCk7CiAgICAgICAgICBpZiAoc2hvdWxkUmVuZGVySW5kZW50R3VpZGVzKSB7CiAgICAgICAgICAgIHZhciBkaXNwb3NhYmxlcyA9IG5ldyBEaXNwb3NhYmxlU3RvcmUoKTsKICAgICAgICAgICAgdGhpcy5hY3RpdmVOb2Rlcy5vbkRpZENoYW5nZSh0aGlzLl9vbkRpZENoYW5nZUFjdGl2ZU5vZGVzLCB0aGlzLCBkaXNwb3NhYmxlcyk7CiAgICAgICAgICAgIHRoaXMuaW5kZW50R3VpZGVzRGlzcG9zYWJsZSA9IGRpc3Bvc2FibGVzOwogICAgICAgICAgICB0aGlzLl9vbkRpZENoYW5nZUFjdGl2ZU5vZGVzKHRoaXMuYWN0aXZlTm9kZXMuZWxlbWVudHMpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICBpZiAodHlwZW9mIG9wdGlvbnMuaGlkZVR3aXN0aWVzT2ZDaGlsZGxlc3NFbGVtZW50cyAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICB0aGlzLmhpZGVUd2lzdGllc09mQ2hpbGRsZXNzRWxlbWVudHMgPSBvcHRpb25zLmhpZGVUd2lzdGllc09mQ2hpbGRsZXNzRWxlbWVudHM7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXJUZW1wbGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyVGVtcGxhdGUoY29udGFpbmVyKSB7CiAgICAgIHZhciBlbCA9IGFwcGVuZChjb250YWluZXIsICQoJy5tb25hY28tdGwtcm93JykpOwogICAgICB2YXIgaW5kZW50ID0gYXBwZW5kKGVsLCAkKCcubW9uYWNvLXRsLWluZGVudCcpKTsKICAgICAgdmFyIHR3aXN0aWUgPSBhcHBlbmQoZWwsICQoJy5tb25hY28tdGwtdHdpc3RpZScpKTsKICAgICAgdmFyIGNvbnRlbnRzID0gYXBwZW5kKGVsLCAkKCcubW9uYWNvLXRsLWNvbnRlbnRzJykpOwogICAgICB2YXIgdGVtcGxhdGVEYXRhID0gdGhpcy5yZW5kZXJlci5yZW5kZXJUZW1wbGF0ZShjb250ZW50cyk7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29udGFpbmVyOiBjb250YWluZXIsCiAgICAgICAgaW5kZW50OiBpbmRlbnQsCiAgICAgICAgdHdpc3RpZTogdHdpc3RpZSwKICAgICAgICBpbmRlbnRHdWlkZXNEaXNwb3NhYmxlOiBEaXNwb3NhYmxlLk5vbmUsCiAgICAgICAgdGVtcGxhdGVEYXRhOiB0ZW1wbGF0ZURhdGEKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXJFbGVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJFbGVtZW50KG5vZGUsIGluZGV4LCB0ZW1wbGF0ZURhdGEsIGhlaWdodCkgewogICAgICBpZiAodHlwZW9mIGhlaWdodCA9PT0gJ251bWJlcicpIHsKICAgICAgICB0aGlzLnJlbmRlcmVkTm9kZXMuc2V0KG5vZGUsIHsKICAgICAgICAgIHRlbXBsYXRlRGF0YTogdGVtcGxhdGVEYXRhLAogICAgICAgICAgaGVpZ2h0OiBoZWlnaHQKICAgICAgICB9KTsKICAgICAgICB0aGlzLnJlbmRlcmVkRWxlbWVudHMuc2V0KG5vZGUuZWxlbWVudCwgbm9kZSk7CiAgICAgIH0KICAgICAgdmFyIGluZGVudCA9IFRyZWVSZW5kZXJlci5EZWZhdWx0SW5kZW50ICsgKG5vZGUuZGVwdGggLSAxKSAqIHRoaXMuaW5kZW50OwogICAgICB0ZW1wbGF0ZURhdGEudHdpc3RpZS5zdHlsZS5wYWRkaW5nTGVmdCA9ICIiLmNvbmNhdChpbmRlbnQsICJweCIpOwogICAgICB0ZW1wbGF0ZURhdGEuaW5kZW50LnN0eWxlLndpZHRoID0gIiIuY29uY2F0KGluZGVudCArIHRoaXMuaW5kZW50IC0gMTYsICJweCIpOwogICAgICB0aGlzLnJlbmRlclR3aXN0aWUobm9kZSwgdGVtcGxhdGVEYXRhKTsKICAgICAgaWYgKHR5cGVvZiBoZWlnaHQgPT09ICdudW1iZXInKSB7CiAgICAgICAgdGhpcy5yZW5kZXJJbmRlbnRHdWlkZXMobm9kZSwgdGVtcGxhdGVEYXRhKTsKICAgICAgfQogICAgICB0aGlzLnJlbmRlcmVyLnJlbmRlckVsZW1lbnQobm9kZSwgaW5kZXgsIHRlbXBsYXRlRGF0YS50ZW1wbGF0ZURhdGEsIGhlaWdodCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzcG9zZUVsZW1lbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2VFbGVtZW50KG5vZGUsIGluZGV4LCB0ZW1wbGF0ZURhdGEsIGhlaWdodCkgewogICAgICB2YXIgX2EsIF9iOwogICAgICB0ZW1wbGF0ZURhdGEuaW5kZW50R3VpZGVzRGlzcG9zYWJsZS5kaXNwb3NlKCk7CiAgICAgIChfYiA9IChfYSA9IHRoaXMucmVuZGVyZXIpLmRpc3Bvc2VFbGVtZW50KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgbm9kZSwgaW5kZXgsIHRlbXBsYXRlRGF0YS50ZW1wbGF0ZURhdGEsIGhlaWdodCk7CiAgICAgIGlmICh0eXBlb2YgaGVpZ2h0ID09PSAnbnVtYmVyJykgewogICAgICAgIHRoaXMucmVuZGVyZWROb2Rlcy5kZWxldGUobm9kZSk7CiAgICAgICAgdGhpcy5yZW5kZXJlZEVsZW1lbnRzLmRlbGV0ZShub2RlLmVsZW1lbnQpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzcG9zZVRlbXBsYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlVGVtcGxhdGUodGVtcGxhdGVEYXRhKSB7CiAgICAgIHRoaXMucmVuZGVyZXIuZGlzcG9zZVRlbXBsYXRlKHRlbXBsYXRlRGF0YS50ZW1wbGF0ZURhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uRGlkQ2hhbmdlVHdpc3RpZVN0YXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRpZENoYW5nZVR3aXN0aWVTdGF0ZShlbGVtZW50KSB7CiAgICAgIHZhciBub2RlID0gdGhpcy5yZW5kZXJlZEVsZW1lbnRzLmdldChlbGVtZW50KTsKICAgICAgaWYgKCFub2RlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMub25EaWRDaGFuZ2VOb2RlVHdpc3RpZVN0YXRlKG5vZGUpOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uRGlkQ2hhbmdlTm9kZVR3aXN0aWVTdGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25EaWRDaGFuZ2VOb2RlVHdpc3RpZVN0YXRlKG5vZGUpIHsKICAgICAgdmFyIGRhdGEgPSB0aGlzLnJlbmRlcmVkTm9kZXMuZ2V0KG5vZGUpOwogICAgICBpZiAoIWRhdGEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5yZW5kZXJUd2lzdGllKG5vZGUsIGRhdGEudGVtcGxhdGVEYXRhKTsKICAgICAgdGhpcy5fb25EaWRDaGFuZ2VBY3RpdmVOb2Rlcyh0aGlzLmFjdGl2ZU5vZGVzLmVsZW1lbnRzKTsKICAgICAgdGhpcy5yZW5kZXJJbmRlbnRHdWlkZXMobm9kZSwgZGF0YS50ZW1wbGF0ZURhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlclR3aXN0aWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlclR3aXN0aWUobm9kZSwgdGVtcGxhdGVEYXRhKSB7CiAgICAgIHZhciBfdGVtcGxhdGVEYXRhJHR3aXN0aWU7CiAgICAgIChfdGVtcGxhdGVEYXRhJHR3aXN0aWUgPSB0ZW1wbGF0ZURhdGEudHdpc3RpZS5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfdGVtcGxhdGVEYXRhJHR3aXN0aWUsIF90b0NvbnN1bWFibGVBcnJheShDb2RpY29uLnRyZWVJdGVtRXhwYW5kZWQuY2xhc3NOYW1lc0FycmF5KSk7CiAgICAgIHZhciB0d2lzdGllUmVuZGVyZWQgPSBmYWxzZTsKICAgICAgaWYgKHRoaXMucmVuZGVyZXIucmVuZGVyVHdpc3RpZSkgewogICAgICAgIHR3aXN0aWVSZW5kZXJlZCA9IHRoaXMucmVuZGVyZXIucmVuZGVyVHdpc3RpZShub2RlLmVsZW1lbnQsIHRlbXBsYXRlRGF0YS50d2lzdGllKTsKICAgICAgfQogICAgICBpZiAobm9kZS5jb2xsYXBzaWJsZSAmJiAoIXRoaXMuaGlkZVR3aXN0aWVzT2ZDaGlsZGxlc3NFbGVtZW50cyB8fCBub2RlLnZpc2libGVDaGlsZHJlbkNvdW50ID4gMCkpIHsKICAgICAgICBpZiAoIXR3aXN0aWVSZW5kZXJlZCkgewogICAgICAgICAgdmFyIF90ZW1wbGF0ZURhdGEkdHdpc3RpZTI7CiAgICAgICAgICAoX3RlbXBsYXRlRGF0YSR0d2lzdGllMiA9IHRlbXBsYXRlRGF0YS50d2lzdGllLmNsYXNzTGlzdCkuYWRkLmFwcGx5KF90ZW1wbGF0ZURhdGEkdHdpc3RpZTIsIF90b0NvbnN1bWFibGVBcnJheShDb2RpY29uLnRyZWVJdGVtRXhwYW5kZWQuY2xhc3NOYW1lc0FycmF5KSk7CiAgICAgICAgfQogICAgICAgIHRlbXBsYXRlRGF0YS50d2lzdGllLmNsYXNzTGlzdC5hZGQoJ2NvbGxhcHNpYmxlJyk7CiAgICAgICAgdGVtcGxhdGVEYXRhLnR3aXN0aWUuY2xhc3NMaXN0LnRvZ2dsZSgnY29sbGFwc2VkJywgbm9kZS5jb2xsYXBzZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRlbXBsYXRlRGF0YS50d2lzdGllLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbGxhcHNpYmxlJywgJ2NvbGxhcHNlZCcpOwogICAgICB9CiAgICAgIGlmIChub2RlLmNvbGxhcHNpYmxlKSB7CiAgICAgICAgdGVtcGxhdGVEYXRhLmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBTdHJpbmcoIW5vZGUuY29sbGFwc2VkKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGVtcGxhdGVEYXRhLmNvbnRhaW5lci5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlckluZGVudEd1aWRlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVySW5kZW50R3VpZGVzKHRhcmdldCwgdGVtcGxhdGVEYXRhKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICBjbGVhck5vZGUodGVtcGxhdGVEYXRhLmluZGVudCk7CiAgICAgIHRlbXBsYXRlRGF0YS5pbmRlbnRHdWlkZXNEaXNwb3NhYmxlLmRpc3Bvc2UoKTsKICAgICAgaWYgKCF0aGlzLnNob3VsZFJlbmRlckluZGVudEd1aWRlcykgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgZGlzcG9zYWJsZVN0b3JlID0gbmV3IERpc3Bvc2FibGVTdG9yZSgpOwogICAgICB2YXIgbW9kZWwgPSB0aGlzLm1vZGVsUHJvdmlkZXIoKTsKICAgICAgdmFyIG5vZGUgPSB0YXJnZXQ7CiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkgewogICAgICAgIHZhciByZWYgPSBtb2RlbC5nZXROb2RlTG9jYXRpb24obm9kZSk7CiAgICAgICAgdmFyIHBhcmVudFJlZiA9IG1vZGVsLmdldFBhcmVudE5vZGVMb2NhdGlvbihyZWYpOwogICAgICAgIGlmICghcGFyZW50UmVmKSB7CiAgICAgICAgICByZXR1cm4gImJyZWFrIjsKICAgICAgICB9CiAgICAgICAgdmFyIHBhcmVudCA9IG1vZGVsLmdldE5vZGUocGFyZW50UmVmKTsKICAgICAgICB2YXIgZ3VpZGUgPSAkKCcuaW5kZW50LWd1aWRlJywgewogICAgICAgICAgc3R5bGU6ICJ3aWR0aDogIi5jb25jYXQoX3RoaXM0LmluZGVudCwgInB4IikKICAgICAgICB9KTsKICAgICAgICBpZiAoX3RoaXM0LmFjdGl2ZUluZGVudE5vZGVzLmhhcyhwYXJlbnQpKSB7CiAgICAgICAgICBndWlkZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTsKICAgICAgICB9CiAgICAgICAgaWYgKHRlbXBsYXRlRGF0YS5pbmRlbnQuY2hpbGRFbGVtZW50Q291bnQgPT09IDApIHsKICAgICAgICAgIHRlbXBsYXRlRGF0YS5pbmRlbnQuYXBwZW5kQ2hpbGQoZ3VpZGUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0ZW1wbGF0ZURhdGEuaW5kZW50Lmluc2VydEJlZm9yZShndWlkZSwgdGVtcGxhdGVEYXRhLmluZGVudC5maXJzdEVsZW1lbnRDaGlsZCk7CiAgICAgICAgfQogICAgICAgIF90aGlzNC5yZW5kZXJlZEluZGVudEd1aWRlcy5hZGQocGFyZW50LCBndWlkZSk7CiAgICAgICAgZGlzcG9zYWJsZVN0b3JlLmFkZCh0b0Rpc3Bvc2FibGUoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzNC5yZW5kZXJlZEluZGVudEd1aWRlcy5kZWxldGUocGFyZW50LCBndWlkZSk7CiAgICAgICAgfSkpOwogICAgICAgIG5vZGUgPSBwYXJlbnQ7CiAgICAgIH07CiAgICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgdmFyIF9yZXQgPSBfbG9vcCgpOwogICAgICAgIGlmIChfcmV0ID09PSAiYnJlYWsiKSBicmVhazsKICAgICAgfQogICAgICB0ZW1wbGF0ZURhdGEuaW5kZW50R3VpZGVzRGlzcG9zYWJsZSA9IGRpc3Bvc2FibGVTdG9yZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfb25EaWRDaGFuZ2VBY3RpdmVOb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX29uRGlkQ2hhbmdlQWN0aXZlTm9kZXMobm9kZXMpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIGlmICghdGhpcy5zaG91bGRSZW5kZXJJbmRlbnRHdWlkZXMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIHNldCA9IG5ldyBTZXQoKTsKICAgICAgdmFyIG1vZGVsID0gdGhpcy5tb2RlbFByb3ZpZGVyKCk7CiAgICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICB2YXIgcmVmID0gbW9kZWwuZ2V0Tm9kZUxvY2F0aW9uKG5vZGUpOwogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgcGFyZW50UmVmID0gbW9kZWwuZ2V0UGFyZW50Tm9kZUxvY2F0aW9uKHJlZik7CiAgICAgICAgICBpZiAobm9kZS5jb2xsYXBzaWJsZSAmJiBub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDAgJiYgIW5vZGUuY29sbGFwc2VkKSB7CiAgICAgICAgICAgIHNldC5hZGQobm9kZSk7CiAgICAgICAgICB9IGVsc2UgaWYgKHBhcmVudFJlZikgewogICAgICAgICAgICBzZXQuYWRkKG1vZGVsLmdldE5vZGUocGFyZW50UmVmKSk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoX2EpIHsKICAgICAgICAgIC8vIG5vb3AKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmFjdGl2ZUluZGVudE5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICBpZiAoIXNldC5oYXMobm9kZSkpIHsKICAgICAgICAgIF90aGlzNS5yZW5kZXJlZEluZGVudEd1aWRlcy5mb3JFYWNoKG5vZGUsIGZ1bmN0aW9uIChsaW5lKSB7CiAgICAgICAgICAgIHJldHVybiBsaW5lLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgc2V0LmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICBpZiAoIV90aGlzNS5hY3RpdmVJbmRlbnROb2Rlcy5oYXMobm9kZSkpIHsKICAgICAgICAgIF90aGlzNS5yZW5kZXJlZEluZGVudEd1aWRlcy5mb3JFYWNoKG5vZGUsIGZ1bmN0aW9uIChsaW5lKSB7CiAgICAgICAgICAgIHJldHVybiBsaW5lLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5hY3RpdmVJbmRlbnROb2RlcyA9IHNldDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkaXNwb3NlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNwb3NlKCkgewogICAgICB0aGlzLnJlbmRlcmVkTm9kZXMuY2xlYXIoKTsKICAgICAgdGhpcy5yZW5kZXJlZEVsZW1lbnRzLmNsZWFyKCk7CiAgICAgIHRoaXMuaW5kZW50R3VpZGVzRGlzcG9zYWJsZS5kaXNwb3NlKCk7CiAgICAgIF9kaXNwb3NlKHRoaXMuZGlzcG9zYWJsZXMpOwogICAgfQogIH1dKTsKICByZXR1cm4gVHJlZVJlbmRlcmVyOwp9KCk7ClRyZWVSZW5kZXJlci5EZWZhdWx0SW5kZW50ID0gODsKdmFyIEZpbmRGaWx0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEZpbmRGaWx0ZXIodHJlZSwga2V5Ym9hcmROYXZpZ2F0aW9uTGFiZWxQcm92aWRlciwgX2ZpbHRlcikgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZpbmRGaWx0ZXIpOwogICAgdGhpcy50cmVlID0gdHJlZTsKICAgIHRoaXMua2V5Ym9hcmROYXZpZ2F0aW9uTGFiZWxQcm92aWRlciA9IGtleWJvYXJkTmF2aWdhdGlvbkxhYmVsUHJvdmlkZXI7CiAgICB0aGlzLl9maWx0ZXIgPSBfZmlsdGVyOwogICAgdGhpcy5fdG90YWxDb3VudCA9IDA7CiAgICB0aGlzLl9tYXRjaENvdW50ID0gMDsKICAgIHRoaXMuX3BhdHRlcm4gPSAnJzsKICAgIHRoaXMuX2xvd2VyY2FzZVBhdHRlcm4gPSAnJzsKICAgIHRoaXMuZGlzcG9zYWJsZXMgPSBuZXcgRGlzcG9zYWJsZVN0b3JlKCk7CiAgICB0cmVlLm9uV2lsbFJlZmlsdGVyKHRoaXMucmVzZXQsIHRoaXMsIHRoaXMuZGlzcG9zYWJsZXMpOwogIH0KICBfY3JlYXRlQ2xhc3MoRmluZEZpbHRlciwgW3sKICAgIGtleTogInRvdGFsQ291bnQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLl90b3RhbENvdW50OwogICAgfQogIH0sIHsKICAgIGtleTogIm1hdGNoQ291bnQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLl9tYXRjaENvdW50OwogICAgfQogIH0sIHsKICAgIGtleTogImZpbHRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmlsdGVyKGVsZW1lbnQsIHBhcmVudFZpc2liaWxpdHkpIHsKICAgICAgdmFyIHZpc2liaWxpdHkgPSAxIC8qIFRyZWVWaXNpYmlsaXR5LlZpc2libGUgKi87CiAgICAgIGlmICh0aGlzLl9maWx0ZXIpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fZmlsdGVyLmZpbHRlcihlbGVtZW50LCBwYXJlbnRWaXNpYmlsaXR5KTsKICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ2Jvb2xlYW4nKSB7CiAgICAgICAgICB2aXNpYmlsaXR5ID0gcmVzdWx0ID8gMSAvKiBUcmVlVmlzaWJpbGl0eS5WaXNpYmxlICovIDogMCAvKiBUcmVlVmlzaWJpbGl0eS5IaWRkZW4gKi87CiAgICAgICAgfSBlbHNlIGlmIChpc0ZpbHRlclJlc3VsdChyZXN1bHQpKSB7CiAgICAgICAgICB2aXNpYmlsaXR5ID0gZ2V0VmlzaWJsZVN0YXRlKHJlc3VsdC52aXNpYmlsaXR5KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmlzaWJpbGl0eSA9IHJlc3VsdDsKICAgICAgICB9CiAgICAgICAgaWYgKHZpc2liaWxpdHkgPT09IDAgLyogVHJlZVZpc2liaWxpdHkuSGlkZGVuICovKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMuX3RvdGFsQ291bnQrKzsKICAgICAgaWYgKCF0aGlzLl9wYXR0ZXJuKSB7CiAgICAgICAgdGhpcy5fbWF0Y2hDb3VudCsrOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkYXRhOiBGdXp6eVNjb3JlLkRlZmF1bHQsCiAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmlsaXR5CiAgICAgICAgfTsKICAgICAgfQogICAgICB2YXIgbGFiZWwgPSB0aGlzLmtleWJvYXJkTmF2aWdhdGlvbkxhYmVsUHJvdmlkZXIuZ2V0S2V5Ym9hcmROYXZpZ2F0aW9uTGFiZWwoZWxlbWVudCk7CiAgICAgIHZhciBsYWJlbHMgPSBBcnJheS5pc0FycmF5KGxhYmVsKSA/IGxhYmVsIDogW2xhYmVsXTsKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGxhYmVscyksCiAgICAgICAgX3N0ZXA7CiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBsID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB2YXIgbGFiZWxTdHIgPSBsICYmIGwudG9TdHJpbmcoKTsKICAgICAgICAgIGlmICh0eXBlb2YgbGFiZWxTdHIgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgZGF0YTogRnV6enlTY29yZS5EZWZhdWx0LAogICAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2liaWxpdHkKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICAgIHZhciBzY29yZSA9IGZ1enp5U2NvcmUodGhpcy5fcGF0dGVybiwgdGhpcy5fbG93ZXJjYXNlUGF0dGVybiwgMCwgbGFiZWxTdHIsIGxhYmVsU3RyLnRvTG93ZXJDYXNlKCksIDAsIHsKICAgICAgICAgICAgZmlyc3RNYXRjaENhbkJlV2VhazogdHJ1ZSwKICAgICAgICAgICAgYm9vc3RGdWxsTWF0Y2g6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKHNjb3JlKSB7CiAgICAgICAgICAgIHRoaXMuX21hdGNoQ291bnQrKzsKICAgICAgICAgICAgcmV0dXJuIGxhYmVscy5sZW5ndGggPT09IDEgPyB7CiAgICAgICAgICAgICAgZGF0YTogc2NvcmUsCiAgICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJpbGl0eQogICAgICAgICAgICB9IDogewogICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlbFN0ciwKICAgICAgICAgICAgICAgIHNjb3JlOiBzY29yZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJpbGl0eQogICAgICAgICAgICB9OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CiAgICAgIGlmICh0aGlzLnRyZWUuZmluZE1vZGUgPT09IFRyZWVGaW5kTW9kZS5GaWx0ZXIpIHsKICAgICAgICByZXR1cm4gMiAvKiBUcmVlVmlzaWJpbGl0eS5SZWN1cnNlICovOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkYXRhOiBGdXp6eVNjb3JlLkRlZmF1bHQsCiAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmlsaXR5CiAgICAgICAgfTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInJlc2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy5fdG90YWxDb3VudCA9IDA7CiAgICAgIHRoaXMuX21hdGNoQ291bnQgPSAwOwogICAgfQogIH0sIHsKICAgIGtleTogImRpc3Bvc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7CiAgICAgIF9kaXNwb3NlKHRoaXMuZGlzcG9zYWJsZXMpOwogICAgfQogIH1dKTsKICByZXR1cm4gRmluZEZpbHRlcjsKfSgpOwpleHBvcnQgdmFyIE1vZGVUb2dnbGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Ub2dnbGUpIHsKICBfaW5oZXJpdHMoTW9kZVRvZ2dsZSwgX1RvZ2dsZSk7CiAgdmFyIF9zdXBlcjMgPSBfY3JlYXRlU3VwZXIoTW9kZVRvZ2dsZSk7CiAgZnVuY3Rpb24gTW9kZVRvZ2dsZShvcHRzKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTW9kZVRvZ2dsZSk7CiAgICB2YXIgX2E7CiAgICByZXR1cm4gX3N1cGVyMy5jYWxsKHRoaXMsIHsKICAgICAgaWNvbjogQ29kaWNvbi5maWx0ZXIsCiAgICAgIHRpdGxlOiBsb2NhbGl6ZSgnZmlsdGVyJywgIkZpbHRlciIpLAogICAgICBpc0NoZWNrZWQ6IChfYSA9IG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5pc0NoZWNrZWQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGZhbHNlLAogICAgICBpbnB1dEFjdGl2ZU9wdGlvbkJvcmRlcjogb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLmlucHV0QWN0aXZlT3B0aW9uQm9yZGVyLAogICAgICBpbnB1dEFjdGl2ZU9wdGlvbkZvcmVncm91bmQ6IG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5pbnB1dEFjdGl2ZU9wdGlvbkZvcmVncm91bmQsCiAgICAgIGlucHV0QWN0aXZlT3B0aW9uQmFja2dyb3VuZDogb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLmlucHV0QWN0aXZlT3B0aW9uQmFja2dyb3VuZAogICAgfSk7CiAgfQogIHJldHVybiBfY3JlYXRlQ2xhc3MoTW9kZVRvZ2dsZSk7Cn0oVG9nZ2xlKTsKZXhwb3J0IHZhciBUcmVlRmluZE1vZGU7CihmdW5jdGlvbiAoVHJlZUZpbmRNb2RlKSB7CiAgVHJlZUZpbmRNb2RlW1RyZWVGaW5kTW9kZVsiSGlnaGxpZ2h0Il0gPSAwXSA9ICJIaWdobGlnaHQiOwogIFRyZWVGaW5kTW9kZVtUcmVlRmluZE1vZGVbIkZpbHRlciJdID0gMV0gPSAiRmlsdGVyIjsKfSkoVHJlZUZpbmRNb2RlIHx8IChUcmVlRmluZE1vZGUgPSB7fSkpOwp2YXIgRmluZFdpZGdldCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Rpc3Bvc2FibGUpIHsKICBfaW5oZXJpdHMoRmluZFdpZGdldCwgX0Rpc3Bvc2FibGUpOwogIHZhciBfc3VwZXI0ID0gX2NyZWF0ZVN1cGVyKEZpbmRXaWRnZXQpOwogIGZ1bmN0aW9uIEZpbmRXaWRnZXQoY29udGFpbmVyLCB0cmVlLCBjb250ZXh0Vmlld1Byb3ZpZGVyLCBtb2RlLCBvcHRpb25zKSB7CiAgICB2YXIgX3RoaXM2OwogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZpbmRXaWRnZXQpOwogICAgX3RoaXM2ID0gX3N1cGVyNC5jYWxsKHRoaXMpOwogICAgX3RoaXM2LnRyZWUgPSB0cmVlOwogICAgX3RoaXM2LmVsZW1lbnRzID0gaCgnLm1vbmFjby10cmVlLXR5cGUtZmlsdGVyJywgW2goJy5tb25hY28tdHJlZS10eXBlLWZpbHRlci1ncmFiLmNvZGljb24uY29kaWNvbi1kZWJ1Zy1ncmlwcGVyQGdyYWInLCB7CiAgICAgIHRhYkluZGV4OiAwCiAgICB9KSwgaCgnLm1vbmFjby10cmVlLXR5cGUtZmlsdGVyLWlucHV0QGZpbmRJbnB1dCcpLCBoKCcubW9uYWNvLXRyZWUtdHlwZS1maWx0ZXItYWN0aW9uYmFyQGFjdGlvbmJhcicpXSk7CiAgICBfdGhpczYud2lkdGggPSAwOwogICAgX3RoaXM2LnJpZ2h0ID0gMDsKICAgIF90aGlzNi5fb25EaWREaXNhYmxlID0gbmV3IEVtaXR0ZXIoKTsKICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChfdGhpczYuZWxlbWVudHMucm9vdCk7CiAgICBfdGhpczYuX3JlZ2lzdGVyKHRvRGlzcG9zYWJsZShmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBjb250YWluZXIucmVtb3ZlQ2hpbGQoX3RoaXM2LmVsZW1lbnRzLnJvb3QpOwogICAgfSkpOwogICAgX3RoaXM2Lm1vZGVUb2dnbGUgPSBfdGhpczYuX3JlZ2lzdGVyKG5ldyBNb2RlVG9nZ2xlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsKICAgICAgaXNDaGVja2VkOiBtb2RlID09PSBUcmVlRmluZE1vZGUuRmlsdGVyCiAgICB9KSkpOwogICAgX3RoaXM2Lm9uRGlkQ2hhbmdlTW9kZSA9IEV2ZW50Lm1hcChfdGhpczYubW9kZVRvZ2dsZS5vbkNoYW5nZSwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXM2Lm1vZGVUb2dnbGUuY2hlY2tlZCA/IFRyZWVGaW5kTW9kZS5GaWx0ZXIgOiBUcmVlRmluZE1vZGUuSGlnaGxpZ2h0OwogICAgfSwgX3RoaXM2Ll9zdG9yZSk7CiAgICBfdGhpczYuZmluZElucHV0ID0gX3RoaXM2Ll9yZWdpc3RlcihuZXcgRmluZElucHV0KF90aGlzNi5lbGVtZW50cy5maW5kSW5wdXQsIGNvbnRleHRWaWV3UHJvdmlkZXIsIGZhbHNlLCB7CiAgICAgIGxhYmVsOiBsb2NhbGl6ZSgndHlwZSB0byBzZWFyY2gnLCAiVHlwZSB0byBzZWFyY2giKSwKICAgICAgYWRkaXRpb25hbFRvZ2dsZXM6IFtfdGhpczYubW9kZVRvZ2dsZV0KICAgIH0pKTsKICAgIF90aGlzNi5hY3Rpb25iYXIgPSBfdGhpczYuX3JlZ2lzdGVyKG5ldyBBY3Rpb25CYXIoX3RoaXM2LmVsZW1lbnRzLmFjdGlvbmJhcikpOwogICAgX3RoaXM2Lm1vZGUgPSBtb2RlOwogICAgdmFyIGVtaXR0ZXIgPSBfdGhpczYuX3JlZ2lzdGVyKG5ldyBEb21FbWl0dGVyKF90aGlzNi5maW5kSW5wdXQuaW5wdXRCb3guaW5wdXRFbGVtZW50LCAna2V5ZG93bicpKTsKICAgIHZhciBvbktleURvd24gPSBfdGhpczYuX3JlZ2lzdGVyKEV2ZW50LmNoYWluKGVtaXR0ZXIuZXZlbnQpKS5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgcmV0dXJuIG5ldyBTdGFuZGFyZEtleWJvYXJkRXZlbnQoZSk7CiAgICB9KS5ldmVudDsKICAgIF90aGlzNi5fcmVnaXN0ZXIob25LZXlEb3duKGZ1bmN0aW9uIChlKSB7CiAgICAgIHN3aXRjaCAoZS5rZXlDb2RlKSB7CiAgICAgICAgY2FzZSAxOCAvKiBLZXlDb2RlLkRvd25BcnJvdyAqLzoKICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICBfdGhpczYudHJlZS5kb21Gb2N1cygpOwogICAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9KSk7CiAgICB2YXIgY2xvc2VBY3Rpb24gPSBfdGhpczYuX3JlZ2lzdGVyKG5ldyBBY3Rpb24oJ2Nsb3NlJywgbG9jYWxpemUoJ2Nsb3NlJywgIkNsb3NlIiksICdjb2RpY29uIGNvZGljb24tY2xvc2UnLCB0cnVlLCBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfdGhpczYuZGlzcG9zZSgpOwogICAgfSkpOwogICAgX3RoaXM2LmFjdGlvbmJhci5wdXNoKGNsb3NlQWN0aW9uLCB7CiAgICAgIGljb246IHRydWUsCiAgICAgIGxhYmVsOiBmYWxzZQogICAgfSk7CiAgICB2YXIgb25HcmFiTW91c2VEb3duID0gX3RoaXM2Ll9yZWdpc3RlcihuZXcgRG9tRW1pdHRlcihfdGhpczYuZWxlbWVudHMuZ3JhYiwgJ21vdXNlZG93bicpKTsKICAgIF90aGlzNi5fcmVnaXN0ZXIob25HcmFiTW91c2VEb3duLmV2ZW50KGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciBkaXNwb3NhYmxlcyA9IG5ldyBEaXNwb3NhYmxlU3RvcmUoKTsKICAgICAgdmFyIG9uV2luZG93TW91c2VNb3ZlID0gZGlzcG9zYWJsZXMuYWRkKG5ldyBEb21FbWl0dGVyKHdpbmRvdywgJ21vdXNlbW92ZScpKTsKICAgICAgdmFyIG9uV2luZG93TW91c2VVcCA9IGRpc3Bvc2FibGVzLmFkZChuZXcgRG9tRW1pdHRlcih3aW5kb3csICdtb3VzZXVwJykpOwogICAgICB2YXIgc3RhcnRSaWdodCA9IF90aGlzNi5yaWdodDsKICAgICAgdmFyIHN0YXJ0WCA9IGUucGFnZVg7CiAgICAgIF90aGlzNi5lbGVtZW50cy5ncmFiLmNsYXNzTGlzdC5hZGQoJ2dyYWJiaW5nJyk7CiAgICAgIHZhciB1cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUoZSkgewogICAgICAgIHZhciBkZWx0YVggPSBlLnBhZ2VYIC0gc3RhcnRYOwogICAgICAgIF90aGlzNi5yaWdodCA9IHN0YXJ0UmlnaHQgLSBkZWx0YVg7CiAgICAgICAgX3RoaXM2LmxheW91dCgpOwogICAgICB9OwogICAgICBkaXNwb3NhYmxlcy5hZGQob25XaW5kb3dNb3VzZU1vdmUuZXZlbnQodXBkYXRlKSk7CiAgICAgIGRpc3Bvc2FibGVzLmFkZChvbldpbmRvd01vdXNlVXAuZXZlbnQoZnVuY3Rpb24gKGUpIHsKICAgICAgICB1cGRhdGUoZSk7CiAgICAgICAgX3RoaXM2LmVsZW1lbnRzLmdyYWIuY2xhc3NMaXN0LnJlbW92ZSgnZ3JhYmJpbmcnKTsKICAgICAgICBkaXNwb3NhYmxlcy5kaXNwb3NlKCk7CiAgICAgIH0pKTsKICAgIH0pKTsKICAgIHZhciBvbkdyYWJLZXlEb3duID0gX3RoaXM2Ll9yZWdpc3RlcihFdmVudC5jaGFpbihfdGhpczYuX3JlZ2lzdGVyKG5ldyBEb21FbWl0dGVyKF90aGlzNi5lbGVtZW50cy5ncmFiLCAna2V5ZG93bicpKS5ldmVudCkpLm1hcChmdW5jdGlvbiAoZSkgewogICAgICByZXR1cm4gbmV3IFN0YW5kYXJkS2V5Ym9hcmRFdmVudChlKTsKICAgIH0pLmV2ZW50OwogICAgX3RoaXM2Ll9yZWdpc3RlcihvbkdyYWJLZXlEb3duKGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciByaWdodDsKICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTUgLyogS2V5Q29kZS5MZWZ0QXJyb3cgKi8pIHsKICAgICAgICByaWdodCA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTsKICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDE3IC8qIEtleUNvZGUuUmlnaHRBcnJvdyAqLykgewogICAgICAgIHJpZ2h0ID0gMDsKICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDEwIC8qIEtleUNvZGUuU3BhY2UgKi8pIHsKICAgICAgICByaWdodCA9IF90aGlzNi5yaWdodCA9PT0gMCA/IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSA6IDA7CiAgICAgIH0KICAgICAgaWYgKHJpZ2h0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICBfdGhpczYucmlnaHQgPSByaWdodDsKICAgICAgICBfdGhpczYubGF5b3V0KCk7CiAgICAgIH0KICAgIH0pKTsKICAgIF90aGlzNi5vbkRpZENoYW5nZVZhbHVlID0gX3RoaXM2LmZpbmRJbnB1dC5vbkRpZENoYW5nZTsKICAgIF90aGlzNi5zdHlsZShvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fSk7CiAgICByZXR1cm4gX3RoaXM2OwogIH0KICBfY3JlYXRlQ2xhc3MoRmluZFdpZGdldCwgW3sKICAgIGtleTogIm1vZGUiLAogICAgc2V0OiBmdW5jdGlvbiBzZXQobW9kZSkgewogICAgICB0aGlzLm1vZGVUb2dnbGUuY2hlY2tlZCA9IG1vZGUgPT09IFRyZWVGaW5kTW9kZS5GaWx0ZXI7CiAgICAgIHRoaXMuZmluZElucHV0LmlucHV0Qm94LnNldFBsYWNlSG9sZGVyKG1vZGUgPT09IFRyZWVGaW5kTW9kZS5GaWx0ZXIgPyBsb2NhbGl6ZSgndHlwZSB0byBmaWx0ZXInLCAiVHlwZSB0byBmaWx0ZXIiKSA6IGxvY2FsaXplKCd0eXBlIHRvIHNlYXJjaCcsICJUeXBlIHRvIHNlYXJjaCIpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdHlsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3R5bGUoc3R5bGVzKSB7CiAgICAgIHRoaXMuZmluZElucHV0LnN0eWxlKHN0eWxlcyk7CiAgICAgIGlmIChzdHlsZXMubGlzdEZpbHRlcldpZGdldEJhY2tncm91bmQpIHsKICAgICAgICB0aGlzLmVsZW1lbnRzLnJvb3Quc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc3R5bGVzLmxpc3RGaWx0ZXJXaWRnZXRCYWNrZ3JvdW5kLnRvU3RyaW5nKCk7CiAgICAgIH0KICAgICAgaWYgKHN0eWxlcy5saXN0RmlsdGVyV2lkZ2V0U2hhZG93KSB7CiAgICAgICAgdGhpcy5lbGVtZW50cy5yb290LnN0eWxlLmJveFNoYWRvdyA9ICIwIDAgOHB4IDJweCAiLmNvbmNhdChzdHlsZXMubGlzdEZpbHRlcldpZGdldFNoYWRvdyk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJsYXlvdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxheW91dCgpIHsKICAgICAgdmFyIHdpZHRoID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0aGlzLndpZHRoOwogICAgICB0aGlzLndpZHRoID0gd2lkdGg7CiAgICAgIHRoaXMucmlnaHQgPSBjbGFtcCh0aGlzLnJpZ2h0LCAwLCBNYXRoLm1heCgwLCB3aWR0aCAtIDIxMikpOwogICAgICB0aGlzLmVsZW1lbnRzLnJvb3Quc3R5bGUucmlnaHQgPSAiIi5jb25jYXQodGhpcy5yaWdodCwgInB4Iik7CiAgICB9CiAgfSwgewogICAga2V5OiAic2hvd01lc3NhZ2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNob3dNZXNzYWdlKG1lc3NhZ2UpIHsKICAgICAgdGhpcy5maW5kSW5wdXQuc2hvd01lc3NhZ2UobWVzc2FnZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xlYXJNZXNzYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhck1lc3NhZ2UoKSB7CiAgICAgIHRoaXMuZmluZElucHV0LmNsZWFyTWVzc2FnZSgpOwogICAgfQogIH0sIHsKICAgIGtleTogImRpc3Bvc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwogICAgICB2YXIgX3N1cGVyID0gT2JqZWN0LmNyZWF0ZShudWxsLCB7CiAgICAgICAgZGlzcG9zZTogewogICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihGaW5kV2lkZ2V0LnByb3RvdHlwZSksICJkaXNwb3NlIiwgX3RoaXM3KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0aGlzLl9vbkRpZERpc2FibGUuZmlyZSgpOwogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50cy5yb290LmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB0aW1lb3V0KDMwMCk7CiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3N1cGVyLmRpc3Bvc2UuY2FsbCh0aGlzKTsKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwogICAgfQogIH1dKTsKICByZXR1cm4gRmluZFdpZGdldDsKfShEaXNwb3NhYmxlKTsKdmFyIEZpbmRDb250cm9sbGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBGaW5kQ29udHJvbGxlcih0cmVlLCBtb2RlbCwgdmlldywgZmlsdGVyLCBjb250ZXh0Vmlld1Byb3ZpZGVyKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRmluZENvbnRyb2xsZXIpOwogICAgdmFyIF9hOwogICAgdGhpcy50cmVlID0gdHJlZTsKICAgIHRoaXMudmlldyA9IHZpZXc7CiAgICB0aGlzLmZpbHRlciA9IGZpbHRlcjsKICAgIHRoaXMuY29udGV4dFZpZXdQcm92aWRlciA9IGNvbnRleHRWaWV3UHJvdmlkZXI7CiAgICB0aGlzLl9wYXR0ZXJuID0gJyc7CiAgICB0aGlzLndpZHRoID0gMDsKICAgIHRoaXMuX29uRGlkQ2hhbmdlTW9kZSA9IG5ldyBFbWl0dGVyKCk7CiAgICB0aGlzLm9uRGlkQ2hhbmdlTW9kZSA9IHRoaXMuX29uRGlkQ2hhbmdlTW9kZS5ldmVudDsKICAgIHRoaXMuX29uRGlkQ2hhbmdlUGF0dGVybiA9IG5ldyBFbWl0dGVyKCk7CiAgICB0aGlzLl9vbkRpZENoYW5nZU9wZW5TdGF0ZSA9IG5ldyBFbWl0dGVyKCk7CiAgICB0aGlzLm9uRGlkQ2hhbmdlT3BlblN0YXRlID0gdGhpcy5fb25EaWRDaGFuZ2VPcGVuU3RhdGUuZXZlbnQ7CiAgICB0aGlzLmVuYWJsZWREaXNwb3NhYmxlcyA9IG5ldyBEaXNwb3NhYmxlU3RvcmUoKTsKICAgIHRoaXMuZGlzcG9zYWJsZXMgPSBuZXcgRGlzcG9zYWJsZVN0b3JlKCk7CiAgICB0aGlzLl9tb2RlID0gKF9hID0gdHJlZS5vcHRpb25zLmRlZmF1bHRGaW5kTW9kZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogVHJlZUZpbmRNb2RlLkhpZ2hsaWdodDsKICAgIG1vZGVsLm9uRGlkU3BsaWNlKHRoaXMub25EaWRTcGxpY2VNb2RlbCwgdGhpcywgdGhpcy5kaXNwb3NhYmxlcyk7CiAgfQogIF9jcmVhdGVDbGFzcyhGaW5kQ29udHJvbGxlciwgW3sKICAgIGtleTogInBhdHRlcm4iLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLl9wYXR0ZXJuOwogICAgfQogIH0sIHsKICAgIGtleTogIm1vZGUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLl9tb2RlOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KG1vZGUpIHsKICAgICAgaWYgKG1vZGUgPT09IHRoaXMuX21vZGUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5fbW9kZSA9IG1vZGU7CiAgICAgIGlmICh0aGlzLndpZGdldCkgewogICAgICAgIHRoaXMud2lkZ2V0Lm1vZGUgPSB0aGlzLl9tb2RlOwogICAgICB9CiAgICAgIHRoaXMudHJlZS5yZWZpbHRlcigpOwogICAgICB0aGlzLnJlbmRlcigpOwogICAgICB0aGlzLl9vbkRpZENoYW5nZU1vZGUuZmlyZShtb2RlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRpZFNwbGljZU1vZGVsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRpZFNwbGljZU1vZGVsKCkgewogICAgICBpZiAoIXRoaXMud2lkZ2V0IHx8IHRoaXMucGF0dGVybi5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy50cmVlLnJlZmlsdGVyKCk7CiAgICAgIHRoaXMucmVuZGVyKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfYSwgX2I7CiAgICAgIHZhciBub01hdGNoZXMgPSB0aGlzLmZpbHRlci50b3RhbENvdW50ID4gMCAmJiB0aGlzLmZpbHRlci5tYXRjaENvdW50ID09PSAwOwogICAgICBpZiAodGhpcy5wYXR0ZXJuICYmIG5vTWF0Y2hlcykgewogICAgICAgIChfYSA9IHRoaXMud2lkZ2V0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2hvd01lc3NhZ2UoewogICAgICAgICAgdHlwZTogMiAvKiBNZXNzYWdlVHlwZS5XQVJOSU5HICovLAogICAgICAgICAgY29udGVudDogbG9jYWxpemUoJ25vdCBmb3VuZCcsICJObyBlbGVtZW50cyBmb3VuZC4iKQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIChfYiA9IHRoaXMud2lkZ2V0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2xlYXJNZXNzYWdlKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJzaG91bGRBbGxvd0ZvY3VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzaG91bGRBbGxvd0ZvY3VzKG5vZGUpIHsKICAgICAgaWYgKCF0aGlzLndpZGdldCB8fCAhdGhpcy5wYXR0ZXJuIHx8IHRoaXMuX21vZGUgPT09IFRyZWVGaW5kTW9kZS5GaWx0ZXIpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICBpZiAodGhpcy5maWx0ZXIudG90YWxDb3VudCA+IDAgJiYgdGhpcy5maWx0ZXIubWF0Y2hDb3VudCA8PSAxKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgcmV0dXJuICFGdXp6eVNjb3JlLmlzRGVmYXVsdChub2RlLmZpbHRlckRhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogInN0eWxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzdHlsZShzdHlsZXMpIHsKICAgICAgdmFyIF9hOwogICAgICB0aGlzLnN0eWxlcyA9IHN0eWxlczsKICAgICAgKF9hID0gdGhpcy53aWRnZXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zdHlsZShzdHlsZXMpOwogICAgfQogIH0sIHsKICAgIGtleTogImxheW91dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbGF5b3V0KHdpZHRoKSB7CiAgICAgIHZhciBfYTsKICAgICAgdGhpcy53aWR0aCA9IHdpZHRoOwogICAgICAoX2EgPSB0aGlzLndpZGdldCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxheW91dCh3aWR0aCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzcG9zZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHsKICAgICAgdGhpcy5fb25EaWRDaGFuZ2VQYXR0ZXJuLmRpc3Bvc2UoKTsKICAgICAgdGhpcy5lbmFibGVkRGlzcG9zYWJsZXMuZGlzcG9zZSgpOwogICAgICB0aGlzLmRpc3Bvc2FibGVzLmRpc3Bvc2UoKTsKICAgIH0KICB9XSk7CiAgcmV0dXJuIEZpbmRDb250cm9sbGVyOwp9KCk7CmZ1bmN0aW9uIGFzVHJlZU1vdXNlRXZlbnQoZXZlbnQpIHsKICB2YXIgdGFyZ2V0ID0gVHJlZU1vdXNlRXZlbnRUYXJnZXQuVW5rbm93bjsKICBpZiAoaGFzUGFyZW50V2l0aENsYXNzKGV2ZW50LmJyb3dzZXJFdmVudC50YXJnZXQsICdtb25hY28tdGwtdHdpc3RpZScsICdtb25hY28tdGwtcm93JykpIHsKICAgIHRhcmdldCA9IFRyZWVNb3VzZUV2ZW50VGFyZ2V0LlR3aXN0aWU7CiAgfSBlbHNlIGlmIChoYXNQYXJlbnRXaXRoQ2xhc3MoZXZlbnQuYnJvd3NlckV2ZW50LnRhcmdldCwgJ21vbmFjby10bC1jb250ZW50cycsICdtb25hY28tdGwtcm93JykpIHsKICAgIHRhcmdldCA9IFRyZWVNb3VzZUV2ZW50VGFyZ2V0LkVsZW1lbnQ7CiAgfSBlbHNlIGlmIChoYXNQYXJlbnRXaXRoQ2xhc3MoZXZlbnQuYnJvd3NlckV2ZW50LnRhcmdldCwgJ21vbmFjby10cmVlLXR5cGUtZmlsdGVyJywgJ21vbmFjby1saXN0JykpIHsKICAgIHRhcmdldCA9IFRyZWVNb3VzZUV2ZW50VGFyZ2V0LkZpbHRlcjsKICB9CiAgcmV0dXJuIHsKICAgIGJyb3dzZXJFdmVudDogZXZlbnQuYnJvd3NlckV2ZW50LAogICAgZWxlbWVudDogZXZlbnQuZWxlbWVudCA/IGV2ZW50LmVsZW1lbnQuZWxlbWVudCA6IG51bGwsCiAgICB0YXJnZXQ6IHRhcmdldAogIH07Cn0KZnVuY3Rpb24gZGZzKG5vZGUsIGZuKSB7CiAgZm4obm9kZSk7CiAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkgewogICAgcmV0dXJuIGRmcyhjaGlsZCwgZm4pOwogIH0pOwp9Ci8qKgogKiBUaGUgdHJhaXQgY29uY2VwdCBuZWVkcyB0byBleGlzdCBhdCB0aGUgdHJlZSBsZXZlbCwgYmVjYXVzZSBjb2xsYXBzZWQKICogdHJlZSBub2RlcyB3aWxsIG5vdCBiZSBrbm93biBieSB0aGUgbGlzdC4KICovCnZhciBUcmFpdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVHJhaXQoZ2V0Rmlyc3RWaWV3RWxlbWVudFdpdGhUcmFpdCwgaWRlbnRpdHlQcm92aWRlcikgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYWl0KTsKICAgIHRoaXMuZ2V0Rmlyc3RWaWV3RWxlbWVudFdpdGhUcmFpdCA9IGdldEZpcnN0Vmlld0VsZW1lbnRXaXRoVHJhaXQ7CiAgICB0aGlzLmlkZW50aXR5UHJvdmlkZXIgPSBpZGVudGl0eVByb3ZpZGVyOwogICAgdGhpcy5ub2RlcyA9IFtdOwogICAgdGhpcy5fb25EaWRDaGFuZ2UgPSBuZXcgRW1pdHRlcigpOwogICAgdGhpcy5vbkRpZENoYW5nZSA9IHRoaXMuX29uRGlkQ2hhbmdlLmV2ZW50OwogIH0KICBfY3JlYXRlQ2xhc3MoVHJhaXQsIFt7CiAgICBrZXk6ICJub2RlU2V0IiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICBpZiAoIXRoaXMuX25vZGVTZXQpIHsKICAgICAgICB0aGlzLl9ub2RlU2V0ID0gdGhpcy5jcmVhdGVOb2RlU2V0KCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuX25vZGVTZXQ7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXQobm9kZXMsIGJyb3dzZXJFdmVudCkgewogICAgICBpZiAoIShicm93c2VyRXZlbnQgPT09IG51bGwgfHwgYnJvd3NlckV2ZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBicm93c2VyRXZlbnQuX19mb3JjZUV2ZW50KSAmJiBlcXVhbHModGhpcy5ub2Rlcywgbm9kZXMpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuX3NldChub2RlcywgZmFsc2UsIGJyb3dzZXJFdmVudCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3NldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3NldChub2Rlcywgc2lsZW50LCBicm93c2VyRXZlbnQpIHsKICAgICAgdGhpcy5ub2RlcyA9IF90b0NvbnN1bWFibGVBcnJheShub2Rlcyk7CiAgICAgIHRoaXMuZWxlbWVudHMgPSB1bmRlZmluZWQ7CiAgICAgIHRoaXMuX25vZGVTZXQgPSB1bmRlZmluZWQ7CiAgICAgIGlmICghc2lsZW50KSB7CiAgICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICAgIHRoaXMuX29uRGlkQ2hhbmdlLmZpcmUoewogICAgICAgICAgZ2V0IGVsZW1lbnRzKCkgewogICAgICAgICAgICByZXR1cm4gdGhhdC5nZXQoKTsKICAgICAgICAgIH0sCiAgICAgICAgICBicm93c2VyRXZlbnQ6IGJyb3dzZXJFdmVudAogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICghdGhpcy5lbGVtZW50cykgewogICAgICAgIHRoaXMuZWxlbWVudHMgPSB0aGlzLm5vZGVzLm1hcChmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgcmV0dXJuIG5vZGUuZWxlbWVudDsKICAgICAgICB9KTsKICAgICAgfQogICAgICByZXR1cm4gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZWxlbWVudHMpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldE5vZGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXROb2RlcygpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZXM7CiAgICB9CiAgfSwgewogICAga2V5OiAiaGFzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYXMobm9kZSkgewogICAgICByZXR1cm4gdGhpcy5ub2RlU2V0Lmhhcyhub2RlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRpZE1vZGVsU3BsaWNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRpZE1vZGVsU3BsaWNlKF9yZWYyKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwogICAgICB2YXIgaW5zZXJ0ZWROb2RlcyA9IF9yZWYyLmluc2VydGVkTm9kZXMsCiAgICAgICAgZGVsZXRlZE5vZGVzID0gX3JlZjIuZGVsZXRlZE5vZGVzOwogICAgICBpZiAoIXRoaXMuaWRlbnRpdHlQcm92aWRlcikgewogICAgICAgIHZhciBzZXQgPSB0aGlzLmNyZWF0ZU5vZGVTZXQoKTsKICAgICAgICB2YXIgdmlzaXQgPSBmdW5jdGlvbiB2aXNpdChub2RlKSB7CiAgICAgICAgICByZXR1cm4gc2V0LmRlbGV0ZShub2RlKTsKICAgICAgICB9OwogICAgICAgIGRlbGV0ZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICByZXR1cm4gZGZzKG5vZGUsIHZpc2l0KTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLnNldChfdG9Db25zdW1hYmxlQXJyYXkoc2V0LnZhbHVlcygpKSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBkZWxldGVkTm9kZXNJZFNldCA9IG5ldyBTZXQoKTsKICAgICAgdmFyIGRlbGV0ZWROb2Rlc1Zpc2l0b3IgPSBmdW5jdGlvbiBkZWxldGVkTm9kZXNWaXNpdG9yKG5vZGUpIHsKICAgICAgICByZXR1cm4gZGVsZXRlZE5vZGVzSWRTZXQuYWRkKF90aGlzOC5pZGVudGl0eVByb3ZpZGVyLmdldElkKG5vZGUuZWxlbWVudCkudG9TdHJpbmcoKSk7CiAgICAgIH07CiAgICAgIGRlbGV0ZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIGRmcyhub2RlLCBkZWxldGVkTm9kZXNWaXNpdG9yKTsKICAgICAgfSk7CiAgICAgIHZhciBpbnNlcnRlZE5vZGVzTWFwID0gbmV3IE1hcCgpOwogICAgICB2YXIgaW5zZXJ0ZWROb2Rlc1Zpc2l0b3IgPSBmdW5jdGlvbiBpbnNlcnRlZE5vZGVzVmlzaXRvcihub2RlKSB7CiAgICAgICAgcmV0dXJuIGluc2VydGVkTm9kZXNNYXAuc2V0KF90aGlzOC5pZGVudGl0eVByb3ZpZGVyLmdldElkKG5vZGUuZWxlbWVudCkudG9TdHJpbmcoKSwgbm9kZSk7CiAgICAgIH07CiAgICAgIGluc2VydGVkTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBkZnMobm9kZSwgaW5zZXJ0ZWROb2Rlc1Zpc2l0b3IpOwogICAgICB9KTsKICAgICAgdmFyIG5vZGVzID0gW107CiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5ub2RlcyksCiAgICAgICAgX3N0ZXAyOwogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX25vZGUgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICB2YXIgaWQgPSB0aGlzLmlkZW50aXR5UHJvdmlkZXIuZ2V0SWQoX25vZGUuZWxlbWVudCkudG9TdHJpbmcoKTsKICAgICAgICAgIHZhciB3YXNEZWxldGVkID0gZGVsZXRlZE5vZGVzSWRTZXQuaGFzKGlkKTsKICAgICAgICAgIGlmICghd2FzRGVsZXRlZCkgewogICAgICAgICAgICBub2Rlcy5wdXNoKF9ub2RlKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBpbnNlcnRlZE5vZGUgPSBpbnNlcnRlZE5vZGVzTWFwLmdldChpZCk7CiAgICAgICAgICAgIGlmIChpbnNlcnRlZE5vZGUpIHsKICAgICAgICAgICAgICBub2Rlcy5wdXNoKGluc2VydGVkTm9kZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CiAgICAgIGlmICh0aGlzLm5vZGVzLmxlbmd0aCA+IDAgJiYgbm9kZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLmdldEZpcnN0Vmlld0VsZW1lbnRXaXRoVHJhaXQoKTsKICAgICAgICBpZiAobm9kZSkgewogICAgICAgICAgbm9kZXMucHVzaChub2RlKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5fc2V0KG5vZGVzLCB0cnVlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVOb2RlU2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVOb2RlU2V0KCkgewogICAgICB2YXIgc2V0ID0gbmV3IFNldCgpOwogICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMubm9kZXMpLAogICAgICAgIF9zdGVwMzsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykgewogICAgICAgICAgdmFyIG5vZGUgPSBfc3RlcDMudmFsdWU7CiAgICAgICAgICBzZXQuYWRkKG5vZGUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHNldDsKICAgIH0KICB9XSk7CiAgcmV0dXJuIFRyYWl0Owp9KCk7CnZhciBUcmVlTm9kZUxpc3RNb3VzZUNvbnRyb2xsZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Nb3VzZUNvbnRyb2xsZXIpIHsKICBfaW5oZXJpdHMoVHJlZU5vZGVMaXN0TW91c2VDb250cm9sbGVyLCBfTW91c2VDb250cm9sbGVyKTsKICB2YXIgX3N1cGVyNSA9IF9jcmVhdGVTdXBlcihUcmVlTm9kZUxpc3RNb3VzZUNvbnRyb2xsZXIpOwogIGZ1bmN0aW9uIFRyZWVOb2RlTGlzdE1vdXNlQ29udHJvbGxlcihsaXN0LCB0cmVlKSB7CiAgICB2YXIgX3RoaXM5OwogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyZWVOb2RlTGlzdE1vdXNlQ29udHJvbGxlcik7CiAgICBfdGhpczkgPSBfc3VwZXI1LmNhbGwodGhpcywgbGlzdCk7CiAgICBfdGhpczkudHJlZSA9IHRyZWU7CiAgICByZXR1cm4gX3RoaXM5OwogIH0KICBfY3JlYXRlQ2xhc3MoVHJlZU5vZGVMaXN0TW91c2VDb250cm9sbGVyLCBbewogICAga2V5OiAib25WaWV3UG9pbnRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25WaWV3UG9pbnRlcihlKSB7CiAgICAgIGlmIChpc0J1dHRvbihlLmJyb3dzZXJFdmVudC50YXJnZXQpIHx8IGlzSW5wdXRFbGVtZW50KGUuYnJvd3NlckV2ZW50LnRhcmdldCkgfHwgaXNNb25hY29FZGl0b3IoZS5icm93c2VyRXZlbnQudGFyZ2V0KSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgbm9kZSA9IGUuZWxlbWVudDsKICAgICAgaWYgKCFub2RlKSB7CiAgICAgICAgcmV0dXJuIF9nZXQoX2dldFByb3RvdHlwZU9mKFRyZWVOb2RlTGlzdE1vdXNlQ29udHJvbGxlci5wcm90b3R5cGUpLCAib25WaWV3UG9pbnRlciIsIHRoaXMpLmNhbGwodGhpcywgZSk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuaXNTZWxlY3Rpb25SYW5nZUNoYW5nZUV2ZW50KGUpIHx8IHRoaXMuaXNTZWxlY3Rpb25TaW5nbGVDaGFuZ2VFdmVudChlKSkgewogICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3RNb3VzZUNvbnRyb2xsZXIucHJvdG90eXBlKSwgIm9uVmlld1BvaW50ZXIiLCB0aGlzKS5jYWxsKHRoaXMsIGUpOwogICAgICB9CiAgICAgIHZhciB0YXJnZXQgPSBlLmJyb3dzZXJFdmVudC50YXJnZXQ7CiAgICAgIHZhciBvblR3aXN0aWUgPSB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtb25hY28tdGwtdHdpc3RpZScpIHx8IHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ21vbmFjby1pY29uLWxhYmVsJykgJiYgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZm9sZGVyLWljb24nKSAmJiBlLmJyb3dzZXJFdmVudC5vZmZzZXRYIDwgMTY7CiAgICAgIHZhciBleHBhbmRPbmx5T25Ud2lzdGllQ2xpY2sgPSBmYWxzZTsKICAgICAgaWYgKHR5cGVvZiB0aGlzLnRyZWUuZXhwYW5kT25seU9uVHdpc3RpZUNsaWNrID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgZXhwYW5kT25seU9uVHdpc3RpZUNsaWNrID0gdGhpcy50cmVlLmV4cGFuZE9ubHlPblR3aXN0aWVDbGljayhub2RlLmVsZW1lbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIGV4cGFuZE9ubHlPblR3aXN0aWVDbGljayA9ICEhdGhpcy50cmVlLmV4cGFuZE9ubHlPblR3aXN0aWVDbGljazsKICAgICAgfQogICAgICBpZiAoZXhwYW5kT25seU9uVHdpc3RpZUNsaWNrICYmICFvblR3aXN0aWUgJiYgZS5icm93c2VyRXZlbnQuZGV0YWlsICE9PSAyKSB7CiAgICAgICAgcmV0dXJuIF9nZXQoX2dldFByb3RvdHlwZU9mKFRyZWVOb2RlTGlzdE1vdXNlQ29udHJvbGxlci5wcm90b3R5cGUpLCAib25WaWV3UG9pbnRlciIsIHRoaXMpLmNhbGwodGhpcywgZSk7CiAgICAgIH0KICAgICAgaWYgKCF0aGlzLnRyZWUuZXhwYW5kT25Eb3VibGVDbGljayAmJiBlLmJyb3dzZXJFdmVudC5kZXRhaWwgPT09IDIpIHsKICAgICAgICByZXR1cm4gX2dldChfZ2V0UHJvdG90eXBlT2YoVHJlZU5vZGVMaXN0TW91c2VDb250cm9sbGVyLnByb3RvdHlwZSksICJvblZpZXdQb2ludGVyIiwgdGhpcykuY2FsbCh0aGlzLCBlKTsKICAgICAgfQogICAgICBpZiAobm9kZS5jb2xsYXBzaWJsZSkgewogICAgICAgIHZhciBtb2RlbCA9IHRoaXMudHJlZS5tb2RlbDsgLy8gaW50ZXJuYWwKICAgICAgICB2YXIgbG9jYXRpb24gPSBtb2RlbC5nZXROb2RlTG9jYXRpb24obm9kZSk7CiAgICAgICAgdmFyIHJlY3Vyc2l2ZSA9IGUuYnJvd3NlckV2ZW50LmFsdEtleTsKICAgICAgICB0aGlzLnRyZWUuc2V0Rm9jdXMoW2xvY2F0aW9uXSk7CiAgICAgICAgbW9kZWwuc2V0Q29sbGFwc2VkKGxvY2F0aW9uLCB1bmRlZmluZWQsIHJlY3Vyc2l2ZSk7CiAgICAgICAgaWYgKGV4cGFuZE9ubHlPblR3aXN0aWVDbGljayAmJiBvblR3aXN0aWUpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoVHJlZU5vZGVMaXN0TW91c2VDb250cm9sbGVyLnByb3RvdHlwZSksICJvblZpZXdQb2ludGVyIiwgdGhpcykuY2FsbCh0aGlzLCBlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRvdWJsZUNsaWNrIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRvdWJsZUNsaWNrKGUpIHsKICAgICAgdmFyIG9uVHdpc3RpZSA9IGUuYnJvd3NlckV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ21vbmFjby10bC10d2lzdGllJyk7CiAgICAgIGlmIChvblR3aXN0aWUgfHwgIXRoaXMudHJlZS5leHBhbmRPbkRvdWJsZUNsaWNrKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIF9nZXQoX2dldFByb3RvdHlwZU9mKFRyZWVOb2RlTGlzdE1vdXNlQ29udHJvbGxlci5wcm90b3R5cGUpLCAib25Eb3VibGVDbGljayIsIHRoaXMpLmNhbGwodGhpcywgZSk7CiAgICB9CiAgfV0pOwogIHJldHVybiBUcmVlTm9kZUxpc3RNb3VzZUNvbnRyb2xsZXI7Cn0oTW91c2VDb250cm9sbGVyKTsKLyoqCiAqIFdlIHVzZSB0aGlzIExpc3Qgc3ViY2xhc3MgdG8gcmVzdG9yZSBzZWxlY3Rpb24gYW5kIGZvY3VzIGFzIG5vZGVzCiAqIGdldCByZW5kZXJlZCBpbiB0aGUgbGlzdCwgcG9zc2libHkgZHVlIHRvIGEgbm9kZSBleHBhbmQoKSBjYWxsLgogKi8KdmFyIFRyZWVOb2RlTGlzdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0xpc3QpIHsKICBfaW5oZXJpdHMoVHJlZU5vZGVMaXN0LCBfTGlzdCk7CiAgdmFyIF9zdXBlcjYgPSBfY3JlYXRlU3VwZXIoVHJlZU5vZGVMaXN0KTsKICBmdW5jdGlvbiBUcmVlTm9kZUxpc3QodXNlciwgY29udGFpbmVyLCB2aXJ0dWFsRGVsZWdhdGUsIHJlbmRlcmVycywgZm9jdXNUcmFpdCwgc2VsZWN0aW9uVHJhaXQsIGFuY2hvclRyYWl0LCBvcHRpb25zKSB7CiAgICB2YXIgX3RoaXMxMDsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUcmVlTm9kZUxpc3QpOwogICAgX3RoaXMxMCA9IF9zdXBlcjYuY2FsbCh0aGlzLCB1c2VyLCBjb250YWluZXIsIHZpcnR1YWxEZWxlZ2F0ZSwgcmVuZGVyZXJzLCBvcHRpb25zKTsKICAgIF90aGlzMTAuZm9jdXNUcmFpdCA9IGZvY3VzVHJhaXQ7CiAgICBfdGhpczEwLnNlbGVjdGlvblRyYWl0ID0gc2VsZWN0aW9uVHJhaXQ7CiAgICBfdGhpczEwLmFuY2hvclRyYWl0ID0gYW5jaG9yVHJhaXQ7CiAgICByZXR1cm4gX3RoaXMxMDsKICB9CiAgX2NyZWF0ZUNsYXNzKFRyZWVOb2RlTGlzdCwgW3sKICAgIGtleTogImNyZWF0ZU1vdXNlQ29udHJvbGxlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlTW91c2VDb250cm9sbGVyKG9wdGlvbnMpIHsKICAgICAgcmV0dXJuIG5ldyBUcmVlTm9kZUxpc3RNb3VzZUNvbnRyb2xsZXIodGhpcywgb3B0aW9ucy50cmVlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzcGxpY2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpIHsKICAgICAgdmFyIF90aGlzMTEgPSB0aGlzOwogICAgICB2YXIgZWxlbWVudHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IFtdOwogICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3QucHJvdG90eXBlKSwgInNwbGljZSIsIHRoaXMpLmNhbGwodGhpcywgc3RhcnQsIGRlbGV0ZUNvdW50LCBlbGVtZW50cyk7CiAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIGFkZGl0aW9uYWxGb2N1cyA9IFtdOwogICAgICB2YXIgYWRkaXRpb25hbFNlbGVjdGlvbiA9IFtdOwogICAgICB2YXIgYW5jaG9yOwogICAgICBlbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlLCBpbmRleCkgewogICAgICAgIGlmIChfdGhpczExLmZvY3VzVHJhaXQuaGFzKG5vZGUpKSB7CiAgICAgICAgICBhZGRpdGlvbmFsRm9jdXMucHVzaChzdGFydCArIGluZGV4KTsKICAgICAgICB9CiAgICAgICAgaWYgKF90aGlzMTEuc2VsZWN0aW9uVHJhaXQuaGFzKG5vZGUpKSB7CiAgICAgICAgICBhZGRpdGlvbmFsU2VsZWN0aW9uLnB1c2goc3RhcnQgKyBpbmRleCk7CiAgICAgICAgfQogICAgICAgIGlmIChfdGhpczExLmFuY2hvclRyYWl0Lmhhcyhub2RlKSkgewogICAgICAgICAgYW5jaG9yID0gc3RhcnQgKyBpbmRleDsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBpZiAoYWRkaXRpb25hbEZvY3VzLmxlbmd0aCA+IDApIHsKICAgICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3QucHJvdG90eXBlKSwgInNldEZvY3VzIiwgdGhpcykuY2FsbCh0aGlzLCBkaXN0aW5jdChbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF9nZXQoX2dldFByb3RvdHlwZU9mKFRyZWVOb2RlTGlzdC5wcm90b3R5cGUpLCAiZ2V0Rm9jdXMiLCB0aGlzKS5jYWxsKHRoaXMpKSwgYWRkaXRpb25hbEZvY3VzKSkpOwogICAgICB9CiAgICAgIGlmIChhZGRpdGlvbmFsU2VsZWN0aW9uLmxlbmd0aCA+IDApIHsKICAgICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3QucHJvdG90eXBlKSwgInNldFNlbGVjdGlvbiIsIHRoaXMpLmNhbGwodGhpcywgZGlzdGluY3QoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3QucHJvdG90eXBlKSwgImdldFNlbGVjdGlvbiIsIHRoaXMpLmNhbGwodGhpcykpLCBhZGRpdGlvbmFsU2VsZWN0aW9uKSkpOwogICAgICB9CiAgICAgIGlmICh0eXBlb2YgYW5jaG9yID09PSAnbnVtYmVyJykgewogICAgICAgIF9nZXQoX2dldFByb3RvdHlwZU9mKFRyZWVOb2RlTGlzdC5wcm90b3R5cGUpLCAic2V0QW5jaG9yIiwgdGhpcykuY2FsbCh0aGlzLCBhbmNob3IpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0Rm9jdXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldEZvY3VzKGluZGV4ZXMsIGJyb3dzZXJFdmVudCkgewogICAgICB2YXIgX3RoaXMxMiA9IHRoaXM7CiAgICAgIHZhciBmcm9tQVBJID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTsKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoVHJlZU5vZGVMaXN0LnByb3RvdHlwZSksICJzZXRGb2N1cyIsIHRoaXMpLmNhbGwodGhpcywgaW5kZXhlcywgYnJvd3NlckV2ZW50KTsKICAgICAgaWYgKCFmcm9tQVBJKSB7CiAgICAgICAgdGhpcy5mb2N1c1RyYWl0LnNldChpbmRleGVzLm1hcChmdW5jdGlvbiAoaSkgewogICAgICAgICAgcmV0dXJuIF90aGlzMTIuZWxlbWVudChpKTsKICAgICAgICB9KSwgYnJvd3NlckV2ZW50KTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInNldFNlbGVjdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0aW9uKGluZGV4ZXMsIGJyb3dzZXJFdmVudCkgewogICAgICB2YXIgX3RoaXMxMyA9IHRoaXM7CiAgICAgIHZhciBmcm9tQVBJID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTsKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoVHJlZU5vZGVMaXN0LnByb3RvdHlwZSksICJzZXRTZWxlY3Rpb24iLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4ZXMsIGJyb3dzZXJFdmVudCk7CiAgICAgIGlmICghZnJvbUFQSSkgewogICAgICAgIHRoaXMuc2VsZWN0aW9uVHJhaXQuc2V0KGluZGV4ZXMubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMxMy5lbGVtZW50KGkpOwogICAgICAgIH0pLCBicm93c2VyRXZlbnQpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0QW5jaG9yIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRBbmNob3IoaW5kZXgpIHsKICAgICAgdmFyIGZyb21BUEkgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihUcmVlTm9kZUxpc3QucHJvdG90eXBlKSwgInNldEFuY2hvciIsIHRoaXMpLmNhbGwodGhpcywgaW5kZXgpOwogICAgICBpZiAoIWZyb21BUEkpIHsKICAgICAgICBpZiAodHlwZW9mIGluZGV4ID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgdGhpcy5hbmNob3JUcmFpdC5zZXQoW10pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmFuY2hvclRyYWl0LnNldChbdGhpcy5lbGVtZW50KGluZGV4KV0pOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH1dKTsKICByZXR1cm4gVHJlZU5vZGVMaXN0Owp9KExpc3QpOwpleHBvcnQgdmFyIEFic3RyYWN0VHJlZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQWJzdHJhY3RUcmVlKF91c2VyLCBjb250YWluZXIsIGRlbGVnYXRlLCByZW5kZXJlcnMpIHsKICAgIHZhciBfdGhpczE0ID0gdGhpczsKICAgIHZhciBfb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDoge307CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWJzdHJhY3RUcmVlKTsKICAgIHZhciBfYTsKICAgIHRoaXMuX3VzZXIgPSBfdXNlcjsKICAgIHRoaXMuX29wdGlvbnMgPSBfb3B0aW9uczsKICAgIHRoaXMuZXZlbnRCdWZmZXJlciA9IG5ldyBFdmVudEJ1ZmZlcmVyKCk7CiAgICB0aGlzLm9uRGlkQ2hhbmdlRmluZE9wZW5TdGF0ZSA9IEV2ZW50Lk5vbmU7CiAgICB0aGlzLmRpc3Bvc2FibGVzID0gbmV3IERpc3Bvc2FibGVTdG9yZSgpOwogICAgdGhpcy5fb25XaWxsUmVmaWx0ZXIgPSBuZXcgRW1pdHRlcigpOwogICAgdGhpcy5vbldpbGxSZWZpbHRlciA9IHRoaXMuX29uV2lsbFJlZmlsdGVyLmV2ZW50OwogICAgdGhpcy5fb25EaWRVcGRhdGVPcHRpb25zID0gbmV3IEVtaXR0ZXIoKTsKICAgIHZhciB0cmVlRGVsZWdhdGUgPSBuZXcgQ29tcG9zZWRUcmVlRGVsZWdhdGUoZGVsZWdhdGUpOwogICAgdmFyIG9uRGlkQ2hhbmdlQ29sbGFwc2VTdGF0ZVJlbGF5ID0gbmV3IFJlbGF5KCk7CiAgICB2YXIgb25EaWRDaGFuZ2VBY3RpdmVOb2RlcyA9IG5ldyBSZWxheSgpOwogICAgdmFyIGFjdGl2ZU5vZGVzID0gdGhpcy5kaXNwb3NhYmxlcy5hZGQobmV3IEV2ZW50Q29sbGVjdGlvbihvbkRpZENoYW5nZUFjdGl2ZU5vZGVzLmV2ZW50KSk7CiAgICB0aGlzLnJlbmRlcmVycyA9IHJlbmRlcmVycy5tYXAoZnVuY3Rpb24gKHIpIHsKICAgICAgcmV0dXJuIG5ldyBUcmVlUmVuZGVyZXIociwgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczE0Lm1vZGVsOwogICAgICB9LCBvbkRpZENoYW5nZUNvbGxhcHNlU3RhdGVSZWxheS5ldmVudCwgYWN0aXZlTm9kZXMsIF9vcHRpb25zKTsKICAgIH0pOwogICAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnJlbmRlcmVycyksCiAgICAgIF9zdGVwNDsKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIHIgPSBfc3RlcDQudmFsdWU7CiAgICAgICAgdGhpcy5kaXNwb3NhYmxlcy5hZGQocik7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvcjQuZigpOwogICAgfQogICAgdmFyIGZpbHRlcjsKICAgIGlmIChfb3B0aW9ucy5rZXlib2FyZE5hdmlnYXRpb25MYWJlbFByb3ZpZGVyKSB7CiAgICAgIGZpbHRlciA9IG5ldyBGaW5kRmlsdGVyKHRoaXMsIF9vcHRpb25zLmtleWJvYXJkTmF2aWdhdGlvbkxhYmVsUHJvdmlkZXIsIF9vcHRpb25zLmZpbHRlcik7CiAgICAgIF9vcHRpb25zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBfb3B0aW9ucyksIHsKICAgICAgICBmaWx0ZXI6IGZpbHRlcgogICAgICB9KTsgLy8gVE9ETyBuZWVkIHR5cGVzY3JpcHQgaGVscCBoZXJlCiAgICAgIHRoaXMuZGlzcG9zYWJsZXMuYWRkKGZpbHRlcik7CiAgICB9CiAgICB0aGlzLmZvY3VzID0gbmV3IFRyYWl0KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF90aGlzMTQudmlldy5nZXRGb2N1c2VkRWxlbWVudHMoKVswXTsKICAgIH0sIF9vcHRpb25zLmlkZW50aXR5UHJvdmlkZXIpOwogICAgdGhpcy5zZWxlY3Rpb24gPSBuZXcgVHJhaXQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXMxNC52aWV3LmdldFNlbGVjdGVkRWxlbWVudHMoKVswXTsKICAgIH0sIF9vcHRpb25zLmlkZW50aXR5UHJvdmlkZXIpOwogICAgdGhpcy5hbmNob3IgPSBuZXcgVHJhaXQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXMxNC52aWV3LmdldEFuY2hvckVsZW1lbnQoKTsKICAgIH0sIF9vcHRpb25zLmlkZW50aXR5UHJvdmlkZXIpOwogICAgdGhpcy52aWV3ID0gbmV3IFRyZWVOb2RlTGlzdChfdXNlciwgY29udGFpbmVyLCB0cmVlRGVsZWdhdGUsIHRoaXMucmVuZGVyZXJzLCB0aGlzLmZvY3VzLCB0aGlzLnNlbGVjdGlvbiwgdGhpcy5hbmNob3IsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYXNMaXN0T3B0aW9ucyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfdGhpczE0Lm1vZGVsOwogICAgfSwgX29wdGlvbnMpKSwgewogICAgICB0cmVlOiB0aGlzCiAgICB9KSk7CiAgICB0aGlzLm1vZGVsID0gdGhpcy5jcmVhdGVNb2RlbChfdXNlciwgdGhpcy52aWV3LCBfb3B0aW9ucyk7CiAgICBvbkRpZENoYW5nZUNvbGxhcHNlU3RhdGVSZWxheS5pbnB1dCA9IHRoaXMubW9kZWwub25EaWRDaGFuZ2VDb2xsYXBzZVN0YXRlOwogICAgdmFyIG9uRGlkTW9kZWxTcGxpY2UgPSBFdmVudC5mb3JFYWNoKHRoaXMubW9kZWwub25EaWRTcGxpY2UsIGZ1bmN0aW9uIChlKSB7CiAgICAgIF90aGlzMTQuZXZlbnRCdWZmZXJlci5idWZmZXJFdmVudHMoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMTQuZm9jdXMub25EaWRNb2RlbFNwbGljZShlKTsKICAgICAgICBfdGhpczE0LnNlbGVjdGlvbi5vbkRpZE1vZGVsU3BsaWNlKGUpOwogICAgICB9KTsKICAgIH0sIHRoaXMuZGlzcG9zYWJsZXMpOwogICAgLy8gTWFrZSBzdXJlIHRoZSBgZm9yRWFjaGAgYWx3YXlzIHJ1bnMKICAgIG9uRGlkTW9kZWxTcGxpY2UoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0sIG51bGwsIHRoaXMuZGlzcG9zYWJsZXMpOwogICAgLy8gQWN0aXZlIG5vZGVzIGNhbiBjaGFuZ2Ugd2hlbiB0aGUgbW9kZWwgY2hhbmdlcyBvciB3aGVuIGZvY3VzIG9yIHNlbGVjdGlvbiBjaGFuZ2UuCiAgICAvLyBXZSBkZWJvdW5jZSBpdCB3aXRoIDAgZGVsYXkgc2luY2UgdGhlc2UgZXZlbnRzIG1heSBmaXJlIGluIHRoZSBzYW1lIHN0YWNrIGFuZCB3ZSBvbmx5CiAgICAvLyB3YW50IHRvIHJ1biB0aGlzIG9uY2UuIEl0IGFsc28gZG9lc24ndCBtYXR0ZXIgaWYgaXQgcnVucyBvbiB0aGUgbmV4dCB0aWNrIHNpbmNlIGl0J3Mgb25seQogICAgLy8gYSBuaWNlIHRvIGhhdmUgVUkgZmVhdHVyZS4KICAgIG9uRGlkQ2hhbmdlQWN0aXZlTm9kZXMuaW5wdXQgPSBFdmVudC5jaGFpbihFdmVudC5hbnkob25EaWRNb2RlbFNwbGljZSwgdGhpcy5mb2N1cy5vbkRpZENoYW5nZSwgdGhpcy5zZWxlY3Rpb24ub25EaWRDaGFuZ2UpKS5kZWJvdW5jZShmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfSwgMCkubWFwKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHNldCA9IG5ldyBTZXQoKTsKICAgICAgdmFyIF9pdGVyYXRvcjUgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpczE0LmZvY3VzLmdldE5vZGVzKCkpLAogICAgICAgIF9zdGVwNTsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjUucygpOyAhKF9zdGVwNSA9IF9pdGVyYXRvcjUubigpKS5kb25lOykgewogICAgICAgICAgdmFyIG5vZGUgPSBfc3RlcDUudmFsdWU7CiAgICAgICAgICBzZXQuYWRkKG5vZGUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yNS5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yNS5mKCk7CiAgICAgIH0KICAgICAgdmFyIF9pdGVyYXRvcjYgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpczE0LnNlbGVjdGlvbi5nZXROb2RlcygpKSwKICAgICAgICBfc3RlcDY7CiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3I2LnMoKTsgIShfc3RlcDYgPSBfaXRlcmF0b3I2Lm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBfbm9kZTIgPSBfc3RlcDYudmFsdWU7CiAgICAgICAgICBzZXQuYWRkKF9ub2RlMik7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I2LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I2LmYoKTsKICAgICAgfQogICAgICByZXR1cm4gX3RvQ29uc3VtYWJsZUFycmF5KHNldC52YWx1ZXMoKSk7CiAgICB9KS5ldmVudDsKICAgIGlmIChfb3B0aW9ucy5rZXlib2FyZFN1cHBvcnQgIT09IGZhbHNlKSB7CiAgICAgIHZhciBvbktleURvd24gPSBFdmVudC5jaGFpbih0aGlzLnZpZXcub25LZXlEb3duKS5maWx0ZXIoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gIWlzSW5wdXRFbGVtZW50KGUudGFyZ2V0KTsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIG5ldyBTdGFuZGFyZEtleWJvYXJkRXZlbnQoZSk7CiAgICAgIH0pOwogICAgICBvbktleURvd24uZmlsdGVyKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUua2V5Q29kZSA9PT0gMTU7CiAgICAgIH0gLyogS2V5Q29kZS5MZWZ0QXJyb3cgKi8pLm9uKHRoaXMub25MZWZ0QXJyb3csIHRoaXMsIHRoaXMuZGlzcG9zYWJsZXMpOwogICAgICBvbktleURvd24uZmlsdGVyKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUua2V5Q29kZSA9PT0gMTc7CiAgICAgIH0gLyogS2V5Q29kZS5SaWdodEFycm93ICovKS5vbih0aGlzLm9uUmlnaHRBcnJvdywgdGhpcywgdGhpcy5kaXNwb3NhYmxlcyk7CiAgICAgIG9uS2V5RG93bi5maWx0ZXIoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5rZXlDb2RlID09PSAxMDsKICAgICAgfSAvKiBLZXlDb2RlLlNwYWNlICovKS5vbih0aGlzLm9uU3BhY2UsIHRoaXMsIHRoaXMuZGlzcG9zYWJsZXMpOwogICAgfQogICAgaWYgKCgoX2EgPSBfb3B0aW9ucy5maW5kV2lkZ2V0RW5hYmxlZCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdHJ1ZSkgJiYgX29wdGlvbnMua2V5Ym9hcmROYXZpZ2F0aW9uTGFiZWxQcm92aWRlciAmJiBfb3B0aW9ucy5jb250ZXh0Vmlld1Byb3ZpZGVyKSB7CiAgICAgIHRoaXMuZmluZENvbnRyb2xsZXIgPSBuZXcgRmluZENvbnRyb2xsZXIodGhpcywgdGhpcy5tb2RlbCwgdGhpcy52aWV3LCBmaWx0ZXIsIF9vcHRpb25zLmNvbnRleHRWaWV3UHJvdmlkZXIpOwogICAgICB0aGlzLmZvY3VzTmF2aWdhdGlvbkZpbHRlciA9IGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMTQuZmluZENvbnRyb2xsZXIuc2hvdWxkQWxsb3dGb2N1cyhub2RlKTsKICAgICAgfTsKICAgICAgdGhpcy5vbkRpZENoYW5nZUZpbmRPcGVuU3RhdGUgPSB0aGlzLmZpbmRDb250cm9sbGVyLm9uRGlkQ2hhbmdlT3BlblN0YXRlOwogICAgICB0aGlzLmRpc3Bvc2FibGVzLmFkZCh0aGlzLmZpbmRDb250cm9sbGVyKTsKICAgICAgdGhpcy5vbkRpZENoYW5nZUZpbmRNb2RlID0gdGhpcy5maW5kQ29udHJvbGxlci5vbkRpZENoYW5nZU1vZGU7CiAgICB9IGVsc2UgewogICAgICB0aGlzLm9uRGlkQ2hhbmdlRmluZE1vZGUgPSBFdmVudC5Ob25lOwogICAgfQogICAgdGhpcy5zdHlsZUVsZW1lbnQgPSBjcmVhdGVTdHlsZVNoZWV0KHRoaXMudmlldy5nZXRIVE1MRWxlbWVudCgpKTsKICAgIHRoaXMuZ2V0SFRNTEVsZW1lbnQoKS5jbGFzc0xpc3QudG9nZ2xlKCdhbHdheXMnLCB0aGlzLl9vcHRpb25zLnJlbmRlckluZGVudEd1aWRlcyA9PT0gUmVuZGVySW5kZW50R3VpZGVzLkFsd2F5cyk7CiAgfQogIF9jcmVhdGVDbGFzcyhBYnN0cmFjdFRyZWUsIFt7CiAgICBrZXk6ICJvbkRpZENoYW5nZUZvY3VzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5ldmVudEJ1ZmZlcmVyLndyYXBFdmVudCh0aGlzLmZvY3VzLm9uRGlkQ2hhbmdlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRpZENoYW5nZVNlbGVjdGlvbiIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZXZlbnRCdWZmZXJlci53cmFwRXZlbnQodGhpcy5zZWxlY3Rpb24ub25EaWRDaGFuZ2UpOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uTW91c2VEYmxDbGljayIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIEV2ZW50LmZpbHRlcihFdmVudC5tYXAodGhpcy52aWV3Lm9uTW91c2VEYmxDbGljaywgYXNUcmVlTW91c2VFdmVudCksIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUudGFyZ2V0ICE9PSBUcmVlTW91c2VFdmVudFRhcmdldC5GaWx0ZXI7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uUG9pbnRlciIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIEV2ZW50Lm1hcCh0aGlzLnZpZXcub25Qb2ludGVyLCBhc1RyZWVNb3VzZUV2ZW50KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRpZEZvY3VzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy52aWV3Lm9uRGlkRm9jdXM7CiAgICB9CiAgfSwgewogICAga2V5OiAib25EaWRDaGFuZ2VNb2RlbCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIEV2ZW50LnNpZ25hbCh0aGlzLm1vZGVsLm9uRGlkU3BsaWNlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkRpZENoYW5nZUNvbGxhcHNlU3RhdGUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGVsLm9uRGlkQ2hhbmdlQ29sbGFwc2VTdGF0ZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJmaW5kTW9kZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF9hLCBfYjsKICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMuZmluZENvbnRyb2xsZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5tb2RlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBUcmVlRmluZE1vZGUuSGlnaGxpZ2h0OwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KGZpbmRNb2RlKSB7CiAgICAgIGlmICh0aGlzLmZpbmRDb250cm9sbGVyKSB7CiAgICAgICAgdGhpcy5maW5kQ29udHJvbGxlci5tb2RlID0gZmluZE1vZGU7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJleHBhbmRPbkRvdWJsZUNsaWNrIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdHlwZW9mIHRoaXMuX29wdGlvbnMuZXhwYW5kT25Eb3VibGVDbGljayA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogdGhpcy5fb3B0aW9ucy5leHBhbmRPbkRvdWJsZUNsaWNrOwogICAgfQogIH0sIHsKICAgIGtleTogImV4cGFuZE9ubHlPblR3aXN0aWVDbGljayIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLl9vcHRpb25zLmV4cGFuZE9ubHlPblR3aXN0aWVDbGljayA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogdGhpcy5fb3B0aW9ucy5leHBhbmRPbmx5T25Ud2lzdGllQ2xpY2s7CiAgICB9CiAgfSwgewogICAga2V5OiAib25EaWREaXNwb3NlIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy52aWV3Lm9uRGlkRGlzcG9zZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVPcHRpb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVPcHRpb25zKCkgewogICAgICB2YXIgb3B0aW9uc1VwZGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIHRoaXMuX29wdGlvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuX29wdGlvbnMpLCBvcHRpb25zVXBkYXRlKTsKICAgICAgdmFyIF9pdGVyYXRvcjcgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnJlbmRlcmVycyksCiAgICAgICAgX3N0ZXA3OwogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yNy5zKCk7ICEoX3N0ZXA3ID0gX2l0ZXJhdG9yNy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgcmVuZGVyZXIgPSBfc3RlcDcudmFsdWU7CiAgICAgICAgICByZW5kZXJlci51cGRhdGVPcHRpb25zKG9wdGlvbnNVcGRhdGUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yNy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yNy5mKCk7CiAgICAgIH0KICAgICAgdGhpcy52aWV3LnVwZGF0ZU9wdGlvbnModGhpcy5fb3B0aW9ucyk7CiAgICAgIHRoaXMuX29uRGlkVXBkYXRlT3B0aW9ucy5maXJlKHRoaXMuX29wdGlvbnMpOwogICAgICB0aGlzLmdldEhUTUxFbGVtZW50KCkuY2xhc3NMaXN0LnRvZ2dsZSgnYWx3YXlzJywgdGhpcy5fb3B0aW9ucy5yZW5kZXJJbmRlbnRHdWlkZXMgPT09IFJlbmRlckluZGVudEd1aWRlcy5BbHdheXMpOwogICAgfQogIH0sIHsKICAgIGtleTogIm9wdGlvbnMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLl9vcHRpb25zOwogICAgfQogICAgLy8gV2lkZ2V0CiAgfSwgewogICAga2V5OiAiZ2V0SFRNTEVsZW1lbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEhUTUxFbGVtZW50KCkgewogICAgICByZXR1cm4gdGhpcy52aWV3LmdldEhUTUxFbGVtZW50KCk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2Nyb2xsVG9wIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy52aWV3LnNjcm9sbFRvcDsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChzY3JvbGxUb3ApIHsKICAgICAgdGhpcy52aWV3LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkb21Gb2N1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZG9tRm9jdXMoKSB7CiAgICAgIHRoaXMudmlldy5kb21Gb2N1cygpOwogICAgfQogIH0sIHsKICAgIGtleTogImxheW91dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbGF5b3V0KGhlaWdodCwgd2lkdGgpIHsKICAgICAgdmFyIF9hOwogICAgICB0aGlzLnZpZXcubGF5b3V0KGhlaWdodCwgd2lkdGgpOwogICAgICBpZiAoaXNOdW1iZXIod2lkdGgpKSB7CiAgICAgICAgKF9hID0gdGhpcy5maW5kQ29udHJvbGxlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxheW91dCh3aWR0aCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdHlsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3R5bGUoc3R5bGVzKSB7CiAgICAgIHZhciBfYTsKICAgICAgdmFyIHN1ZmZpeCA9ICIuIi5jb25jYXQodGhpcy52aWV3LmRvbUlkKTsKICAgICAgdmFyIGNvbnRlbnQgPSBbXTsKICAgICAgaWYgKHN0eWxlcy50cmVlSW5kZW50R3VpZGVzU3Ryb2tlKSB7CiAgICAgICAgY29udGVudC5wdXNoKCIubW9uYWNvLWxpc3QiLmNvbmNhdChzdWZmaXgsICI6aG92ZXIgLm1vbmFjby10bC1pbmRlbnQgPiAuaW5kZW50LWd1aWRlLCAubW9uYWNvLWxpc3QiKS5jb25jYXQoc3VmZml4LCAiLmFsd2F5cyAubW9uYWNvLXRsLWluZGVudCA+IC5pbmRlbnQtZ3VpZGUgIHsgYm9yZGVyLWNvbG9yOiAiKS5jb25jYXQoc3R5bGVzLnRyZWVJbmRlbnRHdWlkZXNTdHJva2UudHJhbnNwYXJlbnQoMC40KSwgIjsgfSIpKTsKICAgICAgICBjb250ZW50LnB1c2goIi5tb25hY28tbGlzdCIuY29uY2F0KHN1ZmZpeCwgIiAubW9uYWNvLXRsLWluZGVudCA+IC5pbmRlbnQtZ3VpZGUuYWN0aXZlIHsgYm9yZGVyLWNvbG9yOiAiKS5jb25jYXQoc3R5bGVzLnRyZWVJbmRlbnRHdWlkZXNTdHJva2UsICI7IH0iKSk7CiAgICAgIH0KICAgICAgdGhpcy5zdHlsZUVsZW1lbnQudGV4dENvbnRlbnQgPSBjb250ZW50LmpvaW4oJ1xuJyk7CiAgICAgIChfYSA9IHRoaXMuZmluZENvbnRyb2xsZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zdHlsZShzdHlsZXMpOwogICAgICB0aGlzLnZpZXcuc3R5bGUoc3R5bGVzKTsKICAgIH0KICAgIC8vIFRyZWUgbmF2aWdhdGlvbgogIH0sIHsKICAgIGtleTogImdldFBhcmVudEVsZW1lbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBhcmVudEVsZW1lbnQobG9jYXRpb24pIHsKICAgICAgdmFyIHBhcmVudFJlZiA9IHRoaXMubW9kZWwuZ2V0UGFyZW50Tm9kZUxvY2F0aW9uKGxvY2F0aW9uKTsKICAgICAgdmFyIHBhcmVudE5vZGUgPSB0aGlzLm1vZGVsLmdldE5vZGUocGFyZW50UmVmKTsKICAgICAgcmV0dXJuIHBhcmVudE5vZGUuZWxlbWVudDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRGaXJzdEVsZW1lbnRDaGlsZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Rmlyc3RFbGVtZW50Q2hpbGQobG9jYXRpb24pIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZWwuZ2V0Rmlyc3RFbGVtZW50Q2hpbGQobG9jYXRpb24pOwogICAgfQogICAgLy8gVHJlZQogIH0sIHsKICAgIGtleTogImdldE5vZGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE5vZGUobG9jYXRpb24pIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZWwuZ2V0Tm9kZShsb2NhdGlvbik7CiAgICB9CiAgfSwgewogICAga2V5OiAiY29sbGFwc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbGxhcHNlKGxvY2F0aW9uKSB7CiAgICAgIHZhciByZWN1cnNpdmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgICByZXR1cm4gdGhpcy5tb2RlbC5zZXRDb2xsYXBzZWQobG9jYXRpb24sIHRydWUsIHJlY3Vyc2l2ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZXhwYW5kIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBleHBhbmQobG9jYXRpb24pIHsKICAgICAgdmFyIHJlY3Vyc2l2ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7CiAgICAgIHJldHVybiB0aGlzLm1vZGVsLnNldENvbGxhcHNlZChsb2NhdGlvbiwgZmFsc2UsIHJlY3Vyc2l2ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNDb2xsYXBzaWJsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNDb2xsYXBzaWJsZShsb2NhdGlvbikgewogICAgICByZXR1cm4gdGhpcy5tb2RlbC5pc0NvbGxhcHNpYmxlKGxvY2F0aW9uKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRDb2xsYXBzaWJsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Q29sbGFwc2libGUobG9jYXRpb24sIGNvbGxhcHNpYmxlKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGVsLnNldENvbGxhcHNpYmxlKGxvY2F0aW9uLCBjb2xsYXBzaWJsZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNDb2xsYXBzZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzQ29sbGFwc2VkKGxvY2F0aW9uKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGVsLmlzQ29sbGFwc2VkKGxvY2F0aW9uKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWZpbHRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVmaWx0ZXIoKSB7CiAgICAgIHRoaXMuX29uV2lsbFJlZmlsdGVyLmZpcmUodW5kZWZpbmVkKTsKICAgICAgdGhpcy5tb2RlbC5yZWZpbHRlcigpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFNlbGVjdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0aW9uKGVsZW1lbnRzLCBicm93c2VyRXZlbnQpIHsKICAgICAgdmFyIF90aGlzMTUgPSB0aGlzOwogICAgICB2YXIgbm9kZXMgPSBlbGVtZW50cy5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gX3RoaXMxNS5tb2RlbC5nZXROb2RlKGUpOwogICAgICB9KTsKICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0KG5vZGVzLCBicm93c2VyRXZlbnQpOwogICAgICB2YXIgaW5kZXhlcyA9IGVsZW1lbnRzLm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBfdGhpczE1Lm1vZGVsLmdldExpc3RJbmRleChlKTsKICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIGkgPiAtMTsKICAgICAgfSk7CiAgICAgIHRoaXMudmlldy5zZXRTZWxlY3Rpb24oaW5kZXhlcywgYnJvd3NlckV2ZW50LCB0cnVlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRTZWxlY3Rpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNlbGVjdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uLmdldCgpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldEZvY3VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRGb2N1cyhlbGVtZW50cywgYnJvd3NlckV2ZW50KSB7CiAgICAgIHZhciBfdGhpczE2ID0gdGhpczsKICAgICAgdmFyIG5vZGVzID0gZWxlbWVudHMubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMTYubW9kZWwuZ2V0Tm9kZShlKTsKICAgICAgfSk7CiAgICAgIHRoaXMuZm9jdXMuc2V0KG5vZGVzLCBicm93c2VyRXZlbnQpOwogICAgICB2YXIgaW5kZXhlcyA9IGVsZW1lbnRzLm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBfdGhpczE2Lm1vZGVsLmdldExpc3RJbmRleChlKTsKICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIGkgPiAtMTsKICAgICAgfSk7CiAgICAgIHRoaXMudmlldy5zZXRGb2N1cyhpbmRleGVzLCBicm93c2VyRXZlbnQsIHRydWUpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEZvY3VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGb2N1cygpIHsKICAgICAgcmV0dXJuIHRoaXMuZm9jdXMuZ2V0KCk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmV2ZWFsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXZlYWwobG9jYXRpb24sIHJlbGF0aXZlVG9wKSB7CiAgICAgIHRoaXMubW9kZWwuZXhwYW5kVG8obG9jYXRpb24pOwogICAgICB2YXIgaW5kZXggPSB0aGlzLm1vZGVsLmdldExpc3RJbmRleChsb2NhdGlvbik7CiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy52aWV3LnJldmVhbChpbmRleCwgcmVsYXRpdmVUb3ApOwogICAgfQogICAgLy8gTGlzdAogIH0sIHsKICAgIGtleTogIm9uTGVmdEFycm93IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkxlZnRBcnJvdyhlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgdmFyIG5vZGVzID0gdGhpcy52aWV3LmdldEZvY3VzZWRFbGVtZW50cygpOwogICAgICBpZiAobm9kZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBub2RlID0gbm9kZXNbMF07CiAgICAgIHZhciBsb2NhdGlvbiA9IHRoaXMubW9kZWwuZ2V0Tm9kZUxvY2F0aW9uKG5vZGUpOwogICAgICB2YXIgZGlkQ2hhbmdlID0gdGhpcy5tb2RlbC5zZXRDb2xsYXBzZWQobG9jYXRpb24sIHRydWUpOwogICAgICBpZiAoIWRpZENoYW5nZSkgewogICAgICAgIHZhciBwYXJlbnRMb2NhdGlvbiA9IHRoaXMubW9kZWwuZ2V0UGFyZW50Tm9kZUxvY2F0aW9uKGxvY2F0aW9uKTsKICAgICAgICBpZiAoIXBhcmVudExvY2F0aW9uKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIHZhciBwYXJlbnRMaXN0SW5kZXggPSB0aGlzLm1vZGVsLmdldExpc3RJbmRleChwYXJlbnRMb2NhdGlvbik7CiAgICAgICAgdGhpcy52aWV3LnJldmVhbChwYXJlbnRMaXN0SW5kZXgpOwogICAgICAgIHRoaXMudmlldy5zZXRGb2N1cyhbcGFyZW50TGlzdEluZGV4XSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJvblJpZ2h0QXJyb3ciLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uUmlnaHRBcnJvdyhlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgdmFyIG5vZGVzID0gdGhpcy52aWV3LmdldEZvY3VzZWRFbGVtZW50cygpOwogICAgICBpZiAobm9kZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBub2RlID0gbm9kZXNbMF07CiAgICAgIHZhciBsb2NhdGlvbiA9IHRoaXMubW9kZWwuZ2V0Tm9kZUxvY2F0aW9uKG5vZGUpOwogICAgICB2YXIgZGlkQ2hhbmdlID0gdGhpcy5tb2RlbC5zZXRDb2xsYXBzZWQobG9jYXRpb24sIGZhbHNlKTsKICAgICAgaWYgKCFkaWRDaGFuZ2UpIHsKICAgICAgICBpZiAoIW5vZGUuY2hpbGRyZW4uc29tZShmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICAgIHJldHVybiBjaGlsZC52aXNpYmxlOwogICAgICAgIH0pKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIHZhciBfdGhpcyR2aWV3JGdldEZvY3VzID0gdGhpcy52aWV3LmdldEZvY3VzKCksCiAgICAgICAgICBfdGhpcyR2aWV3JGdldEZvY3VzMiA9IF9zbGljZWRUb0FycmF5KF90aGlzJHZpZXckZ2V0Rm9jdXMsIDEpLAogICAgICAgICAgZm9jdXNlZEluZGV4ID0gX3RoaXMkdmlldyRnZXRGb2N1czJbMF07CiAgICAgICAgdmFyIGZpcnN0Q2hpbGRJbmRleCA9IGZvY3VzZWRJbmRleCArIDE7CiAgICAgICAgdGhpcy52aWV3LnJldmVhbChmaXJzdENoaWxkSW5kZXgpOwogICAgICAgIHRoaXMudmlldy5zZXRGb2N1cyhbZmlyc3RDaGlsZEluZGV4XSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJvblNwYWNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvblNwYWNlKGUpIHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICB2YXIgbm9kZXMgPSB0aGlzLnZpZXcuZ2V0Rm9jdXNlZEVsZW1lbnRzKCk7CiAgICAgIGlmIChub2Rlcy5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIG5vZGUgPSBub2Rlc1swXTsKICAgICAgdmFyIGxvY2F0aW9uID0gdGhpcy5tb2RlbC5nZXROb2RlTG9jYXRpb24obm9kZSk7CiAgICAgIHZhciByZWN1cnNpdmUgPSBlLmJyb3dzZXJFdmVudC5hbHRLZXk7CiAgICAgIHRoaXMubW9kZWwuc2V0Q29sbGFwc2VkKGxvY2F0aW9uLCB1bmRlZmluZWQsIHJlY3Vyc2l2ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzcG9zZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcG9zZSgpIHsKICAgICAgX2Rpc3Bvc2UodGhpcy5kaXNwb3NhYmxlcyk7CiAgICAgIHRoaXMudmlldy5kaXNwb3NlKCk7CiAgICB9CiAgfV0pOwogIHJldHVybiBBYnN0cmFjdFRyZWU7Cn0oKTs="},{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","$","append","clearNode","createStyleSheet","h","hasParentWithClass","DomEmitter","StandardKeyboardEvent","ActionBar","FindInput","ElementsDragAndDropData","isButton","isInputElement","isMonacoEditor","List","MouseController","Toggle","getVisibleState","isFilterResult","TreeMouseEventTarget","Action","distinct","equals","range","disposableTimeout","timeout","Codicon","SetMap","Emitter","Event","EventBufferer","Relay","fuzzyScore","FuzzyScore","Disposable","DisposableStore","dispose","toDisposable","clamp","isNumber","localize","TreeElementsDragAndDropData","data","elements","map","node","element","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","getDragURI","nodes","originalEvent","getDragLabel","undefined","_a","_b","onDragStart","call","targetNode","targetIndex","raw","onDragOver","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","length","getListRenderCount","Object","assign","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","height","setDynamicHeight","RenderIndentGuides","EventCollection","onDidChange","_elements","disposables","forEach","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","_onDidChangeActiveNodes","container","twistie","contents","templateData","renderTemplate","index","set","style","paddingLeft","width","renderTwistie","renderElement","disposeElement","delete","disposeTemplate","get","classList","remove","treeItemExpanded","classNamesArray","twistieRendered","collapsible","add","toggle","collapsed","setAttribute","String","removeAttribute","target","disposableStore","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","children","line","clear","FindFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","parentVisibility","visibility","filter","Default","label","labels","Array","isArray","l","labelStr","toString","score","toLowerCase","firstMatchCanBeWeak","boostFullMatch","findMode","TreeFindMode","Filter","ModeToggle","opts","icon","title","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","FindWidget","contextViewProvider","mode","tabIndex","right","_onDidDisable","root","_register","removeChild","modeToggle","onDidChangeMode","onChange","checked","Highlight","_store","findInput","additionalToggles","actionbar","emitter","inputBox","inputElement","onKeyDown","chain","event","keyCode","preventDefault","stopPropagation","domFocus","closeAction","push","onGrabMouseDown","grab","onWindowMouseMove","window","onWindowMouseUp","startRight","startX","pageX","update","deltaX","layout","onGrabKeyDown","Number","POSITIVE_INFINITY","onDidChangeValue","setPlaceHolder","styles","listFilterWidgetBackground","backgroundColor","listFilterWidgetShadow","boxShadow","Math","max","message","showMessage","clearMessage","_super","create","fire","FindController","view","_onDidChangeMode","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","_mode","defaultFindMode","onDidSplice","onDidSpliceModel","widget","refilter","render","pattern","noMatches","totalCount","matchCount","type","content","isDefault","filterData","asTreeMouseEvent","Unknown","browserEvent","Twistie","Element","dfs","fn","child","Trait","getFirstViewElementWithTrait","_onDidChange","_nodeSet","createNodeSet","__forceEvent","_set","silent","that","nodeSet","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","wasDeleted","insertedNode","TreeNodeListMouseController","list","onTwistie","contains","offsetX","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","location","recursive","altKey","setFocus","TreeNodeList","user","virtualDelegate","renderers","focusTrait","selectionTrait","anchorTrait","deleteCount","additionalFocus","additionalSelection","anchor","indexes","fromAPI","i","AbstractTree","_user","_options","eventBufferer","onDidChangeFindOpenState","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","focus","getFocusedElements","selection","getSelectedElements","getAnchorElement","createModel","input","onDidModelSplice","bufferEvents","any","debounce","getNodes","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findController","focusNavigationFilter","shouldAllowFocus","onDidChangeFindMode","styleElement","getHTMLElement","Always","wrapEvent","onMouseDblClick","onPointer","onDidFocus","signal","onDidDispose","optionsUpdate","scrollTop","suffix","domId","treeIndentGuidesStroke","transparent","textContent","join","getFirstElementChild","isCollapsible","setCollapsible","setSelection","relativeTop","expandTo","reveal","didChange","parentLocation","parentListIndex","some","visible","getFocus","focusedIndex","firstChildIndex"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem', getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }) });\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    get elements() {\n        return this._elements;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.renderedIndentGuides = new SetMap();\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            this.indent = clamp(options.indent, 0, 40);\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        if (typeof height === 'number') {\n            this.renderedNodes.set(node, { templateData, height });\n            this.renderedElements.set(node.element, node);\n        }\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        this.renderTwistie(node, templateData);\n        if (typeof height === 'number') {\n            this.renderIndentGuides(node, templateData);\n        }\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const data = this.renderedNodes.get(node);\n        if (!data) {\n            return;\n        }\n        this.renderTwistie(node, data.templateData);\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderIndentGuides(node, data.templateData);\n    }\n    renderTwistie(node, templateData) {\n        templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray);\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n    }\n    renderIndentGuides(target, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        let node = target;\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            return 2 /* TreeVisibility.Recurse */;\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a;\n        super({\n            icon: Codicon.filter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts === null || opts === void 0 ? void 0 : opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            inputActiveOptionBorder: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBackground\n        });\n    }\n}\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nclass FindWidget extends Disposable {\n    constructor(container, tree, contextViewProvider, mode, options) {\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, options), { isChecked: mode === TreeFindMode.Filter })));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, false, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle]\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = this._register(Event.chain(emitter.event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onKeyDown((e) => {\n            switch (e.keyCode) {\n                case 18 /* KeyCode.DownArrow */:\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.tree.domFocus();\n                    return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            this.elements.grab.classList.add('grabbing');\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n        this.style(options !== null && options !== void 0 ? options : {});\n    }\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    style(styles) {\n        this.findInput.style(styles);\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground.toString();\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    dispose() {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this._onDidDisable.fire();\n            this.elements.root.classList.add('disabled');\n            yield timeout(300);\n            _super.dispose.call(this);\n        });\n    }\n}\nclass FindController {\n    constructor(tree, model, view, filter, contextViewProvider) {\n        var _a;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            (_a = this.widget) === null || _a === void 0 ? void 0 : _a.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n        }\n        else {\n            (_b = this.widget) === null || _b === void 0 ? void 0 : _b.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    style(styles) {\n        var _a;\n        this.styles = styles;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.style(styles);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree) {\n        super(list);\n        this.tree = tree;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        let expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n            return super.onViewPointer(e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n            return super.onViewPointer(e);\n        }\n        if (node.collapsible) {\n            const model = this.tree.model; // internal\n            const location = model.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            model.setCollapsed(location, undefined, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                return;\n            }\n        }\n        super.onViewPointer(e);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        const treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\n            .debounce(() => null, 0)\n            .map(() => {\n            const set = new Set();\n            for (const node of this.focus.getNodes()) {\n                set.add(node);\n            }\n            for (const node of this.selection.getNodes()) {\n                set.add(node);\n            }\n            return [...set.values()];\n        }).event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown)\n                .filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e));\n            onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    updateOptions(optionsUpdate = {}) {\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.view.domFocus();\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        var _a;\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.style(styles);\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.selection.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setSelection(indexes, browserEvent, true);\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.focus.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setFocus(indexes, browserEvent, true);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.view.dispose();\n    }\n}\n"],"mappings":"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"}]}