{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/uri.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/uri.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["paths","isWindows","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","ret","_strict","scheme","Error","authority","path","query","fragment","test","_schemeFix","_referenceResolution","_slash","_empty","_regexp","URI","schemeOrData","uriToFsPath","change","undefined","Uri","skipEncoding","_asFormatted","thing","fsPath","with","toString","value","match","exec","percentDecode","replace","idx","indexOf","substring","components","result","uri","newPath","pathFragment","file","win32","join","posix","data","_formatted","external","_fsPath","_sep","_pathSepMarker","arguments","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","length","code","charCodeAt","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","toLowerCase","encoder","userinfo","String","fromCharCode","decodeURIComponentGraceful","str","decodeURIComponent","_a","_rEncodedAsHex"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/uri.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A',\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21',\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (allowSlash && code === 47 /* CharCode.Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n"],"mappings":"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"}]}