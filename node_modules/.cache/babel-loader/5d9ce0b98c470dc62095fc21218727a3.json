{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Emitter","Disposable","DisposableStore","dispose","platform","errors","TextModel","EDITOR_MODEL_DEFAULTS","PLAINTEXT_LANGUAGE_ID","ILanguageService","IModelService","ITextResourcePropertiesService","IConfigurationService","RunOnceScheduler","CancellationTokenSource","IThemeService","ILogService","IUndoRedoService","StringSHA1","isEditStackElement","Schemas","SemanticTokensProviderStyling","toMultilineTokens2","getDocumentSemanticTokens","hasDocumentSemanticTokensProvider","isSemanticTokens","isSemanticTokensEdits","equals","ILanguageConfigurationService","ILanguageFeatureDebounceService","StopWatch","ILanguageFeaturesService","MODEL_ID","resource","toString","computeModelSha1","model","shaComputer","snapshot","createSnapshot","text","read","update","digest","ModelData","onWillDispose","onDidChangeLanguage","_modelEventListeners","_languageSelection","_languageSelectionListener","add","e","_disposeLanguageSelection","languageSelection","onDidChange","setMode","languageId","DEFAULT_EOL","isLinux","isMacintosh","DisposedModelInfo","uri","initialUndoRedoSnapshot","time","sharesUndoRedoStack","heapSize","sha1","versionId","alternativeVersionId","ModelService","_configurationService","_resourcePropertiesService","_themeService","_logService","_undoRedoService","_languageService","_languageConfigurationService","_languageFeatureDebounceService","languageFeaturesService","_onModelAdded","_register","onModelAdded","event","_onModelRemoved","onModelRemoved","_onModelModeChanged","onModelLanguageChanged","_modelCreationOptionsByLanguageAndResource","create","_models","_disposedModels","Map","_disposedModelsHeapSize","_semanticStyling","SemanticStyling","onDidChangeConfiguration","_updateModelOptions","SemanticColoringFeature","language","getEOL","eol","getValue","overrideIdentifier","OS","result","isForSimpleWidget","creationOptions","editor","_getEOL","_readModelOptions","oldOptionsByLanguageAndResource","keys","len","modelId","modelData","getLanguageId","oldOptions","newOptions","getCreationOptions","_setModelOptionsForModel","disposedModelData","set","get","delete","maxModelsHeapSize","disposedModels","forEach","entry","push","sort","a","b","disposedModel","shift","_removeDisposedModel","restoreSnapshot","value","options","has","elements","getElements","sha1IsEqual","past","element","matchesResource","setModel","future","setElementsValidFlag","_overwriteVersionId","_overwriteAlternativeVersionId","_overwriteInitialUndoRedoSnapshot","Error","_onWillDispose","_onDidChangeLanguage","_createModelData","fire","setLanguage","ret","provider","scheme","file","vscodeRemote","vscodeUserData","vscodeNotebookCell","getUriComparisonKey","maintainUndoRedoStack","_shouldRestoreUndoStack","_schemaShouldMaintainUndoRedoElements","maxMemory","MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK","getInitialUndoRedoSnapshot","_ensureDisposedModelsHeapSize","_insertDisposedModel","Date","now","getVersionId","getAlternativeVersionId","oldLanguageId","oldLanguage","newLanguageId","config","_a","tabSize","parsedTabSize","parseInt","isNaN","indentSize","parsedIndentSize","insertSpaces","Boolean","newDefaultEOL","trimAutoWhitespace","detectIndentation","largeFileOptimizations","bracketPairColorizationOptions","bracketPairColorization","enabled","independentColorPoolPerBracketType","defaultEOL","currentOptions","getLineCount","setEOL","updateOptions","bracketColorizationOptions","SEMANTIC_HIGHLIGHTING_SETTING_ID","isSemanticColoringEnabled","themeService","configurationService","setting","getColorTheme","semanticHighlighting","semanticStyling","modelService","languageFeatureDebounceService","_watchers","register","ModelSemanticColoring","deregister","modelSemanticColoring","handleSettingOrThemeChange","getModels","curr","affectsConfiguration","onDidColorThemeChange","values","watcher","_caches","WeakMap","getLegend","SemanticTokensResponse","resultId","data","releaseDocumentSemanticTokens","stylingProvider","_isDisposed","_model","_provider","documentSemanticTokensProvider","_debounceInformation","for","min","REQUEST_MIN_DELAY","max","REQUEST_MAX_DELAY","_fetchDocumentSemanticTokens","_fetchDocumentSemanticTokensNow","_currentDocumentResponse","_currentDocumentRequestCancellationTokenSource","_documentProvidersChangeListeners","onDidChangeContent","isScheduled","schedule","cancel","_setDocumentSemanticTokens","bindDocumentChangeListeners","all","_","tokenization","setSemanticTokens","cancellationTokenSource","lastProvider","lastResultId","request","token","pendingChanges","contentChangeListener","sw","then","res","elapsed","tokens","styling","err","isExpectedError","isCancellationError","message","indexOf","onUnexpectedError","currentResponse","rescheduleIfNeeded","edits","deltaLength","edit","deleteCount","srcData","destData","Uint32Array","srcLastStart","destLastStart","start","warnInvalidEditStart","copyCount","_copy","change","area","changes","singleChange","applyEdit","range","src","srcOffset","dest","destOffset","Math"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as errors from '../../../base/common/errors.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IModelService } from './model.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from './languageFeatureDebounce.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nfunction MODEL_ID(resource) {\n    return resource.toString();\n}\nfunction computeModelSha1(model) {\n    // compute the sha1\n    const shaComputer = new StringSHA1();\n    const snapshot = model.createSnapshot();\n    let text;\n    while ((text = snapshot.read())) {\n        shaComputer.update(text);\n    }\n    return shaComputer.digest();\n}\nclass ModelData {\n    constructor(model, onWillDispose, onDidChangeLanguage) {\n        this._modelEventListeners = new DisposableStore();\n        this.model = model;\n        this._languageSelection = null;\n        this._languageSelectionListener = null;\n        this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n        this._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n    }\n    _disposeLanguageSelection() {\n        if (this._languageSelectionListener) {\n            this._languageSelectionListener.dispose();\n            this._languageSelectionListener = null;\n        }\n    }\n    dispose() {\n        this._modelEventListeners.dispose();\n        this._disposeLanguageSelection();\n    }\n    setLanguage(languageSelection) {\n        this._disposeLanguageSelection();\n        this._languageSelection = languageSelection;\n        this._languageSelectionListener = this._languageSelection.onDidChange(() => this.model.setMode(languageSelection.languageId));\n        this.model.setMode(languageSelection.languageId);\n    }\n}\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? 1 /* DefaultEndOfLine.LF */ : 2 /* DefaultEndOfLine.CRLF */;\nclass DisposedModelInfo {\n    constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\n        this.uri = uri;\n        this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\n        this.time = time;\n        this.sharesUndoRedoStack = sharesUndoRedoStack;\n        this.heapSize = heapSize;\n        this.sha1 = sha1;\n        this.versionId = versionId;\n        this.alternativeVersionId = alternativeVersionId;\n    }\n}\nlet ModelService = class ModelService extends Disposable {\n    constructor(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService, _languageService, _languageConfigurationService, _languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._configurationService = _configurationService;\n        this._resourcePropertiesService = _resourcePropertiesService;\n        this._themeService = _themeService;\n        this._logService = _logService;\n        this._undoRedoService = _undoRedoService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._languageFeatureDebounceService = _languageFeatureDebounceService;\n        this._onModelAdded = this._register(new Emitter());\n        this.onModelAdded = this._onModelAdded.event;\n        this._onModelRemoved = this._register(new Emitter());\n        this.onModelRemoved = this._onModelRemoved.event;\n        this._onModelModeChanged = this._register(new Emitter());\n        this.onModelLanguageChanged = this._onModelModeChanged.event;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        this._models = {};\n        this._disposedModels = new Map();\n        this._disposedModelsHeapSize = 0;\n        this._semanticStyling = this._register(new SemanticStyling(this._themeService, this._languageService, this._logService));\n        this._register(this._configurationService.onDidChangeConfiguration(() => this._updateModelOptions()));\n        this._updateModelOptions();\n        this._register(new SemanticColoringFeature(this._semanticStyling, this, this._themeService, this._configurationService, this._languageFeatureDebounceService, languageFeaturesService));\n    }\n    static _readModelOptions(config, isForSimpleWidget) {\n        var _a;\n        let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n        if (config.editor && typeof config.editor.tabSize !== 'undefined') {\n            const parsedTabSize = parseInt(config.editor.tabSize, 10);\n            if (!isNaN(parsedTabSize)) {\n                tabSize = parsedTabSize;\n            }\n            if (tabSize < 1) {\n                tabSize = 1;\n            }\n        }\n        let indentSize = tabSize;\n        if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n            const parsedIndentSize = parseInt(config.editor.indentSize, 10);\n            if (!isNaN(parsedIndentSize)) {\n                indentSize = parsedIndentSize;\n            }\n            if (indentSize < 1) {\n                indentSize = 1;\n            }\n        }\n        let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n        if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n            insertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n        }\n        let newDefaultEOL = DEFAULT_EOL;\n        const eol = config.eol;\n        if (eol === '\\r\\n') {\n            newDefaultEOL = 2 /* DefaultEndOfLine.CRLF */;\n        }\n        else if (eol === '\\n') {\n            newDefaultEOL = 1 /* DefaultEndOfLine.LF */;\n        }\n        let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n        if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n            trimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n        }\n        let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n        if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n            detectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n        }\n        let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n        if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n            largeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n        }\n        let bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n        if (((_a = config.editor) === null || _a === void 0 ? void 0 : _a.bracketPairColorization) && typeof config.editor.bracketPairColorization === 'object') {\n            bracketPairColorizationOptions = {\n                enabled: !!config.editor.bracketPairColorization.enabled,\n                independentColorPoolPerBracketType: !!config.editor.bracketPairColorization.independentColorPoolPerBracketType\n            };\n        }\n        return {\n            isForSimpleWidget: isForSimpleWidget,\n            tabSize: tabSize,\n            indentSize: indentSize,\n            insertSpaces: insertSpaces,\n            detectIndentation: detectIndentation,\n            defaultEOL: newDefaultEOL,\n            trimAutoWhitespace: trimAutoWhitespace,\n            largeFileOptimizations: largeFileOptimizations,\n            bracketPairColorizationOptions\n        };\n    }\n    _getEOL(resource, language) {\n        if (resource) {\n            return this._resourcePropertiesService.getEOL(resource, language);\n        }\n        const eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return platform.OS === 3 /* platform.OperatingSystem.Linux */ || platform.OS === 2 /* platform.OperatingSystem.Macintosh */ ? '\\n' : '\\r\\n';\n    }\n    _shouldRestoreUndoStack() {\n        const result = this._configurationService.getValue('files.restoreUndoStack');\n        if (typeof result === 'boolean') {\n            return result;\n        }\n        return true;\n    }\n    getCreationOptions(language, resource, isForSimpleWidget) {\n        let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n        if (!creationOptions) {\n            const editor = this._configurationService.getValue('editor', { overrideIdentifier: language, resource });\n            const eol = this._getEOL(resource, language);\n            creationOptions = ModelService._readModelOptions({ editor, eol }, isForSimpleWidget);\n            this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n        }\n        return creationOptions;\n    }\n    _updateModelOptions() {\n        const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        // Update options on all models\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            const modelData = this._models[modelId];\n            const language = modelData.model.getLanguageId();\n            const uri = modelData.model.uri;\n            const oldOptions = oldOptionsByLanguageAndResource[language + uri];\n            const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n            ModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n        }\n    }\n    static _setModelOptionsForModel(model, newOptions, currentOptions) {\n        if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n            model.setEOL(newOptions.defaultEOL === 1 /* DefaultEndOfLine.LF */ ? 0 /* EndOfLineSequence.LF */ : 1 /* EndOfLineSequence.CRLF */);\n        }\n        if (currentOptions\n            && (currentOptions.detectIndentation === newOptions.detectIndentation)\n            && (currentOptions.insertSpaces === newOptions.insertSpaces)\n            && (currentOptions.tabSize === newOptions.tabSize)\n            && (currentOptions.indentSize === newOptions.indentSize)\n            && (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n            && equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)) {\n            // Same indent opts, no need to touch the model\n            return;\n        }\n        if (newOptions.detectIndentation) {\n            model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n            model.updateOptions({\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n        else {\n            model.updateOptions({\n                insertSpaces: newOptions.insertSpaces,\n                tabSize: newOptions.tabSize,\n                indentSize: newOptions.indentSize,\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n    }\n    // --- begin IModelService\n    _insertDisposedModel(disposedModelData) {\n        this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n        this._disposedModelsHeapSize += disposedModelData.heapSize;\n    }\n    _removeDisposedModel(resource) {\n        const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n        if (disposedModelData) {\n            this._disposedModelsHeapSize -= disposedModelData.heapSize;\n        }\n        this._disposedModels.delete(MODEL_ID(resource));\n        return disposedModelData;\n    }\n    _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\n        if (this._disposedModelsHeapSize > maxModelsHeapSize) {\n            // we must remove some old undo stack elements to free up some memory\n            const disposedModels = [];\n            this._disposedModels.forEach(entry => {\n                if (!entry.sharesUndoRedoStack) {\n                    disposedModels.push(entry);\n                }\n            });\n            disposedModels.sort((a, b) => a.time - b.time);\n            while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n                const disposedModel = disposedModels.shift();\n                this._removeDisposedModel(disposedModel.uri);\n                if (disposedModel.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n                }\n            }\n        }\n    }\n    _createModelData(value, languageId, resource, isForSimpleWidget) {\n        // create & save the model\n        const options = this.getCreationOptions(languageId, resource, isForSimpleWidget);\n        const model = new TextModel(value, languageId, options, resource, this._undoRedoService, this._languageService, this._languageConfigurationService);\n        if (resource && this._disposedModels.has(MODEL_ID(resource))) {\n            const disposedModelData = this._removeDisposedModel(resource);\n            const elements = this._undoRedoService.getElements(resource);\n            const sha1IsEqual = (computeModelSha1(model) === disposedModelData.sha1);\n            if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                this._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n                if (sha1IsEqual) {\n                    model._overwriteVersionId(disposedModelData.versionId);\n                    model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n                    model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n            else {\n                if (disposedModelData.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n        }\n        const modelId = MODEL_ID(model.uri);\n        if (this._models[modelId]) {\n            // There already exists a model with this id => this is a programmer error\n            throw new Error('ModelService: Cannot add model because it already exists!');\n        }\n        const modelData = new ModelData(model, (model) => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\n        this._models[modelId] = modelData;\n        return modelData;\n    }\n    createModel(value, languageSelection, resource, isForSimpleWidget = false) {\n        let modelData;\n        if (languageSelection) {\n            modelData = this._createModelData(value, languageSelection.languageId, resource, isForSimpleWidget);\n            this.setMode(modelData.model, languageSelection);\n        }\n        else {\n            modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n        }\n        this._onModelAdded.fire(modelData.model);\n        return modelData.model;\n    }\n    setMode(model, languageSelection) {\n        if (!languageSelection) {\n            return;\n        }\n        const modelData = this._models[MODEL_ID(model.uri)];\n        if (!modelData) {\n            return;\n        }\n        modelData.setLanguage(languageSelection);\n    }\n    getModels() {\n        const ret = [];\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            ret.push(this._models[modelId].model);\n        }\n        return ret;\n    }\n    getModel(resource) {\n        const modelId = MODEL_ID(resource);\n        const modelData = this._models[modelId];\n        if (!modelData) {\n            return null;\n        }\n        return modelData.model;\n    }\n    getSemanticTokensProviderStyling(provider) {\n        return this._semanticStyling.get(provider);\n    }\n    // --- end IModelService\n    _schemaShouldMaintainUndoRedoElements(resource) {\n        return (resource.scheme === Schemas.file\n            || resource.scheme === Schemas.vscodeRemote\n            || resource.scheme === Schemas.vscodeUserData\n            || resource.scheme === Schemas.vscodeNotebookCell\n            || resource.scheme === 'fake-fs' // for tests\n        );\n    }\n    _onWillDispose(model) {\n        const modelId = MODEL_ID(model.uri);\n        const modelData = this._models[modelId];\n        const sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n        let maintainUndoRedoStack = false;\n        let heapSize = 0;\n        if (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n            const elements = this._undoRedoService.getElements(model.uri);\n            if (elements.past.length > 0 || elements.future.length > 0) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n            }\n        }\n        const maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n        if (!maintainUndoRedoStack) {\n            if (!sharesUndoRedoStack) {\n                const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n                if (initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n                }\n            }\n        }\n        else if (!sharesUndoRedoStack && heapSize > maxMemory) {\n            // the undo stack for this file would never fit in the configured memory, so don't bother with it.\n            const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n            if (initialUndoRedoSnapshot !== null) {\n                this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n            }\n        }\n        else {\n            this._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n            // We only invalidate the elements, but they remain in the undo-redo service.\n            this._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n            this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\n        }\n        delete this._models[modelId];\n        modelData.dispose();\n        // clean up cache\n        delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n        this._onModelRemoved.fire(model);\n    }\n    _onDidChangeLanguage(model, e) {\n        const oldLanguageId = e.oldLanguage;\n        const newLanguageId = model.getLanguageId();\n        const oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n        const newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n        ModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n        this._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n    }\n};\nModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\nModelService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ITextResourcePropertiesService),\n    __param(2, IThemeService),\n    __param(3, ILogService),\n    __param(4, IUndoRedoService),\n    __param(5, ILanguageService),\n    __param(6, ILanguageConfigurationService),\n    __param(7, ILanguageFeatureDebounceService),\n    __param(8, ILanguageFeaturesService)\n], ModelService);\nexport { ModelService };\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n    var _a;\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\n    if (typeof setting === 'boolean') {\n        return setting;\n    }\n    return themeService.getColorTheme().semanticHighlighting;\n}\nlet SemanticColoringFeature = class SemanticColoringFeature extends Disposable {\n    constructor(semanticStyling, modelService, themeService, configurationService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._watchers = Object.create(null);\n        this._semanticStyling = semanticStyling;\n        const register = (model) => {\n            this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, this._semanticStyling, themeService, languageFeatureDebounceService, languageFeaturesService);\n        };\n        const deregister = (model, modelSemanticColoring) => {\n            modelSemanticColoring.dispose();\n            delete this._watchers[model.uri.toString()];\n        };\n        const handleSettingOrThemeChange = () => {\n            for (const model of modelService.getModels()) {\n                const curr = this._watchers[model.uri.toString()];\n                if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                    if (!curr) {\n                        register(model);\n                    }\n                }\n                else {\n                    if (curr) {\n                        deregister(model, curr);\n                    }\n                }\n            }\n        };\n        this._register(modelService.onModelAdded((model) => {\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                register(model);\n            }\n        }));\n        this._register(modelService.onModelRemoved((model) => {\n            const curr = this._watchers[model.uri.toString()];\n            if (curr) {\n                deregister(model, curr);\n            }\n        }));\n        this._register(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n                handleSettingOrThemeChange();\n            }\n        }));\n        this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n    }\n    dispose() {\n        // Dispose all watchers\n        for (const watcher of Object.values(this._watchers)) {\n            watcher.dispose();\n        }\n        super.dispose();\n    }\n};\nSemanticColoringFeature = __decorate([\n    __param(1, IModelService),\n    __param(2, IThemeService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeatureDebounceService),\n    __param(5, ILanguageFeaturesService)\n], SemanticColoringFeature);\nclass SemanticStyling extends Disposable {\n    constructor(_themeService, _languageService, _logService) {\n        super();\n        this._themeService = _themeService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._caches = new WeakMap();\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._caches = new WeakMap();\n        }));\n    }\n    get(provider) {\n        if (!this._caches.has(provider)) {\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n        }\n        return this._caches.get(provider);\n    }\n}\nclass SemanticTokensResponse {\n    constructor(provider, resultId, data) {\n        this.provider = provider;\n        this.resultId = resultId;\n        this.data = data;\n    }\n    dispose() {\n        this.provider.releaseDocumentSemanticTokens(this.resultId);\n    }\n}\nlet ModelSemanticColoring = class ModelSemanticColoring extends Disposable {\n    constructor(model, stylingProvider, themeService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._isDisposed = false;\n        this._model = model;\n        this._semanticStyling = stylingProvider;\n        this._provider = languageFeaturesService.documentSemanticTokensProvider;\n        this._debounceInformation = languageFeatureDebounceService.for(this._provider, 'DocumentSemanticTokens', { min: ModelSemanticColoring.REQUEST_MIN_DELAY, max: ModelSemanticColoring.REQUEST_MAX_DELAY });\n        this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.REQUEST_MIN_DELAY));\n        this._currentDocumentResponse = null;\n        this._currentDocumentRequestCancellationTokenSource = null;\n        this._documentProvidersChangeListeners = [];\n        this._register(this._model.onDidChangeContent(() => {\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        }));\n        this._register(this._model.onDidChangeLanguage(() => {\n            // clear any outstanding state\n            if (this._currentDocumentResponse) {\n                this._currentDocumentResponse.dispose();\n                this._currentDocumentResponse = null;\n            }\n            if (this._currentDocumentRequestCancellationTokenSource) {\n                this._currentDocumentRequestCancellationTokenSource.cancel();\n                this._currentDocumentRequestCancellationTokenSource = null;\n            }\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(0);\n        }));\n        const bindDocumentChangeListeners = () => {\n            dispose(this._documentProvidersChangeListeners);\n            this._documentProvidersChangeListeners = [];\n            for (const provider of this._provider.all(model)) {\n                if (typeof provider.onDidChange === 'function') {\n                    this._documentProvidersChangeListeners.push(provider.onDidChange(() => this._fetchDocumentSemanticTokens.schedule(0)));\n                }\n            }\n        };\n        bindDocumentChangeListeners();\n        this._register(this._provider.onDidChange(() => {\n            bindDocumentChangeListeners();\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._register(themeService.onDidColorThemeChange(_ => {\n            // clear out existing tokens\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._fetchDocumentSemanticTokens.schedule(0);\n    }\n    dispose() {\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            this._currentDocumentRequestCancellationTokenSource.cancel();\n            this._currentDocumentRequestCancellationTokenSource = null;\n        }\n        this._setDocumentSemanticTokens(null, null, null, []);\n        this._isDisposed = true;\n        super.dispose();\n    }\n    _fetchDocumentSemanticTokensNow() {\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            // there is already a request running, let it finish...\n            return;\n        }\n        if (!hasDocumentSemanticTokensProvider(this._provider, this._model)) {\n            // there is no provider\n            if (this._currentDocumentResponse) {\n                // there are semantic tokens set\n                this._model.tokenization.setSemanticTokens(null, false);\n            }\n            return;\n        }\n        const cancellationTokenSource = new CancellationTokenSource();\n        const lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n        const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n        const request = getDocumentSemanticTokens(this._provider, this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n        this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n        const pendingChanges = [];\n        const contentChangeListener = this._model.onDidChangeContent((e) => {\n            pendingChanges.push(e);\n        });\n        const sw = new StopWatch(false);\n        request.then((res) => {\n            this._debounceInformation.update(this._model, sw.elapsed());\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (!res) {\n                this._setDocumentSemanticTokens(null, null, null, pendingChanges);\n            }\n            else {\n                const { provider, tokens } = res;\n                const styling = this._semanticStyling.get(provider);\n                this._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n            }\n        }, (err) => {\n            const isExpectedError = err && (errors.isCancellationError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\n            if (!isExpectedError) {\n                errors.onUnexpectedError(err);\n            }\n            // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n            // The API does not have a special error kind to express this...\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (pendingChanges.length > 0) {\n                // More changes occurred while the request was running\n                if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                    this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n                }\n            }\n        });\n    }\n    static _copy(src, srcOffset, dest, destOffset, length) {\n        // protect against overflows\n        length = Math.min(length, dest.length - destOffset, src.length - srcOffset);\n        for (let i = 0; i < length; i++) {\n            dest[destOffset + i] = src[srcOffset + i];\n        }\n    }\n    _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\n        const currentResponse = this._currentDocumentResponse;\n        const rescheduleIfNeeded = () => {\n            if (pendingChanges.length > 0 && !this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        };\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._isDisposed) {\n            // disposed!\n            if (provider && tokens) {\n                provider.releaseDocumentSemanticTokens(tokens.resultId);\n            }\n            return;\n        }\n        if (!provider || !styling) {\n            this._model.tokenization.setSemanticTokens(null, false);\n            return;\n        }\n        if (!tokens) {\n            this._model.tokenization.setSemanticTokens(null, true);\n            rescheduleIfNeeded();\n            return;\n        }\n        if (isSemanticTokensEdits(tokens)) {\n            if (!currentResponse) {\n                // not possible!\n                this._model.tokenization.setSemanticTokens(null, true);\n                return;\n            }\n            if (tokens.edits.length === 0) {\n                // nothing to do!\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: currentResponse.data\n                };\n            }\n            else {\n                let deltaLength = 0;\n                for (const edit of tokens.edits) {\n                    deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n                }\n                const srcData = currentResponse.data;\n                const destData = new Uint32Array(srcData.length + deltaLength);\n                let srcLastStart = srcData.length;\n                let destLastStart = destData.length;\n                for (let i = tokens.edits.length - 1; i >= 0; i--) {\n                    const edit = tokens.edits[i];\n                    if (edit.start > srcData.length) {\n                        styling.warnInvalidEditStart(currentResponse.resultId, tokens.resultId, i, edit.start, srcData.length);\n                        // The edits are invalid and there's no way to recover\n                        this._model.tokenization.setSemanticTokens(null, true);\n                        return;\n                    }\n                    const copyCount = srcLastStart - (edit.start + edit.deleteCount);\n                    if (copyCount > 0) {\n                        ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n                        destLastStart -= copyCount;\n                    }\n                    if (edit.data) {\n                        ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n                        destLastStart -= edit.data.length;\n                    }\n                    srcLastStart = edit.start;\n                }\n                if (srcLastStart > 0) {\n                    ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n                }\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: destData\n                };\n            }\n        }\n        if (isSemanticTokens(tokens)) {\n            this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n            const result = toMultilineTokens2(tokens, styling, this._model.getLanguageId());\n            // Adjust incoming semantic tokens\n            if (pendingChanges.length > 0) {\n                // More changes occurred while the request was running\n                // We need to:\n                // 1. Adjust incoming semantic tokens\n                // 2. Request them again\n                for (const change of pendingChanges) {\n                    for (const area of result) {\n                        for (const singleChange of change.changes) {\n                            area.applyEdit(singleChange.range, singleChange.text);\n                        }\n                    }\n                }\n            }\n            this._model.tokenization.setSemanticTokens(result, true);\n        }\n        else {\n            this._model.tokenization.setSemanticTokens(null, true);\n        }\n        rescheduleIfNeeded();\n    }\n};\nModelSemanticColoring.REQUEST_MIN_DELAY = 300;\nModelSemanticColoring.REQUEST_MAX_DELAY = 2000;\nModelSemanticColoring = __decorate([\n    __param(2, IThemeService),\n    __param(3, ILanguageFeatureDebounceService),\n    __param(4, ILanguageFeaturesService)\n], ModelSemanticColoring);\nexport { ModelSemanticColoring };\n"],"mappings":"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"}]}