{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/resources.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/resources.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["extpath","Schemas","paths","isLinux","isWindows","compare","strCompare","equalsIgnoreCase","URI","uriToFsPath","originalFSPath","uri","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","getComparisonKey","with","path","toLowerCase","undefined","fragment","toString","base","parentCandidate","scheme","file","isEqualOrParent","query","isEqualAuthority","authority","resource","pathFragment","joinPath","basename","posix","extname","length","dirname","charCodeAt","console","error","normalizedPath","normalize","from","to","relativePath","relative","toSlashes","fromPath","toPath","i","len","Math","min","charAt","substr","newURI","resolve","toPosixPath","a1","a2","sep","fsp","getRoot","p","test","fsPath","hasTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","_","isEqual","bind","basenameOrAuthority","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","Map","meta","substring","indexOf","lastIndexOf","split","forEach","property","key","value","set","mime"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/resources.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n"],"mappings":"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"}]}