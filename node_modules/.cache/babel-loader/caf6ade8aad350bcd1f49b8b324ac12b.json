{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IGNyZWF0ZSBmcm9tICIuLi8uLi9jcmVhdGUiOwpleHBvcnQgZGVmYXVsdCBjcmVhdGUoewogIG5hbWU6ICJiYXIiLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdmFyIG9wdGlvbkRhdGEgPSB0aGlzLmRlZXBDbG9uZSh0aGlzLmRhdGFDaGFydCk7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHRoaXMuZ2V0T3B0aW9uVGl0bGUoKSwKICAgICAgICB0b29sdGlwOiB0aGlzLmdldE9wdGlvblRpcCh7CiAgICAgICAgICB0cmlnZ2VyOiAiYXhpcyIKICAgICAgICB9KSwKICAgICAgICBncmlkOiB0aGlzLmdldE9wdGlvbkdyaWQoKSwKICAgICAgICBsZWdlbmQ6IHRoaXMuZ2V0T3B0aW9uTGVnZW5kKCksCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzU2hvdywgdHJ1ZSksCiAgICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbi5jYXRlZ29yeSA/ICJ2YWx1ZSIgOiAiY2F0ZWdvcnkiLAogICAgICAgICAgbmFtZTogdGhpcy5vcHRpb24ueEF4aXNOYW1lLAogICAgICAgICAgbmFtZVRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueEF4aXNDb2xvciB8fCAiI2ZmZiIsCiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLm9wdGlvbi54QXhpc0ZvbnRTaXplIHx8IDE0CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnhBeGlzTGluZUNvbG9yIHx8ICIjZmZmIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogb3B0aW9uRGF0YS5jYXRlZ29yaWVzIHx8IFtdLAogICAgICAgICAgaW52ZXJzZTogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueEF4aXNJbnZlcnNlLCBmYWxzZSksCiAgICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgICAgc2hvdzogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueEF4aXNTcGxpdExpbmVTaG93LCBmYWxzZSkKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgaW50ZXJ2YWw6IHRoaXMub3B0aW9uLnhBeGlzSW50ZXJ2YWwgfHwgJ2F1dG8nLAogICAgICAgICAgICByb3RhdGU6IHRoaXMub3B0aW9uLnhBeGlzUm90YXRlIHx8IDAsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi54QXhpc0NvbG9yIHx8ICIjZmZmIiwKICAgICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueEF4aXNGb250U2l6ZSB8fCAxNAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgc2hvdzogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueUF4aXNTaG93LCB0cnVlKSwKICAgICAgICAgIHR5cGU6IHRoaXMub3B0aW9uLmNhdGVnb3J5ID8gImNhdGVnb3J5IiA6ICJ2YWx1ZSIsCiAgICAgICAgICBuYW1lOiB0aGlzLm9wdGlvbi55QXhpc05hbWUsCiAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi55QXhpc0NvbG9yIHx8ICIjZmZmIiwKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnlBeGlzRm9udFNpemUgfHwgMTQKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBvcHRpb25EYXRhLmNhdGVnb3JpZXMgfHwgW10sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnlBeGlzQ29sb3IgfHwgIiNmZmYiLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLm9wdGlvbi55QXhpc0ZvbnRTaXplIHx8IDE0CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueUF4aXNMaW5lQ29sb3IgfHwgIiNmZmYiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpbnZlcnNlOiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi55QXhpc0ludmVyc2UsIGZhbHNlKSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi55QXhpc1NwbGl0TGluZVNob3csIGZhbHNlKQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgYmFyQ29sb3IgPSBfdGhpcy5vcHRpb24uYmFyQ29sb3IgfHwgW107CiAgICAgICAgICB2YXIgbGlzdCA9IChvcHRpb25EYXRhLnNlcmllcyB8fCBbXSkubWFwKGZ1bmN0aW9uIChlbGUsIGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGVsZSwgewogICAgICAgICAgICAgIHR5cGU6ICJiYXIiLAogICAgICAgICAgICAgIHN0YWNrOiBlbGUuc3RhY2ssCiAgICAgICAgICAgICAgYmFyV2lkdGg6IF90aGlzLm9wdGlvbi5iYXJXaWR0aCB8fCAxNiwKICAgICAgICAgICAgICBiYXJNaW5IZWlnaHQ6IF90aGlzLm9wdGlvbi5iYXJNaW5IZWlnaHQgfHwgMCwKICAgICAgICAgICAgICBpdGVtU3R5bGU6IF90aGlzLmdldEhhc1Byb3AoIV90aGlzLnN3aXRjaFRoZW1lLCB7CiAgICAgICAgICAgICAgICBjb2xvcjogX3RoaXMuZ2V0Q29sb3IoaW5kZXgpCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBfdGhpcy5vcHRpb24uYmFyUmFkaXVzIHx8IDAKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBsYWJlbDogX3RoaXMuZ2V0T3B0aW9uTGFiZWwoewogICAgICAgICAgICAgICAgcG9zaXRpb246IF90aGlzLm9wdGlvbi5jYXRlZ29yeSA/ICJyaWdodCIgOiAidG9wIgogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gbGlzdDsKICAgICAgICB9KCkKICAgICAgfTsKICAgICAgdGhpcy5teUNoYXJ0LnJlc2l6ZSgpOwogICAgICB0aGlzLm15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICB9CiAgfQp9KTs="},{"version":3,"mappings":";AASA;AAEA;EACAA;EACAC;IACAC;MAAA;MACA;MACA;QACAC;QACAC;UACAC;QACA;QACAC;QACAC;QACAC;UACAC;UACAC;UACAV;UACAW;YACAC;YACAC;UACA;UACAC;YACAL;YACAM;cACAH;YACA;UACA;UACAI;UACAC;UACAC;YACAT;UACA;UACAU;YACAC;YACAC;YACAC;cACAV;cACAC;YACA;UACA;QACA;QACAU;UACAd;UACAC;UACAV;UACAW;YACAC;YACAC;UACA;UACAG;UACAG;YACAG;cACAV;cACAC;YACA;UACA;UACAC;YACAL;YACAM;cACAH;YACA;UACA;UACAK;UACAC;YACAT;UACA;QACA;QACAe;UACA;UACA;YACA;cACAd;cACAe;cACAC;cACAC;cACAC;gBACAhB;cACA;gBAAAiB;cAAA;cACAC;gBACAC;cACA;YACA;UACA;UACA;QACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","methods","updateChart","title","tooltip","trigger","grid","legend","xAxis","show","type","nameTextStyle","color","fontSize","axisLine","lineStyle","data","inverse","splitLine","axisLabel","interval","rotate","textStyle","yAxis","series","stack","barWidth","barMinHeight","itemStyle","barBorderRadius","label","position"],"sourceRoot":"src/echart/packages/bar","sources":["index.vue"],"sourcesContent":["<template>\n  <div :class=\"[b(),className]\"\n       :style=\"styleSizeName\">\n    <div :ref=\"id\"\n         :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from \"../../create\";\n\nexport default create({\n  name: \"bar\",\n  methods: {\n    updateChart () {\n      const optionData = this.deepClone(this.dataChart);\n      const option = {\n        title: this.getOptionTitle(),\n        tooltip: this.getOptionTip({\n          trigger: \"axis\",\n        }),\n        grid: this.getOptionGrid(),\n        legend: this.getOptionLegend(),\n        xAxis: {\n          show: this.vaildData(this.option.xAxisShow, true),\n          type: this.option.category ? \"value\" : \"category\",\n          name: this.option.xAxisName,\n          nameTextStyle: {\n            color: this.option.xAxisColor || \"#fff\",\n            fontSize: this.option.xAxisFontSize || 14\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.xAxisLineColor || \"#fff\"\n            }\n          },\n          data: optionData.categories || [],\n          inverse: this.vaildData(this.option.xAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.xAxisSplitLineShow, false)\n          },\n          axisLabel: {\n            interval: this.option.xAxisInterval || 'auto',\n            rotate: this.option.xAxisRotate || 0,\n            textStyle: {\n              color: this.option.xAxisColor || \"#fff\",\n              fontSize: this.option.xAxisFontSize || 14\n            }\n          }\n        },\n        yAxis: {\n          show: this.vaildData(this.option.yAxisShow, true),\n          type: this.option.category ? \"category\" : \"value\",\n          name: this.option.yAxisName,\n          nameTextStyle: {\n            color: this.option.yAxisColor || \"#fff\",\n            fontSize: this.option.yAxisFontSize || 14\n          },\n          data: optionData.categories || [],\n          axisLabel: {\n            textStyle: {\n              color: this.option.yAxisColor || \"#fff\",\n              fontSize: this.option.yAxisFontSize || 14\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.yAxisLineColor || \"#fff\"\n            }\n          },\n          inverse: this.vaildData(this.option.yAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.yAxisSplitLineShow, false)\n          }\n        },\n        series: (() => {\n          const barColor = this.option.barColor || [];\n          const list = (optionData.series || []).map((ele, index) => {\n            return Object.assign(ele, {\n              type: \"bar\",\n              stack: ele.stack,\n              barWidth: this.option.barWidth || 16,\n              barMinHeight: this.option.barMinHeight || 0,\n              itemStyle: this.getHasProp(!this.switchTheme, {\n                color: this.getColor(index)\n              }, { barBorderRadius: this.option.barRadius || 0 }),\n              label: this.getOptionLabel({\n                position: this.option.category ? \"right\" : \"top\",\n              })\n            });\n          });\n          return list;\n        })()\n      };\n      this.myChart.resize();\n      this.myChart.setOption(option, true);\n    }\n  }\n});\n\n</script>\n"]}]}