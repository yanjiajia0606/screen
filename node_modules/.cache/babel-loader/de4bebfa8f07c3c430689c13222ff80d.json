{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensStore.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensStore.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["arrays","Position","ContiguousTokensEditing","EMPTY_LINE_TOKENS","toUint32Array","LineTokens","TokenMetadata","ContiguousTokensStore","languageIdCodec","_lineTokens","_len","_languageIdCodec","topLevelLanguageId","lineIndex","lineText","rawLineTokens","lineTokens","Uint32Array","length","getDefaultMetadata","encodeLanguageId","start","deleteCount","splice","insertIndex","insertCount","i","arrayInsert","lineTextLength","_tokens","checkEquality","tokens","_massageTokens","_ensureLine","oldTokens","_equals","range","eolCount","firstLineLength","_acceptDeleteRange","_acceptInsertText","startLineNumber","startColumn","firstLineIndex","endLineNumber","endColumn","delete","deleteEnding","lastLineIndex","lastLineTokens","deleteBeginning","append","_deleteLines","position","lineNumber","insert","column","_insertLines","hasDifferentLanguageId","getLanguageId","buffer","byteOffset","byteLength","_a","_b","a","b","len"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensStore.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Position } from '../core/position.js';\nimport { ContiguousTokensEditing, EMPTY_LINE_TOKENS, toUint32Array } from './contiguousTokensEditing.js';\nimport { LineTokens } from './lineTokens.js';\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\n/**\n * Represents contiguous tokens in a text model.\n */\nexport class ContiguousTokensStore {\n    constructor(languageIdCodec) {\n        this._lineTokens = [];\n        this._len = 0;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._lineTokens = [];\n        this._len = 0;\n    }\n    getTokens(topLevelLanguageId, lineIndex, lineText) {\n        let rawLineTokens = null;\n        if (lineIndex < this._len) {\n            rawLineTokens = this._lineTokens[lineIndex];\n        }\n        if (rawLineTokens !== null && rawLineTokens !== EMPTY_LINE_TOKENS) {\n            return new LineTokens(toUint32Array(rawLineTokens), lineText, this._languageIdCodec);\n        }\n        const lineTokens = new Uint32Array(2);\n        lineTokens[0] = lineText.length;\n        lineTokens[1] = getDefaultMetadata(this._languageIdCodec.encodeLanguageId(topLevelLanguageId));\n        return new LineTokens(lineTokens, lineText, this._languageIdCodec);\n    }\n    static _massageTokens(topLevelLanguageId, lineTextLength, _tokens) {\n        const tokens = _tokens ? toUint32Array(_tokens) : null;\n        if (lineTextLength === 0) {\n            let hasDifferentLanguageId = false;\n            if (tokens && tokens.length > 1) {\n                hasDifferentLanguageId = (TokenMetadata.getLanguageId(tokens[1]) !== topLevelLanguageId);\n            }\n            if (!hasDifferentLanguageId) {\n                return EMPTY_LINE_TOKENS;\n            }\n        }\n        if (!tokens || tokens.length === 0) {\n            const tokens = new Uint32Array(2);\n            tokens[0] = lineTextLength;\n            tokens[1] = getDefaultMetadata(topLevelLanguageId);\n            return tokens.buffer;\n        }\n        // Ensure the last token covers the end of the text\n        tokens[tokens.length - 2] = lineTextLength;\n        if (tokens.byteOffset === 0 && tokens.byteLength === tokens.buffer.byteLength) {\n            // Store directly the ArrayBuffer pointer to save an object\n            return tokens.buffer;\n        }\n        return tokens;\n    }\n    _ensureLine(lineIndex) {\n        while (lineIndex >= this._len) {\n            this._lineTokens[this._len] = null;\n            this._len++;\n        }\n    }\n    _deleteLines(start, deleteCount) {\n        if (deleteCount === 0) {\n            return;\n        }\n        if (start + deleteCount > this._len) {\n            deleteCount = this._len - start;\n        }\n        this._lineTokens.splice(start, deleteCount);\n        this._len -= deleteCount;\n    }\n    _insertLines(insertIndex, insertCount) {\n        if (insertCount === 0) {\n            return;\n        }\n        const lineTokens = [];\n        for (let i = 0; i < insertCount; i++) {\n            lineTokens[i] = null;\n        }\n        this._lineTokens = arrays.arrayInsert(this._lineTokens, insertIndex, lineTokens);\n        this._len += insertCount;\n    }\n    setTokens(topLevelLanguageId, lineIndex, lineTextLength, _tokens, checkEquality) {\n        const tokens = ContiguousTokensStore._massageTokens(this._languageIdCodec.encodeLanguageId(topLevelLanguageId), lineTextLength, _tokens);\n        this._ensureLine(lineIndex);\n        const oldTokens = this._lineTokens[lineIndex];\n        this._lineTokens[lineIndex] = tokens;\n        if (checkEquality) {\n            return !ContiguousTokensStore._equals(oldTokens, tokens);\n        }\n        return false;\n    }\n    static _equals(_a, _b) {\n        if (!_a || !_b) {\n            return !_a && !_b;\n        }\n        const a = toUint32Array(_a);\n        const b = toUint32Array(_b);\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //#region Editing\n    acceptEdit(range, eolCount, firstLineLength) {\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n    }\n    _acceptDeleteRange(range) {\n        const firstLineIndex = range.startLineNumber - 1;\n        if (firstLineIndex >= this._len) {\n            return;\n        }\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            this._lineTokens[firstLineIndex] = ContiguousTokensEditing.delete(this._lineTokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n            return;\n        }\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[firstLineIndex], range.startColumn - 1);\n        const lastLineIndex = range.endLineNumber - 1;\n        let lastLineTokens = null;\n        if (lastLineIndex < this._len) {\n            lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._lineTokens[lastLineIndex], range.endColumn - 1);\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.append(this._lineTokens[firstLineIndex], lastLineTokens);\n        // Delete middle lines\n        this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n    _acceptInsertText(position, eolCount, firstLineLength) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            // Nothing to insert\n            return;\n        }\n        const lineIndex = position.lineNumber - 1;\n        if (lineIndex >= this._len) {\n            return;\n        }\n        if (eolCount === 0) {\n            // Inserting text on one line\n            this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n            return;\n        }\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[lineIndex], position.column - 1);\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n        this._insertLines(position.lineNumber, eolCount);\n    }\n}\nfunction getDefaultMetadata(topLevelLanguageId) {\n    return ((topLevelLanguageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)\n        | (0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)\n        | (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)\n        // If there is no grammar, we just take a guess and try to match brackets.\n        | (1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */)) >>> 0;\n}\n"],"mappings":"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"}]}