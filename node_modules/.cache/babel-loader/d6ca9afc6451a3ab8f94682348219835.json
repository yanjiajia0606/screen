{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/list/db.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/list/db.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgeyBnZXRMaXN0LCBnZXREZXRhaWwsIGFkZCwgdXBkYXRlLCByZW1vdmUsIGRiVGVzdCB9IGZyb20gIkAvYXBpL2RiIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7fSwKICAgICAgcXVlcnk6IHt9LAogICAgICBwYWdlOiB7CiAgICAgICAgcGFnZVNpemU6IDEwLAogICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgIHRvdGFsOiAwCiAgICAgIH0sCiAgICAgIG9wdGlvbjogewogICAgICAgIGluZGV4OiB0cnVlLAogICAgICAgIGNvcHlCdG46IHRydWUsCiAgICAgICAgbGFiZWxXaWR0aDogMTEwLAogICAgICAgIGNvbHVtbjogW3sKICAgICAgICAgIGxhYmVsOiAi5ZCN56ewIiwKICAgICAgICAgIHByb3A6ICJuYW1lIiwKICAgICAgICAgIHdpZHRoOiAxMjAsCiAgICAgICAgICBydWxlczogW3sKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXmlbDmja7mupDlkI3np7AiLAogICAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICLpqbHliqjnsbsiLAogICAgICAgICAgcHJvcDogImRyaXZlckNsYXNzIiwKICAgICAgICAgIHR5cGU6ICdzZWxlY3QnLAogICAgICAgICAgZGljRGF0YTogW3sKICAgICAgICAgICAgbGFiZWw6ICdjb20ubXlzcWwuY2ouamRiYy5Ecml2ZXInLAogICAgICAgICAgICB2YWx1ZTogJ2NvbS5teXNxbC5jai5qZGJjLkRyaXZlcicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdvcmcucG9zdGdyZXNxbC5Ecml2ZXInLAogICAgICAgICAgICB2YWx1ZTogJ29yZy5wb3N0Z3Jlc3FsLkRyaXZlcicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdvcmFjbGUuamRiYy5PcmFjbGVEcml2ZXInLAogICAgICAgICAgICB2YWx1ZTogJ29yYWNsZS5qZGJjLk9yYWNsZURyaXZlcicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdjb20ubWljcm9zb2Z0LnNxbHNlcnZlci5qZGJjLlNRTFNlcnZlckRyaXZlcicsCiAgICAgICAgICAgIHZhbHVlOiAnY29tLm1pY3Jvc29mdC5zcWxzZXJ2ZXIuamRiYy5TUUxTZXJ2ZXJEcml2ZXInCiAgICAgICAgICB9XSwKICAgICAgICAgIHdpZHRoOiAyMDAsCiAgICAgICAgICBydWxlczogW3sKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXpqbHliqjnsbsiLAogICAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICLnlKjmiLflkI0iLAogICAgICAgICAgcHJvcDogInVzZXJuYW1lIiwKICAgICAgICAgIHdpZHRoOiAxMjAsCiAgICAgICAgICBydWxlczogW3sKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXnlKjmiLflkI0iLAogICAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICLlr4bnoIEiLAogICAgICAgICAgcHJvcDogInBhc3N3b3JkIiwKICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsCiAgICAgICAgICBoaWRlOiB0cnVlLAogICAgICAgICAgcnVsZXM6IFt7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl5a+G56CBIiwKICAgICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgICB9XQogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAi6L+e5o6l5Zyw5Z2AIiwKICAgICAgICAgIHByb3A6ICJ1cmwiLAogICAgICAgICAgdHlwZTogJ3RleHRhcmVhJywKICAgICAgICAgIHNwYW46IDI0LAogICAgICAgICAgcnVsZXM6IFt7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl6L+e5o6l5Zyw5Z2AIiwKICAgICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgICB9XQogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAi5aSH5rOoIiwKICAgICAgICAgIHByb3A6ICJyZW1hcmsiLAogICAgICAgICAgc3BhbjogMjQsCiAgICAgICAgICBtaW5Sb3dzOiAzLAogICAgICAgICAgaGlkZTogdHJ1ZSwKICAgICAgICAgIHR5cGU6ICJ0ZXh0YXJlYSIKICAgICAgICB9XQogICAgICB9LAogICAgICBkYXRhOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHZhaWxkRGF0YTogZnVuY3Rpb24gdmFpbGREYXRhKGlkKSB7CiAgICAgIHJldHVybiBbMCwgMSwgMiwgM10uaW5jbHVkZXMoaWQpOwogICAgfSwKICAgIHJvd1NhdmU6IGZ1bmN0aW9uIHJvd1NhdmUocm93LCBkb25lLCBsb2FkaW5nKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIGFkZChyb3cpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLm9uTG9hZCgpOwogICAgICAgIF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8hIgogICAgICAgIH0pOwogICAgICAgIGRvbmUoKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICBsb2FkaW5nKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHJvd1VwZGF0ZTogZnVuY3Rpb24gcm93VXBkYXRlKHJvdywgaW5kZXgsIGRvbmUsIGxvYWRpbmcpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIGlmICh0aGlzLnZhaWxkRGF0YShpbmRleCkgJiYgdGhpcy4kd2Vic2l0ZS5pc0RlbW8pIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHRoaXMuJHdlYnNpdGUuaXNEZW1vVGlwKTsKICAgICAgICBkb25lKCk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHVwZGF0ZShyb3cpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGRvbmUoKTsKICAgICAgICBfdGhpczIub25Mb2FkKCk7CiAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8hIgogICAgICAgIH0pOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGxvYWRpbmcoKTsKICAgICAgfSk7CiAgICB9LAogICAgcm93RGVsOiBmdW5jdGlvbiByb3dEZWwocm93LCBpbmRleCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgaWYgKHRoaXMudmFpbGREYXRhKGluZGV4KSAmJiB0aGlzLiR3ZWJzaXRlLmlzRGVtbykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IodGhpcy4kd2Vic2l0ZS5pc0RlbW9UaXApOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICB0aGlzLiRjb25maXJtKCLnoa7lrprlsIbpgInmi6nmlbDmja7liKDpmaQ/IiwgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAi5Y+W5raIIiwKICAgICAgICB0eXBlOiAid2FybmluZyIKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHJlbW92ZShyb3cuaWQpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczMub25Mb2FkKCk7CiAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8hIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBiZWZvcmVPcGVuOiBmdW5jdGlvbiBiZWZvcmVPcGVuKGRvbmUsIHR5cGUpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIGlmIChbImVkaXQiLCAidmlldyJdLmluY2x1ZGVzKHR5cGUpKSB7CiAgICAgICAgZ2V0RGV0YWlsKHRoaXMuZm9ybS5pZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczQuZm9ybSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgZG9uZSgpOwogICAgfSwKICAgIHJlZnJlc2hDaGFuZ2U6IGZ1bmN0aW9uIHJlZnJlc2hDaGFuZ2UoKSB7CiAgICAgIHRoaXMub25Mb2FkKCk7CiAgICB9LAogICAgaGFuZGxlVGVzdDogZnVuY3Rpb24gaGFuZGxlVGVzdChmb3JtKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwogICAgICBmb3JtID0gZm9ybSB8fCB0aGlzLmZvcm07CiAgICAgIGRiVGVzdCh7CiAgICAgICAgZHJpdmVyQ2xhc3M6IGZvcm0uZHJpdmVyQ2xhc3MsCiAgICAgICAgdXJsOiBmb3JtLnVybCwKICAgICAgICB1c2VybmFtZTogZm9ybS51c2VybmFtZSwKICAgICAgICBwYXNzd29yZDogZm9ybS5wYXNzd29yZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhOwogICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5zdWNjZXNzKCfov57mjqXmiJDlip8nKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM1LiRtZXNzYWdlLmVycm9yKCfov57mjqXlpLHotKXvvIzor7fmo4Dmn6Xnm7jlhbPphY3nva7lj4LmlbAnKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9uTG9hZDogZnVuY3Rpb24gb25Mb2FkKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKICAgICAgZ2V0TGlzdCh7CiAgICAgICAgY3VycmVudDogdGhpcy5wYWdlLmN1cnJlbnRQYWdlLAogICAgICAgIHNpemU6IHRoaXMucGFnZS5wYWdlU2l6ZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgICAgX3RoaXM2LnBhZ2UudG90YWwgPSBkYXRhLnRvdGFsOwogICAgICAgIF90aGlzNi5kYXRhID0gZGF0YS5yZWNvcmRzOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";AA4BA;AACA;EACAA;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAC,UACA;YACAR;YACAS;UACA;YACAT;YACAS;UACA;YACAT;YACAS;UACA;YACAT;YACAS;UACA,EACA;UACAP;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAC;UACAC;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAG;UACAP;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAM;UACAI;UACAR;YACAC;YACAC;YACAC;UACA;QACA,GACA;UACAN;UACAC;UACAU;UACAC;UACAF;UACAH;QACA;MAEA;MACAnB;IACA;EACA;EACAyB;IACAC;MACA;IACA;IACAC;MAAA;MACAC;QACA;QACA;UACAT;UACAF;QACA;QACAY;MACA;QACAC;QACAC;MACA;IACA;IACAC;MAAA;MACA;QACA;QACAH;QACA;MACA;MACAI;QACAJ;QACA;QACA;UACAV;UACAF;QACA;MACA;QACAa;QACAC;MACA;IACA;IACAG;MAAA;MACA;QACA;QACA;MACA;MACA;QACAC;QACAC;QACAjB;MACA,GACAkB;QACA;MACA,GACAA;QACA;QACA;UACAlB;UACAF;QACA;MACA;IAEA;IACAqB;MAAA;MACA;QACAC;UACA;QACA;MACA;MACAV;IACA;IACAW;MACA;IACA;IACAC;MAAA;MACAxC;MACAyC;QACAC;QACAC;QACAC;QACAC;MACA;QACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MAAA;MACAC;QACAC;QACAC;MACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","form","query","page","pageSize","currentPage","total","option","index","copyBtn","labelWidth","column","label","prop","width","rules","required","message","trigger","type","dicData","value","hide","span","minRows","methods","vaildData","rowSave","add","done","window","loading","rowUpdate","update","rowDel","confirmButtonText","cancelButtonText","then","beforeOpen","getDetail","refreshChange","handleTest","dbTest","driverClass","url","username","password","onLoad","getList","current","size"],"sourceRoot":"src/page/list","sources":["db.vue"],"sourcesContent":["<template>\n  <avue-crud :option=\"option\"\n             :data=\"data\"\n             :page.sync=\"page\"\n             :before-open=\"beforeOpen\"\n             v-model=\"form\"\n             ref=\"crud\"\n             @row-update=\"rowUpdate\"\n             @row-save=\"rowSave\"\n             @row-del=\"rowDel\"\n             @refresh-change=\"refreshChange\"\n             @on-load=\"onLoad\">\n    <template slot=\"menuForm\">\n      <el-button type=\"primary\"\n                 size=\"small\"\n                 @click=\"handleTest()\">测试连接</el-button>\n    </template>\n    <template slot=\"menu\"\n              slot-scope=\"{row,size,type}\">\n      <el-button icon=\"el-icon-check\"\n                 :size=\"size\"\n                 :type=\"type\"\n                 @click=\"handleTest(row)\">测试连接</el-button>\n    </template>\n  </avue-crud>\n</template>\n\n<script>\nimport { getList, getDetail, add, update, remove, dbTest } from \"@/api/db\";\nexport default {\n  data () {\n    return {\n      form: {},\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        index: true,\n        copyBtn: true,\n        labelWidth: 110,\n        column: [\n          {\n            label: \"名称\",\n            prop: \"name\",\n            width: 120,\n            rules: [{\n              required: true,\n              message: \"请输入数据源名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"驱动类\",\n            prop: \"driverClass\",\n            type: 'select',\n            dicData: [\n              {\n                label: 'com.mysql.cj.jdbc.Driver',\n                value: 'com.mysql.cj.jdbc.Driver',\n              }, {\n                label: 'org.postgresql.Driver',\n                value: 'org.postgresql.Driver',\n              }, {\n                label: 'oracle.jdbc.OracleDriver',\n                value: 'oracle.jdbc.OracleDriver',\n              }, {\n                label: 'com.microsoft.sqlserver.jdbc.SQLServerDriver',\n                value: 'com.microsoft.sqlserver.jdbc.SQLServerDriver'\n              }\n            ],\n            width: 200,\n            rules: [{\n              required: true,\n              message: \"请输入驱动类\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"用户名\",\n            prop: \"username\",\n            width: 120,\n            rules: [{\n              required: true,\n              message: \"请输入用户名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"密码\",\n            prop: \"password\",\n            type: 'password',\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入密码\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"连接地址\",\n            prop: \"url\",\n            type: 'textarea',\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入连接地址\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            span: 24,\n            minRows: 3,\n            hide: true,\n            type: \"textarea\"\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  methods: {\n    vaildData (id) {\n      return [0, 1, 2, 3].includes(id)\n    },\n    rowSave (row, done, loading) {\n      add(row).then(() => {\n        this.onLoad();\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate (row, index, done, loading) {\n      if (this.vaildData(index) && this.$website.isDemo) {\n        this.$message.error(this.$website.isDemoTip)\n        done();\n        return false;\n      }\n      update(row).then(() => {\n        done();\n        this.onLoad();\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel (row, index) {\n      if (this.vaildData(index) && this.$website.isDemo) {\n        this.$message.error(this.$website.isDemoTip)\n        return false;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad();\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n\n    },\n    beforeOpen (done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    refreshChange () {\n      this.onLoad();\n    },\n    handleTest (form) {\n      form = form || this.form\n      dbTest({\n        driverClass: form.driverClass,\n        url: form.url,\n        username: form.username,\n        password: form.password\n      }).then(res => {\n        const data = res.data;\n        if (data.success) {\n          this.$message.success('连接成功')\n        } else {\n          this.$message.error('连接失败，请检查相关配置参数')\n        }\n      })\n    },\n    onLoad () {\n      getList({\n        current: this.page.currentPage,\n        size: this.page.pageSize,\n      }).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n      });\n    }\n  }\n};\n</script>\n\n<style>\n</style>"]}]}