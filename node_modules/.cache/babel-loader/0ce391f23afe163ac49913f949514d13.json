{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["strings","StringBuffer","createLineStarts","createLineStartsFast","PieceTreeTextBuffer","PieceTreeTextBufferFactory","_chunks","_bom","_cr","_lf","_crlf","_containsRTL","_containsUnusualLineTerminators","_isBasicASCII","_normalizeEOL","defaultEOL","totalEOLCount","totalCRCount","eol","_getEOL","chunks","i","len","length","str","buffer","replace","newLineStart","textBuffer","disposable","PieceTreeTextBufferBuilder","BOM","_hasPreviousChar","_previousChar","_tmpLineStarts","cr","lf","crlf","containsRTL","containsUnusualLineTerminators","isBasicASCII","chunk","startsWithUTF8BOM","UTF8_BOM_CHARACTER","substr","lastChar","charCodeAt","_acceptChunk1","allowEmptyStrings","_acceptChunk2","String","fromCharCode","lineStarts","push","normalizeEOL","_finish","lastChunk","newLineStarts"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from './pieceTreeBase.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer.js';\nexport class PieceTreeTextBufferFactory {\n    constructor(_chunks, _bom, _cr, _lf, _crlf, _containsRTL, _containsUnusualLineTerminators, _isBasicASCII, _normalizeEOL) {\n        this._chunks = _chunks;\n        this._bom = _bom;\n        this._cr = _cr;\n        this._lf = _lf;\n        this._crlf = _crlf;\n        this._containsRTL = _containsRTL;\n        this._containsUnusualLineTerminators = _containsUnusualLineTerminators;\n        this._isBasicASCII = _isBasicASCII;\n        this._normalizeEOL = _normalizeEOL;\n    }\n    _getEOL(defaultEOL) {\n        const totalEOLCount = this._cr + this._lf + this._crlf;\n        const totalCRCount = this._cr + this._crlf;\n        if (totalEOLCount === 0) {\n            // This is an empty file or a file with precisely one line\n            return (defaultEOL === 1 /* DefaultEndOfLine.LF */ ? '\\n' : '\\r\\n');\n        }\n        if (totalCRCount > totalEOLCount / 2) {\n            // More than half of the file contains \\r\\n ending lines\n            return '\\r\\n';\n        }\n        // At least one line more ends in \\n\n        return '\\n';\n    }\n    create(defaultEOL) {\n        const eol = this._getEOL(defaultEOL);\n        const chunks = this._chunks;\n        if (this._normalizeEOL &&\n            ((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n                || (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))) {\n            // Normalize pieces\n            for (let i = 0, len = chunks.length; i < len; i++) {\n                const str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n                const newLineStart = createLineStartsFast(str);\n                chunks[i] = new StringBuffer(str, newLineStart);\n            }\n        }\n        const textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n        return { textBuffer: textBuffer, disposable: textBuffer };\n    }\n}\nexport class PieceTreeTextBufferBuilder {\n    constructor() {\n        this.chunks = [];\n        this.BOM = '';\n        this._hasPreviousChar = false;\n        this._previousChar = 0;\n        this._tmpLineStarts = [];\n        this.cr = 0;\n        this.lf = 0;\n        this.crlf = 0;\n        this.containsRTL = false;\n        this.containsUnusualLineTerminators = false;\n        this.isBasicASCII = true;\n    }\n    acceptChunk(chunk) {\n        if (chunk.length === 0) {\n            return;\n        }\n        if (this.chunks.length === 0) {\n            if (strings.startsWithUTF8BOM(chunk)) {\n                this.BOM = strings.UTF8_BOM_CHARACTER;\n                chunk = chunk.substr(1);\n            }\n        }\n        const lastChar = chunk.charCodeAt(chunk.length - 1);\n        if (lastChar === 13 /* CharCode.CarriageReturn */ || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n            // last character is \\r or a high surrogate => keep it back\n            this._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n            this._hasPreviousChar = true;\n            this._previousChar = lastChar;\n        }\n        else {\n            this._acceptChunk1(chunk, false);\n            this._hasPreviousChar = false;\n            this._previousChar = lastChar;\n        }\n    }\n    _acceptChunk1(chunk, allowEmptyStrings) {\n        if (!allowEmptyStrings && chunk.length === 0) {\n            // Nothing to do\n            return;\n        }\n        if (this._hasPreviousChar) {\n            this._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n        }\n        else {\n            this._acceptChunk2(chunk);\n        }\n    }\n    _acceptChunk2(chunk) {\n        const lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n        this.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n        this.cr += lineStarts.cr;\n        this.lf += lineStarts.lf;\n        this.crlf += lineStarts.crlf;\n        if (this.isBasicASCII) {\n            this.isBasicASCII = lineStarts.isBasicASCII;\n        }\n        if (!this.isBasicASCII && !this.containsRTL) {\n            // No need to check if it is basic ASCII\n            this.containsRTL = strings.containsRTL(chunk);\n        }\n        if (!this.isBasicASCII && !this.containsUnusualLineTerminators) {\n            // No need to check if it is basic ASCII\n            this.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n        }\n    }\n    finish(normalizeEOL = true) {\n        this._finish();\n        return new PieceTreeTextBufferFactory(this.chunks, this.BOM, this.cr, this.lf, this.crlf, this.containsRTL, this.containsUnusualLineTerminators, this.isBasicASCII, normalizeEOL);\n    }\n    _finish() {\n        if (this.chunks.length === 0) {\n            this._acceptChunk1('', true);\n        }\n        if (this._hasPreviousChar) {\n            this._hasPreviousChar = false;\n            // recreate last chunk\n            const lastChunk = this.chunks[this.chunks.length - 1];\n            lastChunk.buffer += String.fromCharCode(this._previousChar);\n            const newLineStarts = createLineStartsFast(lastChunk.buffer);\n            lastChunk.lineStarts = newLineStarts;\n            if (this._previousChar === 13 /* CharCode.CarriageReturn */) {\n                this.cr++;\n            }\n        }\n    }\n}\n"],"mappings":"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"}]}