{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","_a","nls","dom","assert","createFastDomNode","Sash","RunOnceScheduler","Emitter","Disposable","applyFontInfo","StableEditorScrollState","ICodeEditorService","CodeEditorWidget","DiffReview","EditorOptions","EditorFontLigatures","stringSet","validateStringSetOption","boolean","validateBooleanOption","clampedInt","Position","Range","createStringBuilder","editorCommon","ModelDecorationOptions","IEditorWorkerService","OverviewRulerZone","LineDecoration","RenderLineInput","renderViewLine","InlineDecoration","ViewLineRenderingData","IContextKeyService","IInstantiationService","ServiceCollection","INotificationService","defaultInsertColor","defaultRemoveColor","diffBorder","diffInserted","diffInsertedOutline","diffRemoved","diffRemovedOutline","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","diffDiagonalFill","diffInsertedLineGutter","diffRemovedLineGutter","diffInsertedLine","diffRemovedLine","diffOverviewRulerInserted","diffOverviewRulerRemoved","IThemeService","getThemeTypeSelector","registerThemingParticipant","ThemeIcon","IContextMenuService","InlineDiffMargin","IClipboardService","EditorExtensionsRegistry","onUnexpectedError","IEditorProgressService","ElementSizeObserver","Codicon","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","registerIcon","isHighContrast","VisualEditorState","_contextMenuService","_clipboardService","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","filter","z","String","id","editor","changeViewZones","viewChangeAccessor","zoneId","removeZone","changeDecorations","changeAccessor","deltaDecorations","overviewRuler","newDecorations","restoreScrollState","scrollState","capture","inlineDiffMargin","dispose","zones","viewZone","suppressMouseDown","addZone","push","diff","marginDomNode","originalModel","getValueLength","restore","decorations","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","add","localize","diffRemoveIcon","remove","ttPolicy","window","trustedTypes","createPolicy","createHTML","value","DiffEditorWidget","domElement","options","codeEditorWidgetOptions","clipboardService","editorWorkerService","contextKeyService","instantiationService","codeEditorService","themeService","notificationService","contextMenuService","_editorProgressService","_onDidDispose","_register","onDidDispose","event","_onDidUpdateDiff","onDidUpdateDiff","_onDidContentSizeChange","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_codeEditorService","_contextKeyService","createScoped","_instantiationService","createChild","createKey","_themeService","_notificationService","_id","_state","_updatingDiffProgress","_domElement","_options","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","renderMarginRevertIcon","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","_updateDecorations","_containerDomElement","document","createElement","className","_getClassName","getColorTheme","style","position","height","appendChild","_overviewViewportDomElement","setClassName","setPosition","_overviewDomElement","domNode","addStandardDisposableListener","EventType","POINTER_DOWN","e","_modifiedEditor","delegateVerticalScrollbarPointerDown","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isVisible","_isHandlingScrollEvent","_elementSizeObserver","dimension","onDidChange","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","createInstance","shadow","actionBarContainer","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","contributions","getDiffEditorContributions","ctor","err","addDiffEditor","newState","done","show","next","prev","removeChild","getDomNode","ok","hasModel","createOverviewRuler","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","onDidScrollChange","scrollTopChanged","scrollLeftChanged","scrollHeightChanged","setScrollPosition","scrollLeft","scrollTop","_layoutOverviewViewport","onDidChangeViewZones","_onViewZonesChanged","onDidChangeConfiguration","getModel","hasChanged","cancel","onDidChangeHiddenAreas","onDidChangeModelContent","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","hasWidgetFocus","onDidFocusEditorWidget","set","onDidBlurEditorWidget","onDidContentSizeChange","width","getContentWidth","ONE_OVERVIEW_WIDTH","Math","max","getContentHeight","fire","contentHeight","contentWidth","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","onDidChangeModelOptions","tabSize","isInDiffRightEditorKey","onMouseDown","_b","rightButton","element","includes","lineNumber","change","changes","find","modifiedStartLineNumber","revertChange","stopPropagation","original","modified","originalRange","originalEndLineNumber","originalStartLineNumber","getLineMaxColumn","originalContent","getValueInRange","newRange","modifiedEndLineNumber","eol","getEOL","range","setStartPosition","getLineCount","setEndPosition","executeEdits","text","insertAt","fromPositions","container","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","getEditorType","EditorType","IDiffEditor","_newOptions","newOptions","changed","changedDiffEditorOptions","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","updateOptions","setEnableSplitViewResizing","model","Error","_disposeOverviewRulers","setModel","setScrollTop","_setState","_createOverviewRulers","getVisibleColumnFromPosition","getPosition","source","scrollType","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPosition","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","getSelection","getSelections","something","setSelection","ranges","setSelections","startLineNumber","endLineNumber","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealVerticalInCenter","revealHorizontal","revealRange","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","originalViewState","saveViewState","modifiedViewState","s","diffEditorState","restoreViewState","observe","focus","hasTextFocus","handlerId","payload","trigger","createDecorationsCollection","callback","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","layoutInfo","getLayoutInfo","setLayout","top","right","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","_equals","uri","warn","computeDiff","then","result","error","clean","lineChanges","foreignOriginal","getForeignViewZones","getWhitespaces","foreignModified","diffDecorations","getEditorsDiffDecorations","apply","clonedOptions","assign","inDiffEditor","scrollbar","vertical","folding","codeLens","fixedOverflowWidgets","minimap","enabled","_adjustOptionsForSubEditor","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","ariaLabel","readOnly","dropIntoEditor","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","defaultValue","verticalHasArrows","getWidth","splitPoint","layout","left","setWidth","setHeight","_computeOverviewViewport","setTop","getScrollTop","scrollHeight","getScrollHeight","computedAvailableSize","computedRepresentableSize","computedRatio","computedSliderSize","floor","computedSliderPosition","getOptions","getContainerDomNode","relayoutEditors","getOriginalEditor","getModifiedEditor","newStrategy","startLineNumberExtractor","min","mid","midStart","midEnd","lineChange","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","delta","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","theme","type","a","b","toString","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","getColor","transparent","newRemoveColor","hasChanges","equals","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","current","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","getOption","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","coordinatesConverter","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","count","originalLineNumber","modifiedLineNumber","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","viewModel","viewRange","getViewRange","map","createFakeLinesDiv","createDecoration","startColumn","endColumn","DECORATIONS","arrowRevertChange","register","description","glyphMarginClassName","asClassName","arrowRight","charDelete","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","charChanges","charChange","isCharChangeOrDelete","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedModel","modifiedViewModel","createViewZoneMarginArrow","isCharChangeOrInsert","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","onDidLayoutChange","computer","InlineViewZonesComputer","zoneIndex","zone","zoneHeightInLines","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","minWidthInPx","viewLineCounts","addRequest","getLineContent","modifiedEditorOptions","fontInfo","get","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","mightContainNonBasicASCII","mightContainRTL","lineHeight","lineDecorationsWidth","decorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","hasCharChanges","sb","maxCharsPerLine","renderedLineCount","lineIndex","lineTokens","tokenization","getLineTokens","lineContent","lineBreakData","actualDecorations","lastBreakOffset","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","extractWrapped","marginDomNode2","afterColumn","html","build","trustedhtml","innerHTML","cnt","appendASCIIString","isBasicASCII","containsRTL","output","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","marginElement","setAttribute","characterMapping","getHorizontalOffset","validateDiffWordWrap","arrow","$","lineCount","convertModelRangeToViewRange","getLineMinColumn","defaults","collector","added","addRule","lineAdded","gutterAdded","removed","lineRemoved","gutterRemoved","addedOutline","removedOutline","border","scrollbarSliderBackgroundColor","scrollbarSliderHoverBackgroundColor","scrollbarSliderActiveBackgroundColor","diffDiagonalFillColor"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport * as assert from '../../../base/common/assert.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption, clampedInt } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill, diffInsertedLineGutter, diffRemovedLineGutter, diffInsertedLine, diffRemovedLine, diffOverviewRulerInserted, diffOverviewRulerRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { isHighContrast } from '../../../platform/theme/common/theme.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, []);\n        });\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(editor);\n        // decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, newDecorations.decorations);\n        });\n        // overview ruler\n        overviewRuler === null || overviewRuler === void 0 ? void 0 : overviewRuler.setZones(newDecorations.overviewZones);\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        this._editorWorkerService = editorWorkerService;\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* editorBrowser.DiffEditorState.Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            renderMarginRevertIcon: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit'\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, dom.EventType.POINTER_DOWN, (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarPointerDown(e);\n        }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* editorBrowser.DiffEditorState.ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _disposeOverviewRulers() {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n            this._originalOverviewRuler = null;\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n            this._modifiedOverviewRuler = null;\n        }\n    }\n    _createOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        assert.ok(!this._originalOverviewRuler && !this._modifiedOverviewRuler);\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(134 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(134 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(editor.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const change = (_b = this._diffComputationResult) === null || _b === void 0 ? void 0 : _b.changes.find(c => c.modifiedStartLineNumber === lineNumber - 1 || c.modifiedStartLineNumber === lineNumber);\n                if (change) {\n                    this.revertChange(change);\n                }\n                event.event.stopPropagation();\n                this._updateDecorations();\n                return;\n            }\n        }));\n        return editor;\n    }\n    /**\n     * Reverts a change in the modified editor.\n     */\n    revertChange(change) {\n        const editor = this._modifiedEditor;\n        const original = this._originalEditor.getModel();\n        const modified = this._modifiedEditor.getModel();\n        if (!original || !modified || !editor) {\n            return;\n        }\n        const originalRange = change.originalEndLineNumber > 0 ? new Range(change.originalStartLineNumber, 1, change.originalEndLineNumber, original.getLineMaxColumn(change.originalEndLineNumber)) : null;\n        const originalContent = originalRange ? original.getValueInRange(originalRange) : null;\n        const newRange = change.modifiedEndLineNumber > 0 ? new Range(change.modifiedStartLineNumber, 1, change.modifiedEndLineNumber, modified.getLineMaxColumn(change.modifiedEndLineNumber)) : null;\n        const eol = modified.getEOL();\n        if (change.originalEndLineNumber === 0 && newRange) {\n            // Insert change.\n            // To revert: delete the new content and a linebreak (if possible)\n            let range = newRange;\n            if (change.modifiedStartLineNumber > 1) {\n                // Try to include a linebreak from before.\n                range = newRange.setStartPosition(change.modifiedStartLineNumber - 1, modified.getLineMaxColumn(change.modifiedStartLineNumber - 1));\n            }\n            else if (change.modifiedEndLineNumber < modified.getLineCount()) {\n                // Try to include the linebreak from after.\n                range = newRange.setEndPosition(change.modifiedEndLineNumber + 1, 1);\n            }\n            editor.executeEdits('diffEditor', [{\n                    range,\n                    text: '',\n                }]);\n        }\n        else if (change.modifiedEndLineNumber === 0 && originalContent !== null) {\n            // Delete change.\n            // To revert: insert the old content and a linebreak.\n            const insertAt = change.modifiedStartLineNumber < modified.getLineCount() ? new Position(change.modifiedStartLineNumber + 1, 1) : new Position(change.modifiedStartLineNumber, modified.getLineMaxColumn(change.modifiedStartLineNumber));\n            editor.executeEdits('diffEditor', [{\n                    range: Range.fromPositions(insertAt, insertAt),\n                    text: change.modifiedStartLineNumber < modified.getLineCount() ? originalContent + eol : eol + originalContent,\n                }]);\n        }\n        else if (newRange && originalContent !== null) {\n            // Modified change.\n            editor.executeEdits('diffEditor', [{\n                    range: newRange,\n                    text: originalContent,\n                }]);\n        }\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators || changed.renderMarginRevertIcon);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        this._disposeOverviewRulers();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* editorBrowser.DiffEditorState.Idle */);\n        if (model) {\n            this._createOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._modifiedEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        this._beginUpdateDecorationsTimeout = -1;\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* editorBrowser.DiffEditorState.ComputingDiff */);\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._options.ignoreTrimWhitespace, this._options.maxComputationTime).then((result) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = result;\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, this._options.renderMarginRevertIcon, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.readOnly = !this._options.originalEditable;\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        if (this._strategy) {\n            this._strategy.dispose();\n        }\n        this._strategy = newStrategy;\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IEditorWorkerService),\n    __param(5, IContextKeyService),\n    __param(6, IInstantiationService),\n    __param(7, ICodeEditorService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IContextMenuService),\n    __param(11, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(61 /* EditorOption.lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(61 /* EditorOption.lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(134 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(134 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    arrowRevertChange: ModelDecorationOptions.register({\n        description: 'diff-editor-arrow-revert-change',\n        glyphMarginClassName: 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight),\n    }),\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: 'line-insert',\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: 'line-insert',\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: 'line-delete',\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: 'line-delete',\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* Orientation.VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* SashState.Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* SashState.Disabled */ : 3 /* SashState.Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Arrows for reverting changes.\n            if (renderMarginRevertIcon) {\n                if (lineChange.modifiedEndLineNumber > 0) {\n                    result.decorations.push({\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1),\n                        options: DECORATIONS.arrowRevertChange\n                    });\n                }\n                else {\n                    const viewZone = zones.modified.find(z => z.afterLineNumber === lineChange.modifiedStartLineNumber);\n                    if (viewZone) {\n                        viewZone.marginDomNode = createViewZoneMarginArrow();\n                    }\n                }\n            }\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(46 /* EditorOption.fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(29 /* EditorOption.disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(95 /* EditorOption.scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(61 /* EditorOption.lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(133 /* EditorOption.layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(107 /* EditorOption.stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(90 /* EditorOption.renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(85 /* EditorOption.renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(47 /* EditorOption.fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isCharChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* InlineDecorationType.Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = createStringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.tokenization.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendASCIIString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendASCIIString(' char-delete');\n        }\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendASCIIString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction isCharChangeOrInsert(charChange) {\n    if (charChange.modifiedStartLineNumber === charChange.modifiedEndLineNumber) {\n        return charChange.modifiedEndColumn - charChange.modifiedStartColumn > 0;\n    }\n    return charChange.modifiedEndLineNumber - charChange.modifiedStartLineNumber > 0;\n}\nfunction isCharChangeOrDelete(charChange) {\n    if (charChange.originalStartLineNumber === charChange.originalEndLineNumber) {\n        return charChange.originalEndColumn - charChange.originalStartColumn > 0;\n    }\n    return charChange.originalEndLineNumber - charChange.originalStartLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction createViewZoneMarginArrow() {\n    const arrow = document.createElement('div');\n    arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n    return dom.$('div', {}, arrow);\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        renderMarginRevertIcon: (a.renderMarginRevertIcon !== b.renderMarginRevertIcon),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const added = theme.getColor(diffInserted);\n    if (added) {\n        collector.addRule(`.monaco-editor .char-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\n    }\n    const lineAdded = theme.getColor(diffInsertedLine) || added;\n    if (lineAdded) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-diff-editor .line-insert { background-color: ${lineAdded}; }`);\n    }\n    const gutterAdded = theme.getColor(diffInsertedLineGutter) || lineAdded;\n    if (gutterAdded) {\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${gutterAdded}; }`);\n        collector.addRule(`.monaco-editor .gutter-insert, .monaco-diff-editor .gutter-insert { background-color: ${gutterAdded}; }`);\n    }\n    const removed = theme.getColor(diffRemoved);\n    if (removed) {\n        collector.addRule(`.monaco-editor .char-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\n    }\n    const lineRemoved = theme.getColor(diffRemovedLine) || removed;\n    if (lineRemoved) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-diff-editor .line-delete { background-color: ${lineRemoved}; }`);\n    }\n    const gutterRemoved = theme.getColor(diffRemovedLineGutter) || lineRemoved;\n    if (gutterRemoved) {\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${gutterRemoved}; }`);\n        collector.addRule(`.monaco-editor .gutter-delete, .monaco-diff-editor .gutter-delete { background-color: ${gutterRemoved}; }`);\n    }\n    const addedOutline = theme.getColor(diffInsertedOutline);\n    if (addedOutline) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${addedOutline}; }`);\n    }\n    const removedOutline = theme.getColor(diffRemovedOutline);\n    if (removedOutline) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${removedOutline}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\n    }\n    const border = theme.getColor(diffBorder);\n    if (border) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\n    }\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n    if (scrollbarSliderBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n    if (scrollbarSliderHoverBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n    if (scrollbarSliderActiveBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n"],"mappings":"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"}]}