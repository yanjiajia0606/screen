{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/pictorialBar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/pictorialBar/index.vue","mtime":1671158513268},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IGNyZWF0ZSBmcm9tICcuLi8uLi9jcmVhdGUnOwpleHBvcnQgZGVmYXVsdCBjcmVhdGUoewogIG5hbWU6ICdwaWN0b3JpYWxiYXInLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIG9wdGlvbkRhdGEgPSB0aGlzLmRlZXBDbG9uZSh0aGlzLmRhdGFDaGFydCk7CiAgICAgIHZhciBzeW1ib2wgPSB0aGlzLnZhbGlkYXRlbnVsbCh0aGlzLm9wdGlvbi5zeW1ib2wpID8gJycgOiAnaW1hZ2U6Ly8nICsgdGhpcy5vcHRpb24uc3ltYm9sOwogICAgICB2YXIgY29sb3IgPSB0aGlzLm9wdGlvbi5jb2xvciB8fCAnI2ZmZic7CiAgICAgIHZhciBmb250U2l6ZSA9IHRoaXMub3B0aW9uLmZvbnRTaXplIHx8IDIwOwogICAgICB2YXIgbWF4RGF0YSA9IDA7CiAgICAgIG9wdGlvbkRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZWxlKSB7CiAgICAgICAgaWYgKGVsZS52YWx1ZSA+IG1heERhdGEpIG1heERhdGEgPSBlbGUudmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIHRvb2x0aXA6IHRoaXMuZ2V0T3B0aW9uVGlwKCksCiAgICAgICAgZ3JpZDogdGhpcy5nZXRPcHRpb25HcmlkKCksCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIG1heDogbWF4RGF0YSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIG9mZnNldDogMTAsCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIG1hcmdpbjogMTAsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi5jb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLmZvbnRTaXplIHx8IDIwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICBpbnZlcnNlOiB0cnVlLAogICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBtYXJnaW46IDEwLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24uY29sb3IgfHwgJyNmZmYnLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLm9wdGlvbi5mb250U2l6ZSB8fCAyMAogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogKG9wdGlvbkRhdGEgfHwgW10pLm1hcChmdW5jdGlvbiAoZWxlKSB7CiAgICAgICAgICAgIHJldHVybiBlbGUubmFtZTsKICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAncGljdG9yaWFsQmFyJywKICAgICAgICAgIHN5bWJvbDogc3ltYm9sLAogICAgICAgICAgc3ltYm9sUmVwZWF0OiAnZml4ZWQnLAogICAgICAgICAgc3ltYm9sTWFyZ2luOiAnNSUnLAogICAgICAgICAgc3ltYm9sQ2xpcDogdHJ1ZSwKICAgICAgICAgIHN5bWJvbFNpemU6IHRoaXMub3B0aW9uLnN5bWJvbFNpemUgfHwgMzAsCiAgICAgICAgICBzeW1ib2xCb3VuZGluZ0RhdGE6IG1heERhdGEsCiAgICAgICAgICBkYXRhOiAob3B0aW9uRGF0YSB8fCBbXSkubWFwKGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgICAgcmV0dXJuIGVsZS52YWx1ZTsKICAgICAgICAgIH0pCiAgICAgICAgfSwgewogICAgICAgICAgdHlwZTogJ3BpY3RvcmlhbEJhcicsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgb3BhY2l0eTogMC4yCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAncmlnaHQnLAogICAgICAgICAgICAgIG9mZnNldDogWzEwLCAwXSwKICAgICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi5sYWJlbENvbG9yLAogICAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLmxhYmVsRm9udFNpemUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogMCwKICAgICAgICAgIHN5bWJvbDogc3ltYm9sLAogICAgICAgICAgc3ltYm9sUmVwZWF0OiAnZml4ZWQnLAogICAgICAgICAgc3ltYm9sTWFyZ2luOiAnNSUnLAogICAgICAgICAgc3ltYm9sU2l6ZTogMzAsCiAgICAgICAgICBzeW1ib2xCb3VuZGluZ0RhdGE6IG1heERhdGEsCiAgICAgICAgICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiAoQXJyYXkuaXNBcnJheShvcHRpb25EYXRhKSA/IG9wdGlvbkRhdGEgOiBbXSkubWFwKGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgICAgICByZXR1cm4gZWxlLnZhbHVlOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0oKQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMubXlDaGFydC5yZXNpemUoKTsKICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb24sIHRydWUpOwogICAgfQogIH0KfSk7"},{"version":3,"mappings":";;;;AAOA;AACA;EACAA;EACAC;IACAC;MACA;MACA,qDACA,KACA;MACA;MACA;MACA;MACAC;QACA;MACA;MACA;QACAC;QACAC;QACAC;UACAC;UACAC;YAAAC;UAAA;UACAC;UACAC;YAAAF;UAAA;UACAG;YAAAH;UAAA;UACAI;YACAC;YACAC;cACAC;cACAC;YACA;UACA;QACA;QACAC;UACAC;UACAR;YAAAF;UAAA;UACAG;YAAAH;UAAA;UACAI;YACAC;YACAC;cACAC;cACAC;YACA;UACA;UACAG;YACA;UACA;QACA;QACAC,SACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAR;YACA;UACA;QACA,GACA;UACAE;UACAO;YACAC;cACAC;YACA;UACA;UACAC;YACAF;cACArB;cACAwB;cACAvB;cACAK;gBACAC;gBACAC;cACA;YACA;UACA;UACAiB;UACAX;UACAC;UACAC;UACAE;UACAC;UACAR;YACA,yDACA;cACA;YACA,EACA;UACA;QACA;MAEA;MAEA;MACA;IACA;EACA;AACA","names":["name","methods","updateChart","optionData","tooltip","grid","xAxis","max","splitLine","show","offset","axisTick","axisLine","axisLabel","margin","textStyle","color","fontSize","yAxis","inverse","data","series","type","symbol","symbolRepeat","symbolMargin","symbolClip","symbolSize","symbolBoundingData","itemStyle","normal","opacity","label","position","animationDuration"],"sourceRoot":"src/echart/packages/pictorialBar","sources":["index.vue"],"sourcesContent":["<template>\n  <div :class=\"[b(), className]\" :style=\"styleSizeName\">\n    <div :ref=\"id\" :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from '../../create'\nexport default create({\n  name: 'pictorialbar',\n  methods: {\n    updateChart() {\n      const optionData = this.deepClone(this.dataChart)\n      const symbol = this.validatenull(this.option.symbol)\n        ? ''\n        : 'image://' + this.option.symbol\n      const color = this.option.color || '#fff'\n      const fontSize = this.option.fontSize || 20\n      var maxData = 0\n      optionData.forEach((ele) => {\n        if (ele.value > maxData) maxData = ele.value\n      })\n      const option = {\n        tooltip: this.getOptionTip(),\n        grid: this.getOptionGrid(),\n        xAxis: {\n          max: maxData,\n          splitLine: { show: false },\n          offset: 10,\n          axisTick: { show: false },\n          axisLine: { show: false },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              color: this.option.color || '#fff',\n              fontSize: this.option.fontSize || 20,\n            },\n          },\n        },\n        yAxis: {\n          inverse: true,\n          axisTick: { show: false },\n          axisLine: { show: false },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              color: this.option.color || '#fff',\n              fontSize: this.option.fontSize || 20,\n            },\n          },\n          data: (optionData || []).map((ele) => {\n            return ele.name\n          }),\n        },\n        series: [\n          {\n            type: 'pictorialBar',\n            symbol: symbol,\n            symbolRepeat: 'fixed',\n            symbolMargin: '5%',\n            symbolClip: true,\n            symbolSize: this.option.symbolSize || 30,\n            symbolBoundingData: maxData,\n            data: (optionData || []).map((ele) => {\n              return ele.value\n            }),\n          },\n          {\n            type: 'pictorialBar',\n            itemStyle: {\n              normal: {\n                opacity: 0.2,\n              },\n            },\n            label: {\n              normal: {\n                show: true,\n                position: 'right',\n                offset: [10, 0],\n                textStyle: {\n                  color: this.option.labelColor,\n                  fontSize: this.option.labelFontSize,\n                },\n              },\n            },\n            animationDuration: 0,\n            symbol: symbol,\n            symbolRepeat: 'fixed',\n            symbolMargin: '5%',\n            symbolSize: 30,\n            symbolBoundingData: maxData,\n            data: (() => {\n              return (Array.isArray(optionData) ? optionData : []).map(\n                (ele) => {\n                  return ele.value\n                }\n              )\n            })(),\n          },\n        ],\n      }\n\n      this.myChart.resize()\n      this.myChart.setOption(option, true)\n    },\n  },\n})\n</script>\n"]}]}