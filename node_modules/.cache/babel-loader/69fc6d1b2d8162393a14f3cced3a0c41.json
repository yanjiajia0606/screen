{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["IndexTreeModel","TreeError","Iterable","ObjectTreeModel","user","list","options","rootRef","nodes","Map","nodesByIdentity","model","onDidSplice","onDidChangeCollapseState","onDidChangeRenderNodeCount","sorter","compare","a","b","element","identityProvider","children","empty","location","getElementLocation","_setChildren","preserveCollapseState","insertedElements","Set","insertedElementIds","onDidCreateNode","node","_a","tnode","add","set","id","getId","toString","call","onDidDeleteNode","has","delete","splice","Number","MAX_VALUE","Object","assign","elements","sort","bind","map","treeElement","get","collapsible","collapsed","rerender","ref","getFirstElementChild","getListIndex","getListRenderCount","isCollapsible","setCollapsible","isCollapsed","recursive","setCollapsed","expandTo","refilter","getNode","getNodeLocation","parentLocation","getParentNodeLocation","parent"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                return Object.assign(Object.assign({}, treeElement), { children: this.preserveCollapseState(treeElement.children) });\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            const collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\n            return Object.assign(Object.assign({}, treeElement), { collapsible,\n                collapsed, children: this.preserveCollapseState(treeElement.children) });\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n"],"mappings":"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"}]}