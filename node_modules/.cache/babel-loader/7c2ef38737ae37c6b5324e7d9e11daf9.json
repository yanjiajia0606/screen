{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursorCommon.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursorCommon.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Position","Range","Selection","createScopedLineTokens","CursorColumns","normalizeIndentation","autoCloseAlways","autoCloseNever","autoCloseBeforeWhitespace","chr","CursorConfiguration","languageId","modelOptions","configuration","languageConfigurationService","_cursorMoveConfigurationBrand","undefined","_languageId","options","layoutInfo","get","readOnly","tabSize","indentSize","insertSpaces","stickyTabStops","lineHeight","pageSize","Math","max","floor","height","useTabStops","wordSeparators","emptySelectionClipboard","copyWithSyntaxHighlighting","multiCursorMergeOverlapping","multiCursorPaste","autoClosingBrackets","autoClosingQuotes","autoClosingDelete","autoClosingOvertype","autoSurround","autoIndent","surroundingPairs","_electricChars","shouldAutoCloseBefore","quote","_getShouldAutoClose","bracket","autoClosingPairs","getLanguageConfiguration","getAutoClosingPairs","getSurroundingPairs","pair","open","close","_a","electricChars","electricCharacter","getElectricCharacters","char","character","context","column","scopedLineTokens","electricCharacterSupport","onElectricCharacter","firstCharOffset","str","autoCloseConfig","_getLanguageDefinedShouldAutoClose","autoCloseBeforeSet","getAutoCloseBeforeSet","c","indexOf","model","position","visibleColumnFromColumn","getLineContent","lineNumber","visibleColumn","result","columnFromVisibleColumn","minColumn","getLineMinColumn","maxColumn","getLineMaxColumn","e","hasChanged","CursorState","modelState","viewState","_cursorStateBrand","other","equals","PartialModelCursorState","PartialViewCursorState","modelSelection","selection","liftSelection","SingleCursorState","fromPositions","getSelectionStart","getPosition","fromModelState","modelSelections","states","i","len","length","fromModelSelection","selectionStart","selectionStartLeftoverVisibleColumns","leftoverVisibleColumns","_singleCursorStateBrand","_computeSelection","equalsRange","isEmpty","inSelectionMode","isBeforeOrEqual","getStartPosition","getEndPosition","EditOperationResult","type","commands","opts","_editOperationResultBrand","shouldPushStackElementBefore","shouldPushStackElementAfter","isQuote","ch"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursorCommon.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './core/position.js';\nimport { Range } from './core/range.js';\nimport { Selection } from './core/selection.js';\nimport { createScopedLineTokens } from './languages/supports.js';\nimport { CursorColumns } from './core/cursorColumns.js';\nimport { normalizeIndentation } from './core/indentation.js';\nconst autoCloseAlways = () => true;\nconst autoCloseNever = () => false;\nconst autoCloseBeforeWhitespace = (chr) => (chr === ' ' || chr === '\\t');\nexport class CursorConfiguration {\n    constructor(languageId, modelOptions, configuration, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._cursorMoveConfigurationBrand = undefined;\n        this._languageId = languageId;\n        const options = configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this.readOnly = options.get(83 /* EditorOption.readOnly */);\n        this.tabSize = modelOptions.tabSize;\n        this.indentSize = modelOptions.indentSize;\n        this.insertSpaces = modelOptions.insertSpaces;\n        this.stickyTabStops = options.get(106 /* EditorOption.stickyTabStops */);\n        this.lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this.pageSize = Math.max(1, Math.floor(layoutInfo.height / this.lineHeight) - 2);\n        this.useTabStops = options.get(118 /* EditorOption.useTabStops */);\n        this.wordSeparators = options.get(119 /* EditorOption.wordSeparators */);\n        this.emptySelectionClipboard = options.get(33 /* EditorOption.emptySelectionClipboard */);\n        this.copyWithSyntaxHighlighting = options.get(21 /* EditorOption.copyWithSyntaxHighlighting */);\n        this.multiCursorMergeOverlapping = options.get(71 /* EditorOption.multiCursorMergeOverlapping */);\n        this.multiCursorPaste = options.get(73 /* EditorOption.multiCursorPaste */);\n        this.autoClosingBrackets = options.get(5 /* EditorOption.autoClosingBrackets */);\n        this.autoClosingQuotes = options.get(8 /* EditorOption.autoClosingQuotes */);\n        this.autoClosingDelete = options.get(6 /* EditorOption.autoClosingDelete */);\n        this.autoClosingOvertype = options.get(7 /* EditorOption.autoClosingOvertype */);\n        this.autoSurround = options.get(11 /* EditorOption.autoSurround */);\n        this.autoIndent = options.get(9 /* EditorOption.autoIndent */);\n        this.surroundingPairs = {};\n        this._electricChars = null;\n        this.shouldAutoCloseBefore = {\n            quote: this._getShouldAutoClose(languageId, this.autoClosingQuotes),\n            bracket: this._getShouldAutoClose(languageId, this.autoClosingBrackets)\n        };\n        this.autoClosingPairs = this.languageConfigurationService.getLanguageConfiguration(languageId).getAutoClosingPairs();\n        const surroundingPairs = this.languageConfigurationService.getLanguageConfiguration(languageId).getSurroundingPairs();\n        if (surroundingPairs) {\n            for (const pair of surroundingPairs) {\n                this.surroundingPairs[pair.open] = pair.close;\n            }\n        }\n    }\n    static shouldRecreate(e) {\n        return (e.hasChanged(133 /* EditorOption.layoutInfo */)\n            || e.hasChanged(119 /* EditorOption.wordSeparators */)\n            || e.hasChanged(33 /* EditorOption.emptySelectionClipboard */)\n            || e.hasChanged(71 /* EditorOption.multiCursorMergeOverlapping */)\n            || e.hasChanged(73 /* EditorOption.multiCursorPaste */)\n            || e.hasChanged(5 /* EditorOption.autoClosingBrackets */)\n            || e.hasChanged(8 /* EditorOption.autoClosingQuotes */)\n            || e.hasChanged(6 /* EditorOption.autoClosingDelete */)\n            || e.hasChanged(7 /* EditorOption.autoClosingOvertype */)\n            || e.hasChanged(11 /* EditorOption.autoSurround */)\n            || e.hasChanged(118 /* EditorOption.useTabStops */)\n            || e.hasChanged(61 /* EditorOption.lineHeight */)\n            || e.hasChanged(83 /* EditorOption.readOnly */));\n    }\n    get electricChars() {\n        var _a;\n        if (!this._electricChars) {\n            this._electricChars = {};\n            const electricChars = (_a = this.languageConfigurationService.getLanguageConfiguration(this._languageId).electricCharacter) === null || _a === void 0 ? void 0 : _a.getElectricCharacters();\n            if (electricChars) {\n                for (const char of electricChars) {\n                    this._electricChars[char] = true;\n                }\n            }\n        }\n        return this._electricChars;\n    }\n    /**\n     * Should return opening bracket type to match indentation with\n     */\n    onElectricCharacter(character, context, column) {\n        const scopedLineTokens = createScopedLineTokens(context, column - 1);\n        const electricCharacterSupport = this.languageConfigurationService.getLanguageConfiguration(scopedLineTokens.languageId).electricCharacter;\n        if (!electricCharacterSupport) {\n            return null;\n        }\n        return electricCharacterSupport.onElectricCharacter(character, scopedLineTokens, column - scopedLineTokens.firstCharOffset);\n    }\n    normalizeIndentation(str) {\n        return normalizeIndentation(str, this.indentSize, this.insertSpaces);\n    }\n    _getShouldAutoClose(languageId, autoCloseConfig) {\n        switch (autoCloseConfig) {\n            case 'beforeWhitespace':\n                return autoCloseBeforeWhitespace;\n            case 'languageDefined':\n                return this._getLanguageDefinedShouldAutoClose(languageId);\n            case 'always':\n                return autoCloseAlways;\n            case 'never':\n                return autoCloseNever;\n        }\n    }\n    _getLanguageDefinedShouldAutoClose(languageId) {\n        const autoCloseBeforeSet = this.languageConfigurationService.getLanguageConfiguration(languageId).getAutoCloseBeforeSet();\n        return c => autoCloseBeforeSet.indexOf(c) !== -1;\n    }\n    /**\n     * Returns a visible column from a column.\n     * @see {@link CursorColumns}\n     */\n    visibleColumnFromColumn(model, position) {\n        return CursorColumns.visibleColumnFromColumn(model.getLineContent(position.lineNumber), position.column, this.tabSize);\n    }\n    /**\n     * Returns a visible column from a column.\n     * @see {@link CursorColumns}\n     */\n    columnFromVisibleColumn(model, lineNumber, visibleColumn) {\n        const result = CursorColumns.columnFromVisibleColumn(model.getLineContent(lineNumber), visibleColumn, this.tabSize);\n        const minColumn = model.getLineMinColumn(lineNumber);\n        if (result < minColumn) {\n            return minColumn;\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        if (result > maxColumn) {\n            return maxColumn;\n        }\n        return result;\n    }\n}\nexport class CursorState {\n    constructor(modelState, viewState) {\n        this._cursorStateBrand = undefined;\n        this.modelState = modelState;\n        this.viewState = viewState;\n    }\n    static fromModelState(modelState) {\n        return new PartialModelCursorState(modelState);\n    }\n    static fromViewState(viewState) {\n        return new PartialViewCursorState(viewState);\n    }\n    static fromModelSelection(modelSelection) {\n        const selection = Selection.liftSelection(modelSelection);\n        const modelState = new SingleCursorState(Range.fromPositions(selection.getSelectionStart()), 0, selection.getPosition(), 0);\n        return CursorState.fromModelState(modelState);\n    }\n    static fromModelSelections(modelSelections) {\n        const states = [];\n        for (let i = 0, len = modelSelections.length; i < len; i++) {\n            states[i] = this.fromModelSelection(modelSelections[i]);\n        }\n        return states;\n    }\n    equals(other) {\n        return (this.viewState.equals(other.viewState) && this.modelState.equals(other.modelState));\n    }\n}\nexport class PartialModelCursorState {\n    constructor(modelState) {\n        this.modelState = modelState;\n        this.viewState = null;\n    }\n}\nexport class PartialViewCursorState {\n    constructor(viewState) {\n        this.modelState = null;\n        this.viewState = viewState;\n    }\n}\n/**\n * Represents the cursor state on either the model or on the view model.\n */\nexport class SingleCursorState {\n    constructor(selectionStart, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns) {\n        this._singleCursorStateBrand = undefined;\n        this.selectionStart = selectionStart;\n        this.selectionStartLeftoverVisibleColumns = selectionStartLeftoverVisibleColumns;\n        this.position = position;\n        this.leftoverVisibleColumns = leftoverVisibleColumns;\n        this.selection = SingleCursorState._computeSelection(this.selectionStart, this.position);\n    }\n    equals(other) {\n        return (this.selectionStartLeftoverVisibleColumns === other.selectionStartLeftoverVisibleColumns\n            && this.leftoverVisibleColumns === other.leftoverVisibleColumns\n            && this.position.equals(other.position)\n            && this.selectionStart.equalsRange(other.selectionStart));\n    }\n    hasSelection() {\n        return (!this.selection.isEmpty() || !this.selectionStart.isEmpty());\n    }\n    move(inSelectionMode, lineNumber, column, leftoverVisibleColumns) {\n        if (inSelectionMode) {\n            // move just position\n            return new SingleCursorState(this.selectionStart, this.selectionStartLeftoverVisibleColumns, new Position(lineNumber, column), leftoverVisibleColumns);\n        }\n        else {\n            // move everything\n            return new SingleCursorState(new Range(lineNumber, column, lineNumber, column), leftoverVisibleColumns, new Position(lineNumber, column), leftoverVisibleColumns);\n        }\n    }\n    static _computeSelection(selectionStart, position) {\n        if (selectionStart.isEmpty() || !position.isBeforeOrEqual(selectionStart.getStartPosition())) {\n            return Selection.fromPositions(selectionStart.getStartPosition(), position);\n        }\n        else {\n            return Selection.fromPositions(selectionStart.getEndPosition(), position);\n        }\n    }\n}\nexport class EditOperationResult {\n    constructor(type, commands, opts) {\n        this._editOperationResultBrand = undefined;\n        this.type = type;\n        this.commands = commands;\n        this.shouldPushStackElementBefore = opts.shouldPushStackElementBefore;\n        this.shouldPushStackElementAfter = opts.shouldPushStackElementAfter;\n    }\n}\nexport function isQuote(ch) {\n    return (ch === '\\'' || ch === '\"' || ch === '`');\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,oBAAoB,IAApBA,qBAAoB,QAAQ,uBAAuB;AAC5D,IAAMC,eAAe,GAAG,SAAlBA,eAAe;EAAA,OAAS,IAAI;AAAA;AAClC,IAAMC,cAAc,GAAG,SAAjBA,cAAc;EAAA,OAAS,KAAK;AAAA;AAClC,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAIC,GAAG;EAAA,OAAMA,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,IAAI;AAAA,CAAC;AACxE,WAAaC,mBAAmB;EAC5B,6BAAYC,UAAU,EAAEC,YAAY,EAAEC,aAAa,EAAEC,4BAA4B,EAAE;IAAA;IAC/E,IAAI,CAACA,4BAA4B,GAAGA,4BAA4B;IAChE,IAAI,CAACC,6BAA6B,GAAGC,SAAS;IAC9C,IAAI,CAACC,WAAW,GAAGN,UAAU;IAC7B,IAAMO,OAAO,GAAGL,aAAa,CAACK,OAAO;IACrC,IAAMC,UAAU,GAAGD,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,8BAA8B;IACjE,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,4BAA4B;IAC3D,IAAI,CAACE,OAAO,GAAGV,YAAY,CAACU,OAAO;IACnC,IAAI,CAACC,UAAU,GAAGX,YAAY,CAACW,UAAU;IACzC,IAAI,CAACC,YAAY,GAAGZ,YAAY,CAACY,YAAY;IAC7C,IAAI,CAACC,cAAc,GAAGP,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,kCAAkC;IACxE,IAAI,CAACM,UAAU,GAAGR,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,8BAA8B;IAC/D,IAAI,CAACO,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACX,UAAU,CAACY,MAAM,GAAG,IAAI,CAACL,UAAU,CAAC,GAAG,CAAC,CAAC;IAChF,IAAI,CAACM,WAAW,GAAGd,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,+BAA+B;IAClE,IAAI,CAACa,cAAc,GAAGf,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,kCAAkC;IACxE,IAAI,CAACc,uBAAuB,GAAGhB,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,2CAA2C;IACzF,IAAI,CAACe,0BAA0B,GAAGjB,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,8CAA8C;IAC/F,IAAI,CAACgB,2BAA2B,GAAGlB,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,+CAA+C;IACjG,IAAI,CAACiB,gBAAgB,GAAGnB,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,oCAAoC;IAC3E,IAAI,CAACkB,mBAAmB,GAAGpB,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,uCAAuC;IAChF,IAAI,CAACmB,iBAAiB,GAAGrB,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,qCAAqC;IAC5E,IAAI,CAACoB,iBAAiB,GAAGtB,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,qCAAqC;IAC5E,IAAI,CAACqB,mBAAmB,GAAGvB,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,uCAAuC;IAChF,IAAI,CAACsB,YAAY,GAAGxB,OAAO,CAACE,GAAG,CAAC,EAAE,CAAC,gCAAgC;IACnE,IAAI,CAACuB,UAAU,GAAGzB,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,8BAA8B;IAC9D,IAAI,CAACwB,gBAAgB,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,qBAAqB,GAAG;MACzBC,KAAK,EAAE,IAAI,CAACC,mBAAmB,CAACrC,UAAU,EAAE,IAAI,CAAC4B,iBAAiB,CAAC;MACnEU,OAAO,EAAE,IAAI,CAACD,mBAAmB,CAACrC,UAAU,EAAE,IAAI,CAAC2B,mBAAmB;IAC1E,CAAC;IACD,IAAI,CAACY,gBAAgB,GAAG,IAAI,CAACpC,4BAA4B,CAACqC,wBAAwB,CAACxC,UAAU,CAAC,CAACyC,mBAAmB,EAAE;IACpH,IAAMR,gBAAgB,GAAG,IAAI,CAAC9B,4BAA4B,CAACqC,wBAAwB,CAACxC,UAAU,CAAC,CAAC0C,mBAAmB,EAAE;IACrH,IAAIT,gBAAgB,EAAE;MAAA,2CACCA,gBAAgB;QAAA;MAAA;QAAnC,oDAAqC;UAAA,IAA1BU,IAAI;UACX,IAAI,CAACV,gBAAgB,CAACU,IAAI,CAACC,IAAI,CAAC,GAAGD,IAAI,CAACE,KAAK;QACjD;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;EACJ;EAAC;IAAA;IAAA,KAgBD,eAAoB;MAChB,IAAIC,EAAE;MACN,IAAI,CAAC,IAAI,CAACZ,cAAc,EAAE;QACtB,IAAI,CAACA,cAAc,GAAG,CAAC,CAAC;QACxB,IAAMa,aAAa,GAAG,CAACD,EAAE,GAAG,IAAI,CAAC3C,4BAA4B,CAACqC,wBAAwB,CAAC,IAAI,CAAClC,WAAW,CAAC,CAAC0C,iBAAiB,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,qBAAqB,EAAE;QAC3L,IAAIF,aAAa,EAAE;UAAA,4CACIA,aAAa;YAAA;UAAA;YAAhC,uDAAkC;cAAA,IAAvBG,IAAI;cACX,IAAI,CAAChB,cAAc,CAACgB,IAAI,CAAC,GAAG,IAAI;YACpC;UAAC;YAAA;UAAA;YAAA;UAAA;QACL;MACJ;MACA,OAAO,IAAI,CAAChB,cAAc;IAC9B;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,6BAAoBiB,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAE;MAC5C,IAAMC,gBAAgB,GAAG9D,sBAAsB,CAAC4D,OAAO,EAAEC,MAAM,GAAG,CAAC,CAAC;MACpE,IAAME,wBAAwB,GAAG,IAAI,CAACpD,4BAA4B,CAACqC,wBAAwB,CAACc,gBAAgB,CAACtD,UAAU,CAAC,CAACgD,iBAAiB;MAC1I,IAAI,CAACO,wBAAwB,EAAE;QAC3B,OAAO,IAAI;MACf;MACA,OAAOA,wBAAwB,CAACC,mBAAmB,CAACL,SAAS,EAAEG,gBAAgB,EAAED,MAAM,GAAGC,gBAAgB,CAACG,eAAe,CAAC;IAC/H;EAAC;IAAA;IAAA,OACD,8BAAqBC,GAAG,EAAE;MACtB,OAAOhE,qBAAoB,CAACgE,GAAG,EAAE,IAAI,CAAC9C,UAAU,EAAE,IAAI,CAACC,YAAY,CAAC;IACxE;EAAC;IAAA;IAAA,OACD,6BAAoBb,UAAU,EAAE2D,eAAe,EAAE;MAC7C,QAAQA,eAAe;QACnB,KAAK,kBAAkB;UACnB,OAAO9D,yBAAyB;QACpC,KAAK,iBAAiB;UAClB,OAAO,IAAI,CAAC+D,kCAAkC,CAAC5D,UAAU,CAAC;QAC9D,KAAK,QAAQ;UACT,OAAOL,eAAe;QAC1B,KAAK,OAAO;UACR,OAAOC,cAAc;MAAC;IAElC;EAAC;IAAA;IAAA,OACD,4CAAmCI,UAAU,EAAE;MAC3C,IAAM6D,kBAAkB,GAAG,IAAI,CAAC1D,4BAA4B,CAACqC,wBAAwB,CAACxC,UAAU,CAAC,CAAC8D,qBAAqB,EAAE;MACzH,OAAO,UAAAC,CAAC;QAAA,OAAIF,kBAAkB,CAACG,OAAO,CAACD,CAAC,CAAC,KAAK,CAAC,CAAC;MAAA;IACpD;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,iCAAwBE,KAAK,EAAEC,QAAQ,EAAE;MACrC,OAAOzE,aAAa,CAAC0E,uBAAuB,CAACF,KAAK,CAACG,cAAc,CAACF,QAAQ,CAACG,UAAU,CAAC,EAAEH,QAAQ,CAACb,MAAM,EAAE,IAAI,CAAC1C,OAAO,CAAC;IAC1H;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,iCAAwBsD,KAAK,EAAEI,UAAU,EAAEC,aAAa,EAAE;MACtD,IAAMC,MAAM,GAAG9E,aAAa,CAAC+E,uBAAuB,CAACP,KAAK,CAACG,cAAc,CAACC,UAAU,CAAC,EAAEC,aAAa,EAAE,IAAI,CAAC3D,OAAO,CAAC;MACnH,IAAM8D,SAAS,GAAGR,KAAK,CAACS,gBAAgB,CAACL,UAAU,CAAC;MACpD,IAAIE,MAAM,GAAGE,SAAS,EAAE;QACpB,OAAOA,SAAS;MACpB;MACA,IAAME,SAAS,GAAGV,KAAK,CAACW,gBAAgB,CAACP,UAAU,CAAC;MACpD,IAAIE,MAAM,GAAGI,SAAS,EAAE;QACpB,OAAOA,SAAS;MACpB;MACA,OAAOJ,MAAM;IACjB;EAAC;IAAA;IAAA,OAhFD,wBAAsBM,CAAC,EAAE;MACrB,OAAQA,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,8BAA8B,IAChDD,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,kCAAkC,IACnDD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,2CAA2C,IAC3DD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,+CAA+C,IAC/DD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,oCAAoC,IACpDD,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,uCAAuC,IACtDD,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,qCAAqC,IACpDD,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,qCAAqC,IACpDD,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,uCAAuC,IACtDD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,gCAAgC,IAChDD,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,+BAA+B,IAChDD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,8BAA8B,IAC9CD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,4BAA4B;IACvD;EAAC;EAAA;AAAA;AAoEL,WAAaC,WAAW;EACpB,qBAAYC,UAAU,EAAEC,SAAS,EAAE;IAAA;IAC/B,IAAI,CAACC,iBAAiB,GAAG7E,SAAS;IAClC,IAAI,CAAC2E,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EAAC;IAAA;IAAA,OAmBD,gBAAOE,KAAK,EAAE;MACV,OAAQ,IAAI,CAACF,SAAS,CAACG,MAAM,CAACD,KAAK,CAACF,SAAS,CAAC,IAAI,IAAI,CAACD,UAAU,CAACI,MAAM,CAACD,KAAK,CAACH,UAAU,CAAC;IAC9F;EAAC;IAAA;IAAA,OApBD,wBAAsBA,UAAU,EAAE;MAC9B,OAAO,IAAIK,uBAAuB,CAACL,UAAU,CAAC;IAClD;EAAC;IAAA;IAAA,OACD,uBAAqBC,SAAS,EAAE;MAC5B,OAAO,IAAIK,sBAAsB,CAACL,SAAS,CAAC;IAChD;EAAC;IAAA;IAAA,OACD,4BAA0BM,cAAc,EAAE;MACtC,IAAMC,SAAS,GAAGjG,SAAS,CAACkG,aAAa,CAACF,cAAc,CAAC;MACzD,IAAMP,UAAU,GAAG,IAAIU,iBAAiB,CAACpG,KAAK,CAACqG,aAAa,CAACH,SAAS,CAACI,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAEJ,SAAS,CAACK,WAAW,EAAE,EAAE,CAAC,CAAC;MAC3H,OAAOd,WAAW,CAACe,cAAc,CAACd,UAAU,CAAC;IACjD;EAAC;IAAA;IAAA,OACD,6BAA2Be,eAAe,EAAE;MACxC,IAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,eAAe,CAACI,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACxDD,MAAM,CAACC,CAAC,CAAC,GAAG,IAAI,CAACG,kBAAkB,CAACL,eAAe,CAACE,CAAC,CAAC,CAAC;MAC3D;MACA,OAAOD,MAAM;IACjB;EAAC;EAAA;AAAA;AAKL,WAAaX,uBAAuB,6BAChC,iCAAYL,UAAU,EAAE;EAAA;EACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,SAAS,GAAG,IAAI;AACzB,CAAC;AAEL,WAAaK,sBAAsB,6BAC/B,gCAAYL,SAAS,EAAE;EAAA;EACnB,IAAI,CAACD,UAAU,GAAG,IAAI;EACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;AAC9B,CAAC;AAEL;AACA;AACA;AACA,WAAaS,iBAAiB;EAC1B,2BAAYW,cAAc,EAAEC,oCAAoC,EAAEpC,QAAQ,EAAEqC,sBAAsB,EAAE;IAAA;IAChG,IAAI,CAACC,uBAAuB,GAAGnG,SAAS;IACxC,IAAI,CAACgG,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,oCAAoC,GAAGA,oCAAoC;IAChF,IAAI,CAACpC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACqC,sBAAsB,GAAGA,sBAAsB;IACpD,IAAI,CAACf,SAAS,GAAGE,iBAAiB,CAACe,iBAAiB,CAAC,IAAI,CAACJ,cAAc,EAAE,IAAI,CAACnC,QAAQ,CAAC;EAC5F;EAAC;IAAA;IAAA,OACD,gBAAOiB,KAAK,EAAE;MACV,OAAQ,IAAI,CAACmB,oCAAoC,KAAKnB,KAAK,CAACmB,oCAAoC,IACzF,IAAI,CAACC,sBAAsB,KAAKpB,KAAK,CAACoB,sBAAsB,IAC5D,IAAI,CAACrC,QAAQ,CAACkB,MAAM,CAACD,KAAK,CAACjB,QAAQ,CAAC,IACpC,IAAI,CAACmC,cAAc,CAACK,WAAW,CAACvB,KAAK,CAACkB,cAAc,CAAC;IAChE;EAAC;IAAA;IAAA,OACD,wBAAe;MACX,OAAQ,CAAC,IAAI,CAACb,SAAS,CAACmB,OAAO,EAAE,IAAI,CAAC,IAAI,CAACN,cAAc,CAACM,OAAO,EAAE;IACvE;EAAC;IAAA;IAAA,OACD,cAAKC,eAAe,EAAEvC,UAAU,EAAEhB,MAAM,EAAEkD,sBAAsB,EAAE;MAC9D,IAAIK,eAAe,EAAE;QACjB;QACA,OAAO,IAAIlB,iBAAiB,CAAC,IAAI,CAACW,cAAc,EAAE,IAAI,CAACC,oCAAoC,EAAE,IAAIjH,QAAQ,CAACgF,UAAU,EAAEhB,MAAM,CAAC,EAAEkD,sBAAsB,CAAC;MAC1J,CAAC,MACI;QACD;QACA,OAAO,IAAIb,iBAAiB,CAAC,IAAIpG,KAAK,CAAC+E,UAAU,EAAEhB,MAAM,EAAEgB,UAAU,EAAEhB,MAAM,CAAC,EAAEkD,sBAAsB,EAAE,IAAIlH,QAAQ,CAACgF,UAAU,EAAEhB,MAAM,CAAC,EAAEkD,sBAAsB,CAAC;MACrK;IACJ;EAAC;IAAA;IAAA,OACD,2BAAyBF,cAAc,EAAEnC,QAAQ,EAAE;MAC/C,IAAImC,cAAc,CAACM,OAAO,EAAE,IAAI,CAACzC,QAAQ,CAAC2C,eAAe,CAACR,cAAc,CAACS,gBAAgB,EAAE,CAAC,EAAE;QAC1F,OAAOvH,SAAS,CAACoG,aAAa,CAACU,cAAc,CAACS,gBAAgB,EAAE,EAAE5C,QAAQ,CAAC;MAC/E,CAAC,MACI;QACD,OAAO3E,SAAS,CAACoG,aAAa,CAACU,cAAc,CAACU,cAAc,EAAE,EAAE7C,QAAQ,CAAC;MAC7E;IACJ;EAAC;EAAA;AAAA;AAEL,WAAa8C,mBAAmB,6BAC5B,6BAAYC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EAAA;EAC9B,IAAI,CAACC,yBAAyB,GAAG/G,SAAS;EAC1C,IAAI,CAAC4G,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACG,4BAA4B,GAAGF,IAAI,CAACE,4BAA4B;EACrE,IAAI,CAACC,2BAA2B,GAAGH,IAAI,CAACG,2BAA2B;AACvE,CAAC;AAEL,OAAO,SAASC,OAAO,CAACC,EAAE,EAAE;EACxB,OAAQA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG;AACnD"}]}