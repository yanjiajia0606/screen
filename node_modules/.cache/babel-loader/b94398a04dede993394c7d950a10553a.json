{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi4KICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCmltcG9ydCB7IEludmFsaWRCcmFja2V0QXN0Tm9kZSwgTGlzdEFzdE5vZGUsIFBhaXJBc3ROb2RlIH0gZnJvbSAnLi9hc3QuanMnOwppbXBvcnQgeyBCZWZvcmVFZGl0UG9zaXRpb25NYXBwZXIgfSBmcm9tICcuL2JlZm9yZUVkaXRQb3NpdGlvbk1hcHBlci5qcyc7CmltcG9ydCB7IFNtYWxsSW1tdXRhYmxlU2V0IH0gZnJvbSAnLi9zbWFsbEltbXV0YWJsZVNldC5qcyc7CmltcG9ydCB7IGxlbmd0aElzWmVybywgbGVuZ3RoTGVzc1RoYW4gfSBmcm9tICcuL2xlbmd0aC5qcyc7CmltcG9ydCB7IGNvbmNhdDIzVHJlZXMsIGNvbmNhdDIzVHJlZXNPZlNhbWVIZWlnaHQgfSBmcm9tICcuL2NvbmNhdDIzVHJlZXMuanMnOwppbXBvcnQgeyBOb2RlUmVhZGVyIH0gZnJvbSAnLi9ub2RlUmVhZGVyLmpzJzsKLyoqCiAqIE5vbiBpbmNyZW1lbnRhbGx5IGJ1aWx0IEFTVHMgYXJlIGltbXV0YWJsZS4KKi8KZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRG9jdW1lbnQodG9rZW5pemVyLCBlZGl0cywgb2xkTm9kZSwgY3JlYXRlSW1tdXRhYmxlTGlzdHMpIHsKICB2YXIgcGFyc2VyID0gbmV3IFBhcnNlcih0b2tlbml6ZXIsIGVkaXRzLCBvbGROb2RlLCBjcmVhdGVJbW11dGFibGVMaXN0cyk7CiAgcmV0dXJuIHBhcnNlci5wYXJzZURvY3VtZW50KCk7Cn0KLyoqCiAqIE5vbiBpbmNyZW1lbnRhbGx5IGJ1aWx0IEFTVHMgYXJlIGltbXV0YWJsZS4KKi8KdmFyIFBhcnNlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gUGFyc2VyKHRva2VuaXplciwgZWRpdHMsIG9sZE5vZGUsIGNyZWF0ZUltbXV0YWJsZUxpc3RzKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFyc2VyKTsKICAgIHRoaXMudG9rZW5pemVyID0gdG9rZW5pemVyOwogICAgdGhpcy5jcmVhdGVJbW11dGFibGVMaXN0cyA9IGNyZWF0ZUltbXV0YWJsZUxpc3RzOwogICAgdGhpcy5faXRlbXNDb25zdHJ1Y3RlZCA9IDA7CiAgICB0aGlzLl9pdGVtc0Zyb21DYWNoZSA9IDA7CiAgICBpZiAob2xkTm9kZSAmJiBjcmVhdGVJbW11dGFibGVMaXN0cykgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBzdXBwb3J0ZWQnKTsKICAgIH0KICAgIHRoaXMub2xkTm9kZVJlYWRlciA9IG9sZE5vZGUgPyBuZXcgTm9kZVJlYWRlcihvbGROb2RlKSA6IHVuZGVmaW5lZDsKICAgIHRoaXMucG9zaXRpb25NYXBwZXIgPSBuZXcgQmVmb3JlRWRpdFBvc2l0aW9uTWFwcGVyKGVkaXRzLCB0b2tlbml6ZXIubGVuZ3RoKTsKICB9CiAgX2NyZWF0ZUNsYXNzKFBhcnNlciwgW3sKICAgIGtleTogInBhcnNlRG9jdW1lbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlRG9jdW1lbnQoKSB7CiAgICAgIHRoaXMuX2l0ZW1zQ29uc3RydWN0ZWQgPSAwOwogICAgICB0aGlzLl9pdGVtc0Zyb21DYWNoZSA9IDA7CiAgICAgIHZhciByZXN1bHQgPSB0aGlzLnBhcnNlTGlzdChTbWFsbEltbXV0YWJsZVNldC5nZXRFbXB0eSgpKTsKICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICByZXN1bHQgPSBMaXN0QXN0Tm9kZS5nZXRFbXB0eSgpOwogICAgICB9CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfSwgewogICAga2V5OiAicGFyc2VMaXN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwYXJzZUxpc3Qob3BlbmVkQnJhY2tldElkcykgewogICAgICB2YXIgaXRlbXMgPSBuZXcgQXJyYXkoKTsKICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICB2YXIgdG9rZW4gPSB0aGlzLnRva2VuaXplci5wZWVrKCk7CiAgICAgICAgaWYgKCF0b2tlbiB8fCB0b2tlbi5raW5kID09PSAyIC8qIFRva2VuS2luZC5DbG9zaW5nQnJhY2tldCAqLyAmJiB0b2tlbi5icmFja2V0SWRzLmludGVyc2VjdHMob3BlbmVkQnJhY2tldElkcykpIHsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICB2YXIgY2hpbGQgPSB0aGlzLnBhcnNlQ2hpbGQob3BlbmVkQnJhY2tldElkcyk7CiAgICAgICAgaWYgKGNoaWxkLmtpbmQgPT09IDQgLyogQXN0Tm9kZUtpbmQuTGlzdCAqLyAmJiBjaGlsZC5jaGlsZHJlbkxlbmd0aCA9PT0gMCkgewogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGl0ZW1zLnB1c2goY2hpbGQpOwogICAgICB9CiAgICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gb2xkTm9kZVJlYWRlciwgYWxsIGl0ZW1zIGFyZSBjcmVhdGVkIGZyb20gc2NyYXRjaCBhbmQgbXVzdCBoYXZlIHRoZSBzYW1lIGhlaWdodC4KICAgICAgdmFyIHJlc3VsdCA9IHRoaXMub2xkTm9kZVJlYWRlciA/IGNvbmNhdDIzVHJlZXMoaXRlbXMpIDogY29uY2F0MjNUcmVlc09mU2FtZUhlaWdodChpdGVtcywgdGhpcy5jcmVhdGVJbW11dGFibGVMaXN0cyk7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfSwgewogICAga2V5OiAicGFyc2VDaGlsZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcGFyc2VDaGlsZChvcGVuZWRCcmFja2V0SWRzKSB7CiAgICAgIGlmICh0aGlzLm9sZE5vZGVSZWFkZXIpIHsKICAgICAgICB2YXIgbWF4Q2FjaGVhYmxlTGVuZ3RoID0gdGhpcy5wb3NpdGlvbk1hcHBlci5nZXREaXN0YW5jZVRvTmV4dENoYW5nZSh0aGlzLnRva2VuaXplci5vZmZzZXQpOwogICAgICAgIGlmICghbGVuZ3RoSXNaZXJvKG1heENhY2hlYWJsZUxlbmd0aCkpIHsKICAgICAgICAgIHZhciBjYWNoZWROb2RlID0gdGhpcy5vbGROb2RlUmVhZGVyLnJlYWRMb25nZXN0Tm9kZUF0KHRoaXMucG9zaXRpb25NYXBwZXIuZ2V0T2Zmc2V0QmVmb3JlQ2hhbmdlKHRoaXMudG9rZW5pemVyLm9mZnNldCksIGZ1bmN0aW9uIChjdXJOb2RlKSB7CiAgICAgICAgICAgIGlmICghbGVuZ3RoTGVzc1RoYW4oY3VyTm9kZS5sZW5ndGgsIG1heENhY2hlYWJsZUxlbmd0aCkpIHsKICAgICAgICAgICAgICAvLyBFaXRoZXIgdGhlIG5vZGUgY29udGFpbnMgZWRpdGVkIHRleHQgb3IgdG91Y2hlcyBlZGl0ZWQgdGV4dC4KICAgICAgICAgICAgICAvLyBJbiB0aGUgbGF0dGVyIGNhc2UsIGJyYWNrZXRzIG1pZ2h0IGhhdmUgYmVlbiBleHRlbmRlZCAoYGVuZGAgLT4gYGVuZGluZ2ApLCBzbyBldmVuIHRvdWNoaW5nIG5vZGVzIGNhbm5vdCBiZSByZXVzZWQuCiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBjYW5CZVJldXNlZCA9IGN1ck5vZGUuY2FuQmVSZXVzZWQob3BlbmVkQnJhY2tldElkcyk7CiAgICAgICAgICAgIHJldHVybiBjYW5CZVJldXNlZDsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKGNhY2hlZE5vZGUpIHsKICAgICAgICAgICAgdGhpcy5faXRlbXNGcm9tQ2FjaGUrKzsKICAgICAgICAgICAgdGhpcy50b2tlbml6ZXIuc2tpcChjYWNoZWROb2RlLmxlbmd0aCk7CiAgICAgICAgICAgIHJldHVybiBjYWNoZWROb2RlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLl9pdGVtc0NvbnN0cnVjdGVkKys7CiAgICAgIHZhciB0b2tlbiA9IHRoaXMudG9rZW5pemVyLnJlYWQoKTsKICAgICAgc3dpdGNoICh0b2tlbi5raW5kKSB7CiAgICAgICAgY2FzZSAyIC8qIFRva2VuS2luZC5DbG9zaW5nQnJhY2tldCAqLzoKICAgICAgICAgIHJldHVybiBuZXcgSW52YWxpZEJyYWNrZXRBc3ROb2RlKHRva2VuLmJyYWNrZXRJZHMsIHRva2VuLmxlbmd0aCk7CiAgICAgICAgY2FzZSAwIC8qIFRva2VuS2luZC5UZXh0ICovOgogICAgICAgICAgcmV0dXJuIHRva2VuLmFzdE5vZGU7CiAgICAgICAgY2FzZSAxIC8qIFRva2VuS2luZC5PcGVuaW5nQnJhY2tldCAqLzoKICAgICAgICAgIHsKICAgICAgICAgICAgdmFyIHNldCA9IG9wZW5lZEJyYWNrZXRJZHMubWVyZ2UodG9rZW4uYnJhY2tldElkcyk7CiAgICAgICAgICAgIHZhciBjaGlsZCA9IHRoaXMucGFyc2VMaXN0KHNldCk7CiAgICAgICAgICAgIHZhciBuZXh0VG9rZW4gPSB0aGlzLnRva2VuaXplci5wZWVrKCk7CiAgICAgICAgICAgIGlmIChuZXh0VG9rZW4gJiYgbmV4dFRva2VuLmtpbmQgPT09IDIgLyogVG9rZW5LaW5kLkNsb3NpbmdCcmFja2V0ICovICYmIChuZXh0VG9rZW4uYnJhY2tldElkID09PSB0b2tlbi5icmFja2V0SWQgfHwgbmV4dFRva2VuLmJyYWNrZXRJZHMuaW50ZXJzZWN0cyh0b2tlbi5icmFja2V0SWRzKSkpIHsKICAgICAgICAgICAgICB0aGlzLnRva2VuaXplci5yZWFkKCk7CiAgICAgICAgICAgICAgcmV0dXJuIFBhaXJBc3ROb2RlLmNyZWF0ZSh0b2tlbi5hc3ROb2RlLCBjaGlsZCwgbmV4dFRva2VuLmFzdE5vZGUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHJldHVybiBQYWlyQXN0Tm9kZS5jcmVhdGUodG9rZW4uYXN0Tm9kZSwgY2hpbGQsIG51bGwpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5leHBlY3RlZCcpOwogICAgICB9CiAgICB9CiAgfV0pOwogIHJldHVybiBQYXJzZXI7Cn0oKTs="},{"version":3,"names":["InvalidBracketAstNode","ListAstNode","PairAstNode","BeforeEditPositionMapper","SmallImmutableSet","lengthIsZero","lengthLessThan","concat23Trees","concat23TreesOfSameHeight","NodeReader","parseDocument","tokenizer","edits","oldNode","createImmutableLists","parser","Parser","_itemsConstructed","_itemsFromCache","Error","oldNodeReader","undefined","positionMapper","length","result","parseList","getEmpty","openedBracketIds","items","Array","token","peek","kind","bracketIds","intersects","child","parseChild","childrenLength","push","maxCacheableLength","getDistanceToNextChange","offset","cachedNode","readLongestNodeAt","getOffsetBeforeChange","curNode","canBeReused","skip","read","astNode","set","merge","nextToken","bracketId","create"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { InvalidBracketAstNode, ListAstNode, PairAstNode } from './ast.js';\nimport { BeforeEditPositionMapper } from './beforeEditPositionMapper.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\nimport { lengthIsZero, lengthLessThan } from './length.js';\nimport { concat23Trees, concat23TreesOfSameHeight } from './concat23Trees.js';\nimport { NodeReader } from './nodeReader.js';\n/**\n * Non incrementally built ASTs are immutable.\n*/\nexport function parseDocument(tokenizer, edits, oldNode, createImmutableLists) {\n    const parser = new Parser(tokenizer, edits, oldNode, createImmutableLists);\n    return parser.parseDocument();\n}\n/**\n * Non incrementally built ASTs are immutable.\n*/\nclass Parser {\n    constructor(tokenizer, edits, oldNode, createImmutableLists) {\n        this.tokenizer = tokenizer;\n        this.createImmutableLists = createImmutableLists;\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        if (oldNode && createImmutableLists) {\n            throw new Error('Not supported');\n        }\n        this.oldNodeReader = oldNode ? new NodeReader(oldNode) : undefined;\n        this.positionMapper = new BeforeEditPositionMapper(edits, tokenizer.length);\n    }\n    parseDocument() {\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        let result = this.parseList(SmallImmutableSet.getEmpty());\n        if (!result) {\n            result = ListAstNode.getEmpty();\n        }\n        return result;\n    }\n    parseList(openedBracketIds) {\n        const items = new Array();\n        while (true) {\n            const token = this.tokenizer.peek();\n            if (!token ||\n                (token.kind === 2 /* TokenKind.ClosingBracket */ &&\n                    token.bracketIds.intersects(openedBracketIds))) {\n                break;\n            }\n            const child = this.parseChild(openedBracketIds);\n            if (child.kind === 4 /* AstNodeKind.List */ && child.childrenLength === 0) {\n                continue;\n            }\n            items.push(child);\n        }\n        // When there is no oldNodeReader, all items are created from scratch and must have the same height.\n        const result = this.oldNodeReader ? concat23Trees(items) : concat23TreesOfSameHeight(items, this.createImmutableLists);\n        return result;\n    }\n    parseChild(openedBracketIds) {\n        if (this.oldNodeReader) {\n            const maxCacheableLength = this.positionMapper.getDistanceToNextChange(this.tokenizer.offset);\n            if (!lengthIsZero(maxCacheableLength)) {\n                const cachedNode = this.oldNodeReader.readLongestNodeAt(this.positionMapper.getOffsetBeforeChange(this.tokenizer.offset), curNode => {\n                    if (!lengthLessThan(curNode.length, maxCacheableLength)) {\n                        // Either the node contains edited text or touches edited text.\n                        // In the latter case, brackets might have been extended (`end` -> `ending`), so even touching nodes cannot be reused.\n                        return false;\n                    }\n                    const canBeReused = curNode.canBeReused(openedBracketIds);\n                    return canBeReused;\n                });\n                if (cachedNode) {\n                    this._itemsFromCache++;\n                    this.tokenizer.skip(cachedNode.length);\n                    return cachedNode;\n                }\n            }\n        }\n        this._itemsConstructed++;\n        const token = this.tokenizer.read();\n        switch (token.kind) {\n            case 2 /* TokenKind.ClosingBracket */:\n                return new InvalidBracketAstNode(token.bracketIds, token.length);\n            case 0 /* TokenKind.Text */:\n                return token.astNode;\n            case 1 /* TokenKind.OpeningBracket */: {\n                const set = openedBracketIds.merge(token.bracketIds);\n                const child = this.parseList(set);\n                const nextToken = this.tokenizer.peek();\n                if (nextToken &&\n                    nextToken.kind === 2 /* TokenKind.ClosingBracket */ &&\n                    (nextToken.bracketId === token.bracketId || nextToken.bracketIds.intersects(token.bracketIds))) {\n                    this.tokenizer.read();\n                    return PairAstNode.create(token.astNode, child, nextToken.astNode);\n                }\n                else {\n                    return PairAstNode.create(token.astNode, child, null);\n                }\n            }\n            default:\n                throw new Error('unexpected');\n        }\n    }\n}\n"],"mappings":"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"}]}