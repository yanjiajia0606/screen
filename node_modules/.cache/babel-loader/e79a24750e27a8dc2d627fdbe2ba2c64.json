{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/commands/shiftCommand.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/commands/shiftCommand.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","strings","CursorColumns","Range","Selection","getEnterAction","ILanguageConfigurationService","repeatCache","create","cachedStringRepeat","str","count","cache","ShiftCommand","range","opts","_languageConfigurationService","_opts","_selection","_selectionId","_useLastEditRangeForCursorEndPosition","_selectionStartColumnStaysPut","builder","text","addTrackedEditOperation","addEditOperation","model","startLine","startLineNumber","endLine","endLineNumber","endColumn","tabSize","indentSize","insertSpaces","shouldIndentEmptyLines","useTabStops","isEmpty","test","getLineContent","previousLineExtraSpaces","extraSpaces","lineNumber","lineText","indentationEndIndex","firstNonWhitespaceIndex","isUnshift","contentStartVisibleColumn","visibleColumnFromColumn","tokenization","isCheapToTokenize","enterAction","autoIndent","getLineMaxColumn","appendText","j","lenJ","charCodeAt","removeText","Math","max","desiredIndent","unshiftIndent","shiftIndent","_addEditOperation","startColumn","getLineLength","oneIndent","min","chr","trackSelection","helper","lastOp","getInverseEditOperations","result","getTrackedSelection","initialStartColumn","resultStartColumn","getDirection","line","column","indent","desiredTabStop","prevIndentTabStop","indentCount","prevRenderTabStop","nextIndentTabStop","nextRenderTabStop"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/commands/shiftCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from '../core/cursorColumns.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { getEnterAction } from '../languages/enterAction.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nconst repeatCache = Object.create(null);\nexport function cachedStringRepeat(str, count) {\n    if (count <= 0) {\n        return '';\n    }\n    if (!repeatCache[str]) {\n        repeatCache[str] = ['', str];\n    }\n    const cache = repeatCache[str];\n    for (let i = cache.length; i <= count; i++) {\n        cache[i] = cache[i - 1] + str;\n    }\n    return cache[count];\n}\nlet ShiftCommand = class ShiftCommand {\n    constructor(range, opts, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._opts = opts;\n        this._selection = range;\n        this._selectionId = null;\n        this._useLastEditRangeForCursorEndPosition = false;\n        this._selectionStartColumnStaysPut = false;\n    }\n    static unshiftIndent(line, column, tabSize, indentSize, insertSpaces) {\n        // Determine the visible column where the content starts\n        const contentStartVisibleColumn = CursorColumns.visibleColumnFromColumn(line, column, tabSize);\n        if (insertSpaces) {\n            const indent = cachedStringRepeat(' ', indentSize);\n            const desiredTabStop = CursorColumns.prevIndentTabStop(contentStartVisibleColumn, indentSize);\n            const indentCount = desiredTabStop / indentSize; // will be an integer\n            return cachedStringRepeat(indent, indentCount);\n        }\n        else {\n            const indent = '\\t';\n            const desiredTabStop = CursorColumns.prevRenderTabStop(contentStartVisibleColumn, tabSize);\n            const indentCount = desiredTabStop / tabSize; // will be an integer\n            return cachedStringRepeat(indent, indentCount);\n        }\n    }\n    static shiftIndent(line, column, tabSize, indentSize, insertSpaces) {\n        // Determine the visible column where the content starts\n        const contentStartVisibleColumn = CursorColumns.visibleColumnFromColumn(line, column, tabSize);\n        if (insertSpaces) {\n            const indent = cachedStringRepeat(' ', indentSize);\n            const desiredTabStop = CursorColumns.nextIndentTabStop(contentStartVisibleColumn, indentSize);\n            const indentCount = desiredTabStop / indentSize; // will be an integer\n            return cachedStringRepeat(indent, indentCount);\n        }\n        else {\n            const indent = '\\t';\n            const desiredTabStop = CursorColumns.nextRenderTabStop(contentStartVisibleColumn, tabSize);\n            const indentCount = desiredTabStop / tabSize; // will be an integer\n            return cachedStringRepeat(indent, indentCount);\n        }\n    }\n    _addEditOperation(builder, range, text) {\n        if (this._useLastEditRangeForCursorEndPosition) {\n            builder.addTrackedEditOperation(range, text);\n        }\n        else {\n            builder.addEditOperation(range, text);\n        }\n    }\n    getEditOperations(model, builder) {\n        const startLine = this._selection.startLineNumber;\n        let endLine = this._selection.endLineNumber;\n        if (this._selection.endColumn === 1 && startLine !== endLine) {\n            endLine = endLine - 1;\n        }\n        const { tabSize, indentSize, insertSpaces } = this._opts;\n        const shouldIndentEmptyLines = (startLine === endLine);\n        if (this._opts.useTabStops) {\n            // if indenting or outdenting on a whitespace only line\n            if (this._selection.isEmpty()) {\n                if (/^\\s*$/.test(model.getLineContent(startLine))) {\n                    this._useLastEditRangeForCursorEndPosition = true;\n                }\n            }\n            // keep track of previous line's \"miss-alignment\"\n            let previousLineExtraSpaces = 0, extraSpaces = 0;\n            for (let lineNumber = startLine; lineNumber <= endLine; lineNumber++, previousLineExtraSpaces = extraSpaces) {\n                extraSpaces = 0;\n                const lineText = model.getLineContent(lineNumber);\n                let indentationEndIndex = strings.firstNonWhitespaceIndex(lineText);\n                if (this._opts.isUnshift && (lineText.length === 0 || indentationEndIndex === 0)) {\n                    // empty line or line with no leading whitespace => nothing to do\n                    continue;\n                }\n                if (!shouldIndentEmptyLines && !this._opts.isUnshift && lineText.length === 0) {\n                    // do not indent empty lines => nothing to do\n                    continue;\n                }\n                if (indentationEndIndex === -1) {\n                    // the entire line is whitespace\n                    indentationEndIndex = lineText.length;\n                }\n                if (lineNumber > 1) {\n                    const contentStartVisibleColumn = CursorColumns.visibleColumnFromColumn(lineText, indentationEndIndex + 1, tabSize);\n                    if (contentStartVisibleColumn % indentSize !== 0) {\n                        // The current line is \"miss-aligned\", so let's see if this is expected...\n                        // This can only happen when it has trailing commas in the indent\n                        if (model.tokenization.isCheapToTokenize(lineNumber - 1)) {\n                            const enterAction = getEnterAction(this._opts.autoIndent, model, new Range(lineNumber - 1, model.getLineMaxColumn(lineNumber - 1), lineNumber - 1, model.getLineMaxColumn(lineNumber - 1)), this._languageConfigurationService);\n                            if (enterAction) {\n                                extraSpaces = previousLineExtraSpaces;\n                                if (enterAction.appendText) {\n                                    for (let j = 0, lenJ = enterAction.appendText.length; j < lenJ && extraSpaces < indentSize; j++) {\n                                        if (enterAction.appendText.charCodeAt(j) === 32 /* CharCode.Space */) {\n                                            extraSpaces++;\n                                        }\n                                        else {\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (enterAction.removeText) {\n                                    extraSpaces = Math.max(0, extraSpaces - enterAction.removeText);\n                                }\n                                // Act as if `prefixSpaces` is not part of the indentation\n                                for (let j = 0; j < extraSpaces; j++) {\n                                    if (indentationEndIndex === 0 || lineText.charCodeAt(indentationEndIndex - 1) !== 32 /* CharCode.Space */) {\n                                        break;\n                                    }\n                                    indentationEndIndex--;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._opts.isUnshift && indentationEndIndex === 0) {\n                    // line with no leading whitespace => nothing to do\n                    continue;\n                }\n                let desiredIndent;\n                if (this._opts.isUnshift) {\n                    desiredIndent = ShiftCommand.unshiftIndent(lineText, indentationEndIndex + 1, tabSize, indentSize, insertSpaces);\n                }\n                else {\n                    desiredIndent = ShiftCommand.shiftIndent(lineText, indentationEndIndex + 1, tabSize, indentSize, insertSpaces);\n                }\n                this._addEditOperation(builder, new Range(lineNumber, 1, lineNumber, indentationEndIndex + 1), desiredIndent);\n                if (lineNumber === startLine && !this._selection.isEmpty()) {\n                    // Force the startColumn to stay put because we're inserting after it\n                    this._selectionStartColumnStaysPut = (this._selection.startColumn <= indentationEndIndex + 1);\n                }\n            }\n        }\n        else {\n            // if indenting or outdenting on a whitespace only line\n            if (!this._opts.isUnshift && this._selection.isEmpty() && model.getLineLength(startLine) === 0) {\n                this._useLastEditRangeForCursorEndPosition = true;\n            }\n            const oneIndent = (insertSpaces ? cachedStringRepeat(' ', indentSize) : '\\t');\n            for (let lineNumber = startLine; lineNumber <= endLine; lineNumber++) {\n                const lineText = model.getLineContent(lineNumber);\n                let indentationEndIndex = strings.firstNonWhitespaceIndex(lineText);\n                if (this._opts.isUnshift && (lineText.length === 0 || indentationEndIndex === 0)) {\n                    // empty line or line with no leading whitespace => nothing to do\n                    continue;\n                }\n                if (!shouldIndentEmptyLines && !this._opts.isUnshift && lineText.length === 0) {\n                    // do not indent empty lines => nothing to do\n                    continue;\n                }\n                if (indentationEndIndex === -1) {\n                    // the entire line is whitespace\n                    indentationEndIndex = lineText.length;\n                }\n                if (this._opts.isUnshift && indentationEndIndex === 0) {\n                    // line with no leading whitespace => nothing to do\n                    continue;\n                }\n                if (this._opts.isUnshift) {\n                    indentationEndIndex = Math.min(indentationEndIndex, indentSize);\n                    for (let i = 0; i < indentationEndIndex; i++) {\n                        const chr = lineText.charCodeAt(i);\n                        if (chr === 9 /* CharCode.Tab */) {\n                            indentationEndIndex = i + 1;\n                            break;\n                        }\n                    }\n                    this._addEditOperation(builder, new Range(lineNumber, 1, lineNumber, indentationEndIndex + 1), '');\n                }\n                else {\n                    this._addEditOperation(builder, new Range(lineNumber, 1, lineNumber, 1), oneIndent);\n                    if (lineNumber === startLine && !this._selection.isEmpty()) {\n                        // Force the startColumn to stay put because we're inserting after it\n                        this._selectionStartColumnStaysPut = (this._selection.startColumn === 1);\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(this._selection);\n    }\n    computeCursorState(model, helper) {\n        if (this._useLastEditRangeForCursorEndPosition) {\n            const lastOp = helper.getInverseEditOperations()[0];\n            return new Selection(lastOp.range.endLineNumber, lastOp.range.endColumn, lastOp.range.endLineNumber, lastOp.range.endColumn);\n        }\n        const result = helper.getTrackedSelection(this._selectionId);\n        if (this._selectionStartColumnStaysPut) {\n            // The selection start should not move\n            const initialStartColumn = this._selection.startColumn;\n            const resultStartColumn = result.startColumn;\n            if (resultStartColumn <= initialStartColumn) {\n                return result;\n            }\n            if (result.getDirection() === 0 /* SelectionDirection.LTR */) {\n                return new Selection(result.startLineNumber, initialStartColumn, result.endLineNumber, result.endColumn);\n            }\n            return new Selection(result.endLineNumber, result.endColumn, result.startLineNumber, initialStartColumn);\n        }\n        return result;\n    }\n};\nShiftCommand = __decorate([\n    __param(2, ILanguageConfigurationService)\n], ShiftCommand);\nexport { ShiftCommand };\n"],"mappings":"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"}]}