{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["platform","RunOnceScheduler","applyFontInfo","VisibleLinesCollection","PartFingerprints","ViewPart","DomReadingContext","ViewLine","ViewLineOptions","Position","Range","LineVisibleRanges","HorizontalPosition","HorizontalRange","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","LastRenderedData","_currentVisibleRange","currentVisibleRange","HorizontalRevealRangeRequest","minimalReveal","lineNumber","startColumn","endColumn","startScrollTop","stopScrollTop","scrollType","type","minLineNumber","maxLineNumber","HorizontalRevealSelectionsRequest","selections","startLineNumber","endLineNumber","i","len","length","selection","Math","min","max","ViewLines","context","linesContent","_linesContent","_textRangeRestingSpot","document","createElement","_visibleLines","domNode","conf","_context","configuration","options","fontInfo","get","wrappingInfo","layoutInfo","_lineHeight","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_isViewportWrapping","isViewportWrapping","_revealHorizontalRightPadding","_horizontalScrollbarHeight","horizontalScrollbarHeight","_cursorSurroundingLines","_cursorSurroundingLinesStyle","_canUseLayerHinting","_viewLineOptions","theme","write","setClassName","_maxLineWidth","_asyncUpdateLineWidths","_updateLineWidthsSlow","_asyncCheckMonospaceFontAssumptions","_checkMonospaceFontAssumptions","_lastRenderedData","_horizontalRevealRequest","dispose","e","onConfigurationChanged","hasChanged","_onOptionsMaybeChanged","newViewLineOptions","equals","getStartLineNumber","getEndLineNumber","line","getVisibleLine","onOptionsChanged","rendStartLineNumber","rendEndLineNumber","r","onSelectionChanged","onDecorationsChanged","shouldRender","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","desiredScrollTop","_computeScrollTopToRevealRange","viewLayout","getFutureViewport","source","range","verticalType","newScrollPosition","validateScrollPosition","scrollTop","revealHorizontal","scrollLeft","getCurrentScrollTop","scrollTopDelta","abs","viewModel","setScrollPosition","scrollLeftChanged","scrollTopChanged","setWidth","scrollWidth","onScrollChanged","onTokensChanged","setMaxLineWidth","onZonesChanged","spanNode","offset","viewLineDomNode","_getViewLineDomNode","_getLineNumberFor","getLineCount","getLineMaxColumn","column","getColumnOfNodeOffset","minColumn","getLineMinColumn","node","nodeType","className","CLASS_NAME","parentElement","getDomNode","getWidth","_range","includeNewLines","originalEndLineNumber","intersectRanges","getCurrentVisibleRange","visibleRanges","visibleRangesLen","domReadingContext","nextLineModelLineNumber","coordinatesConverter","convertViewPositionToModelPosition","visibleRangesForLine","getVisibleRangesForRange","currentLineModelLineNumber","ranges","width","outsideRenderedLine","from","position","_visibleRangesForLineRange","left","_updateLineWidths","fast","localMaxLineWidth","allWidthsComputed","visibleLine","getWidthIsFast","_ensureMaxLineWidth","longestLineNumber","longestWidth","needsMonospaceFontCheck","lineWidth","monospaceAssumptionsAreValid","onMonospaceAssumptionsInvalidated","Error","viewportData","renderLines","setCurrentVisibleRange","visibleRange","getScrollWidth","setHeight","getScrollHeight","horizontalRevealRequest","onDidRender","newScrollLeft","_computeScrollLeftToReveal","maxHorizontalOffset","_updateLineWidthsFast","schedule","isLinux","isScheduled","setLayerHinting","setContain","adjustedScrollTop","bigNumbersDelta","setTop","setLeft","getCurrentScrollLeft","iLineWidth","ceil","viewport","viewportStartY","top","viewportHeight","height","viewportEndY","boxIsSingleRange","boxStartY","boxEndY","getVerticalOffsetForLineNumber","shouldIgnoreScrollOff","newScrollTop","desiredGapAbove","minScrollTop","boxMiddleY","_computeMinimumScrolling","getCurrentViewport","viewportStartX","viewportEndX","boxStartX","boxEndX","round","HORIZONTAL_EXTRA_PX","viewportStart","viewportEnd","boxStart","boxEnd","revealAtStart","revealAtEnd","viewportLength","boxLength"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewLines.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext, ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LineVisibleRanges, HorizontalPosition, HorizontalRange } from '../../view/renderingContext.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    constructor(context, linesContent) {\n        super(context);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(91 /* EditorOption.revealHorizontalRightPadding */);\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._cursorSurroundingLines = options.get(25 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(26 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(28 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        PartFingerprints.write(this.domNode, 7 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewLine(this._viewLineOptions);\n    }\n    // ---- end IVisibleLinesHost\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(134 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(91 /* EditorOption.revealHorizontalRightPadding */);\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._cursorSurroundingLines = options.get(25 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(26 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(28 /* EditorOption.disableLayerHinting */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(133 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(lineNumber, spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        return this._visibleLines.getVisibleLine(lineNumber).getWidth();\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const endColumn = lineNumber === range.endLineNumber ? range.endColumn : this._context.viewModel.getLineMaxColumn(lineNumber);\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges));\n        }\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        return this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot));\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    // --- implementation\n    updateLineWidths() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth());\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth();\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        if (!shouldIgnoreScrollOff) {\n            const context = Math.min((viewportHeight / this._lineHeight) / 2, this._cursorSurroundingLines);\n            boxStartY -= context * this._lineHeight;\n            boxEndY += Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                boxStartY -= this._lineHeight;\n            }\n        }\n        if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n            // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n            boxEndY += (minimalReveal ? this._horizontalScrollbarHeight : this._lineHeight);\n        }\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n/**\n * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n */\nViewLines.HORIZONTAL_EXTRA_PX = 30;\n"],"mappings":"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"}]}