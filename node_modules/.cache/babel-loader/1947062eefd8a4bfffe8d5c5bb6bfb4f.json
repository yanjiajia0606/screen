{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveCommands.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveCommands.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["types","CursorState","SingleCursorState","MoveOperations","WordOperations","Position","Range","CursorMoveCommands","viewModel","cursors","useLogicalLine","result","resultLen","i","len","length","cursor","modelState","viewState","fromModelState","translateDown","cursorConfig","model","fromViewState","translateUp","inSelectionMode","_moveToLineStart","currentViewStateColumn","position","column","currentModelStateColumn","isFirstLineOfWrappedLine","currentViewStatelineNumber","lineNumber","firstNonBlankColumn","getLineFirstNonWhitespaceColumn","isBeginningOfViewLine","_moveToLineStartByView","_moveToLineStartByModel","moveToBeginningOfLine","sticky","_moveToLineEnd","viewStatePosition","viewModelMaxColumn","getLineMaxColumn","isEndOfViewLine","modelStatePosition","modelMaxColumn","isEndLineOfWrappedLine","_moveToLineEndByModel","_moveToLineEndByView","moveToEndOfLine","startLineNumber","selection","lineCount","getLineCount","endLineNumber","endColumn","moveToBeginningOfBuffer","moveToEndOfBuffer","maxColumn","_position","_viewPosition","validatePosition","viewPosition","coordinatesConverter","validateViewPosition","convertModelPositionToViewPosition","hasSelection","selectToLineNumber","selectToColumn","enteringLineNumber","selectionStart","getStartPosition","move","selectToViewLineNumber","selectToViewColumn","endPositionOfSelectionStart","getEndPosition","word","direction","value","unit","_moveHalfLineLeft","_moveLeft","_moveHalfLineRight","_moveRight","_moveUpByViewLines","_moveUpByModelLines","_moveDownByViewLines","_moveDownByModelLines","map","moveToPrevBlankLine","moveToNextBlankLine","_moveToViewMinColumn","_moveToViewFirstNonWhitespaceColumn","_moveToViewCenterColumn","_moveToViewMaxColumn","_moveToViewLastNonWhitespaceColumn","visibleViewRange","getCompletelyVisibleViewRange","visibleModelRange","convertViewRangeToModelRange","modelLineNumber","_firstLineNumberInRange","modelColumn","_moveToModelPosition","_lastLineNumberInRange","Math","round","findPositionInViewportIfOutside","viewLineNumber","newViewLineNumber","vertical","leftoverVisibleColumns","range","count","startColumn","getLineMinColumn","min","max","noOfColumns","moveLeft","halfLine","getLineContent","moveRight","linesCount","moveDown","moveUp","toViewLineNumber","toViewColumn","toModelLineNumber","toModelColumn","viewColumn","_moveToViewPosition","getLineLastNonWhitespaceColumn","CursorMove","isCursorMoveArgs","arg","isObject","cursorMoveArg","isString","to","isUndefined","select","isBoolean","by","isNumber","description","args","name","constraint","schema","RawDirection","Left","Right","Up","Down","PrevBlankLine","NextBlankLine","WrappedLineStart","WrappedLineFirstNonWhitespaceCharacter","WrappedLineColumnCenter","WrappedLineEnd","WrappedLineLastNonWhitespaceCharacter","ViewPortTop","ViewPortCenter","ViewPortBottom","ViewPortIfOutside","RawUnit","Line","WrappedLine","Character","HalfLine","parse"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as types from '../../../base/common/types.js';\nimport { CursorState, SingleCursorState } from '../cursorCommon.js';\nimport { MoveOperations } from './cursorMoveOperations.js';\nimport { WordOperations } from './cursorWordOperations.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nexport class CursorMoveCommands {\n    static addCursorDown(viewModel, cursors, useLogicalLine) {\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[resultLen++] = new CursorState(cursor.modelState, cursor.viewState);\n            if (useLogicalLine) {\n                result[resultLen++] = CursorState.fromModelState(MoveOperations.translateDown(viewModel.cursorConfig, viewModel.model, cursor.modelState));\n            }\n            else {\n                result[resultLen++] = CursorState.fromViewState(MoveOperations.translateDown(viewModel.cursorConfig, viewModel, cursor.viewState));\n            }\n        }\n        return result;\n    }\n    static addCursorUp(viewModel, cursors, useLogicalLine) {\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[resultLen++] = new CursorState(cursor.modelState, cursor.viewState);\n            if (useLogicalLine) {\n                result[resultLen++] = CursorState.fromModelState(MoveOperations.translateUp(viewModel.cursorConfig, viewModel.model, cursor.modelState));\n            }\n            else {\n                result[resultLen++] = CursorState.fromViewState(MoveOperations.translateUp(viewModel.cursorConfig, viewModel, cursor.viewState));\n            }\n        }\n        return result;\n    }\n    static moveToBeginningOfLine(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = this._moveToLineStart(viewModel, cursor, inSelectionMode);\n        }\n        return result;\n    }\n    static _moveToLineStart(viewModel, cursor, inSelectionMode) {\n        const currentViewStateColumn = cursor.viewState.position.column;\n        const currentModelStateColumn = cursor.modelState.position.column;\n        const isFirstLineOfWrappedLine = currentViewStateColumn === currentModelStateColumn;\n        const currentViewStatelineNumber = cursor.viewState.position.lineNumber;\n        const firstNonBlankColumn = viewModel.getLineFirstNonWhitespaceColumn(currentViewStatelineNumber);\n        const isBeginningOfViewLine = currentViewStateColumn === firstNonBlankColumn;\n        if (!isFirstLineOfWrappedLine && !isBeginningOfViewLine) {\n            return this._moveToLineStartByView(viewModel, cursor, inSelectionMode);\n        }\n        else {\n            return this._moveToLineStartByModel(viewModel, cursor, inSelectionMode);\n        }\n    }\n    static _moveToLineStartByView(viewModel, cursor, inSelectionMode) {\n        return CursorState.fromViewState(MoveOperations.moveToBeginningOfLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode));\n    }\n    static _moveToLineStartByModel(viewModel, cursor, inSelectionMode) {\n        return CursorState.fromModelState(MoveOperations.moveToBeginningOfLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode));\n    }\n    static moveToEndOfLine(viewModel, cursors, inSelectionMode, sticky) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = this._moveToLineEnd(viewModel, cursor, inSelectionMode, sticky);\n        }\n        return result;\n    }\n    static _moveToLineEnd(viewModel, cursor, inSelectionMode, sticky) {\n        const viewStatePosition = cursor.viewState.position;\n        const viewModelMaxColumn = viewModel.getLineMaxColumn(viewStatePosition.lineNumber);\n        const isEndOfViewLine = viewStatePosition.column === viewModelMaxColumn;\n        const modelStatePosition = cursor.modelState.position;\n        const modelMaxColumn = viewModel.model.getLineMaxColumn(modelStatePosition.lineNumber);\n        const isEndLineOfWrappedLine = viewModelMaxColumn - viewStatePosition.column === modelMaxColumn - modelStatePosition.column;\n        if (isEndOfViewLine || isEndLineOfWrappedLine) {\n            return this._moveToLineEndByModel(viewModel, cursor, inSelectionMode, sticky);\n        }\n        else {\n            return this._moveToLineEndByView(viewModel, cursor, inSelectionMode, sticky);\n        }\n    }\n    static _moveToLineEndByView(viewModel, cursor, inSelectionMode, sticky) {\n        return CursorState.fromViewState(MoveOperations.moveToEndOfLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, sticky));\n    }\n    static _moveToLineEndByModel(viewModel, cursor, inSelectionMode, sticky) {\n        return CursorState.fromModelState(MoveOperations.moveToEndOfLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, sticky));\n    }\n    static expandLineSelection(viewModel, cursors) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const startLineNumber = cursor.modelState.selection.startLineNumber;\n            const lineCount = viewModel.model.getLineCount();\n            let endLineNumber = cursor.modelState.selection.endLineNumber;\n            let endColumn;\n            if (endLineNumber === lineCount) {\n                endColumn = viewModel.model.getLineMaxColumn(lineCount);\n            }\n            else {\n                endLineNumber++;\n                endColumn = 1;\n            }\n            result[i] = CursorState.fromModelState(new SingleCursorState(new Range(startLineNumber, 1, startLineNumber, 1), 0, new Position(endLineNumber, endColumn), 0));\n        }\n        return result;\n    }\n    static moveToBeginningOfBuffer(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromModelState(MoveOperations.moveToBeginningOfBuffer(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode));\n        }\n        return result;\n    }\n    static moveToEndOfBuffer(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromModelState(MoveOperations.moveToEndOfBuffer(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode));\n        }\n        return result;\n    }\n    static selectAll(viewModel, cursor) {\n        const lineCount = viewModel.model.getLineCount();\n        const maxColumn = viewModel.model.getLineMaxColumn(lineCount);\n        return CursorState.fromModelState(new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(lineCount, maxColumn), 0));\n    }\n    static line(viewModel, cursor, inSelectionMode, _position, _viewPosition) {\n        const position = viewModel.model.validatePosition(_position);\n        const viewPosition = (_viewPosition\n            ? viewModel.coordinatesConverter.validateViewPosition(new Position(_viewPosition.lineNumber, _viewPosition.column), position)\n            : viewModel.coordinatesConverter.convertModelPositionToViewPosition(position));\n        if (!inSelectionMode || !cursor.modelState.hasSelection()) {\n            // Entering line selection for the first time\n            const lineCount = viewModel.model.getLineCount();\n            let selectToLineNumber = position.lineNumber + 1;\n            let selectToColumn = 1;\n            if (selectToLineNumber > lineCount) {\n                selectToLineNumber = lineCount;\n                selectToColumn = viewModel.model.getLineMaxColumn(selectToLineNumber);\n            }\n            return CursorState.fromModelState(new SingleCursorState(new Range(position.lineNumber, 1, selectToLineNumber, selectToColumn), 0, new Position(selectToLineNumber, selectToColumn), 0));\n        }\n        // Continuing line selection\n        const enteringLineNumber = cursor.modelState.selectionStart.getStartPosition().lineNumber;\n        if (position.lineNumber < enteringLineNumber) {\n            return CursorState.fromViewState(cursor.viewState.move(cursor.modelState.hasSelection(), viewPosition.lineNumber, 1, 0));\n        }\n        else if (position.lineNumber > enteringLineNumber) {\n            const lineCount = viewModel.getLineCount();\n            let selectToViewLineNumber = viewPosition.lineNumber + 1;\n            let selectToViewColumn = 1;\n            if (selectToViewLineNumber > lineCount) {\n                selectToViewLineNumber = lineCount;\n                selectToViewColumn = viewModel.getLineMaxColumn(selectToViewLineNumber);\n            }\n            return CursorState.fromViewState(cursor.viewState.move(cursor.modelState.hasSelection(), selectToViewLineNumber, selectToViewColumn, 0));\n        }\n        else {\n            const endPositionOfSelectionStart = cursor.modelState.selectionStart.getEndPosition();\n            return CursorState.fromModelState(cursor.modelState.move(cursor.modelState.hasSelection(), endPositionOfSelectionStart.lineNumber, endPositionOfSelectionStart.column, 0));\n        }\n    }\n    static word(viewModel, cursor, inSelectionMode, _position) {\n        const position = viewModel.model.validatePosition(_position);\n        return CursorState.fromModelState(WordOperations.word(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, position));\n    }\n    static cancelSelection(viewModel, cursor) {\n        if (!cursor.modelState.hasSelection()) {\n            return new CursorState(cursor.modelState, cursor.viewState);\n        }\n        const lineNumber = cursor.viewState.position.lineNumber;\n        const column = cursor.viewState.position.column;\n        return CursorState.fromViewState(new SingleCursorState(new Range(lineNumber, column, lineNumber, column), 0, new Position(lineNumber, column), 0));\n    }\n    static moveTo(viewModel, cursor, inSelectionMode, _position, _viewPosition) {\n        const position = viewModel.model.validatePosition(_position);\n        const viewPosition = (_viewPosition\n            ? viewModel.coordinatesConverter.validateViewPosition(new Position(_viewPosition.lineNumber, _viewPosition.column), position)\n            : viewModel.coordinatesConverter.convertModelPositionToViewPosition(position));\n        return CursorState.fromViewState(cursor.viewState.move(inSelectionMode, viewPosition.lineNumber, viewPosition.column, 0));\n    }\n    static simpleMove(viewModel, cursors, direction, inSelectionMode, value, unit) {\n        switch (direction) {\n            case 0 /* CursorMove.Direction.Left */: {\n                if (unit === 4 /* CursorMove.Unit.HalfLine */) {\n                    // Move left by half the current line length\n                    return this._moveHalfLineLeft(viewModel, cursors, inSelectionMode);\n                }\n                else {\n                    // Move left by `moveParams.value` columns\n                    return this._moveLeft(viewModel, cursors, inSelectionMode, value);\n                }\n            }\n            case 1 /* CursorMove.Direction.Right */: {\n                if (unit === 4 /* CursorMove.Unit.HalfLine */) {\n                    // Move right by half the current line length\n                    return this._moveHalfLineRight(viewModel, cursors, inSelectionMode);\n                }\n                else {\n                    // Move right by `moveParams.value` columns\n                    return this._moveRight(viewModel, cursors, inSelectionMode, value);\n                }\n            }\n            case 2 /* CursorMove.Direction.Up */: {\n                if (unit === 2 /* CursorMove.Unit.WrappedLine */) {\n                    // Move up by view lines\n                    return this._moveUpByViewLines(viewModel, cursors, inSelectionMode, value);\n                }\n                else {\n                    // Move up by model lines\n                    return this._moveUpByModelLines(viewModel, cursors, inSelectionMode, value);\n                }\n            }\n            case 3 /* CursorMove.Direction.Down */: {\n                if (unit === 2 /* CursorMove.Unit.WrappedLine */) {\n                    // Move down by view lines\n                    return this._moveDownByViewLines(viewModel, cursors, inSelectionMode, value);\n                }\n                else {\n                    // Move down by model lines\n                    return this._moveDownByModelLines(viewModel, cursors, inSelectionMode, value);\n                }\n            }\n            case 4 /* CursorMove.Direction.PrevBlankLine */: {\n                if (unit === 2 /* CursorMove.Unit.WrappedLine */) {\n                    return cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveToPrevBlankLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode)));\n                }\n                else {\n                    return cursors.map(cursor => CursorState.fromModelState(MoveOperations.moveToPrevBlankLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode)));\n                }\n            }\n            case 5 /* CursorMove.Direction.NextBlankLine */: {\n                if (unit === 2 /* CursorMove.Unit.WrappedLine */) {\n                    return cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveToNextBlankLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode)));\n                }\n                else {\n                    return cursors.map(cursor => CursorState.fromModelState(MoveOperations.moveToNextBlankLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode)));\n                }\n            }\n            case 6 /* CursorMove.Direction.WrappedLineStart */: {\n                // Move to the beginning of the current view line\n                return this._moveToViewMinColumn(viewModel, cursors, inSelectionMode);\n            }\n            case 7 /* CursorMove.Direction.WrappedLineFirstNonWhitespaceCharacter */: {\n                // Move to the first non-whitespace column of the current view line\n                return this._moveToViewFirstNonWhitespaceColumn(viewModel, cursors, inSelectionMode);\n            }\n            case 8 /* CursorMove.Direction.WrappedLineColumnCenter */: {\n                // Move to the \"center\" of the current view line\n                return this._moveToViewCenterColumn(viewModel, cursors, inSelectionMode);\n            }\n            case 9 /* CursorMove.Direction.WrappedLineEnd */: {\n                // Move to the end of the current view line\n                return this._moveToViewMaxColumn(viewModel, cursors, inSelectionMode);\n            }\n            case 10 /* CursorMove.Direction.WrappedLineLastNonWhitespaceCharacter */: {\n                // Move to the last non-whitespace column of the current view line\n                return this._moveToViewLastNonWhitespaceColumn(viewModel, cursors, inSelectionMode);\n            }\n            default:\n                return null;\n        }\n    }\n    static viewportMove(viewModel, cursors, direction, inSelectionMode, value) {\n        const visibleViewRange = viewModel.getCompletelyVisibleViewRange();\n        const visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n        switch (direction) {\n            case 11 /* CursorMove.Direction.ViewPortTop */: {\n                // Move to the nth line start in the viewport (from the top)\n                const modelLineNumber = this._firstLineNumberInRange(viewModel.model, visibleModelRange, value);\n                const modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n                return [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n            }\n            case 13 /* CursorMove.Direction.ViewPortBottom */: {\n                // Move to the nth line start in the viewport (from the bottom)\n                const modelLineNumber = this._lastLineNumberInRange(viewModel.model, visibleModelRange, value);\n                const modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n                return [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n            }\n            case 12 /* CursorMove.Direction.ViewPortCenter */: {\n                // Move to the line start in the viewport center\n                const modelLineNumber = Math.round((visibleModelRange.startLineNumber + visibleModelRange.endLineNumber) / 2);\n                const modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n                return [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n            }\n            case 14 /* CursorMove.Direction.ViewPortIfOutside */: {\n                // Move to a position inside the viewport\n                const result = [];\n                for (let i = 0, len = cursors.length; i < len; i++) {\n                    const cursor = cursors[i];\n                    result[i] = this.findPositionInViewportIfOutside(viewModel, cursor, visibleViewRange, inSelectionMode);\n                }\n                return result;\n            }\n            default:\n                return null;\n        }\n    }\n    static findPositionInViewportIfOutside(viewModel, cursor, visibleViewRange, inSelectionMode) {\n        const viewLineNumber = cursor.viewState.position.lineNumber;\n        if (visibleViewRange.startLineNumber <= viewLineNumber && viewLineNumber <= visibleViewRange.endLineNumber - 1) {\n            // Nothing to do, cursor is in viewport\n            return new CursorState(cursor.modelState, cursor.viewState);\n        }\n        else {\n            let newViewLineNumber;\n            if (viewLineNumber > visibleViewRange.endLineNumber - 1) {\n                newViewLineNumber = visibleViewRange.endLineNumber - 1;\n            }\n            else if (viewLineNumber < visibleViewRange.startLineNumber) {\n                newViewLineNumber = visibleViewRange.startLineNumber;\n            }\n            else {\n                newViewLineNumber = viewLineNumber;\n            }\n            const position = MoveOperations.vertical(viewModel.cursorConfig, viewModel, viewLineNumber, cursor.viewState.position.column, cursor.viewState.leftoverVisibleColumns, newViewLineNumber, false);\n            return CursorState.fromViewState(cursor.viewState.move(inSelectionMode, position.lineNumber, position.column, position.leftoverVisibleColumns));\n        }\n    }\n    /**\n     * Find the nth line start included in the range (from the start).\n     */\n    static _firstLineNumberInRange(model, range, count) {\n        let startLineNumber = range.startLineNumber;\n        if (range.startColumn !== model.getLineMinColumn(startLineNumber)) {\n            // Move on to the second line if the first line start is not included in the range\n            startLineNumber++;\n        }\n        return Math.min(range.endLineNumber, startLineNumber + count - 1);\n    }\n    /**\n     * Find the nth line start included in the range (from the end).\n     */\n    static _lastLineNumberInRange(model, range, count) {\n        let startLineNumber = range.startLineNumber;\n        if (range.startColumn !== model.getLineMinColumn(startLineNumber)) {\n            // Move on to the second line if the first line start is not included in the range\n            startLineNumber++;\n        }\n        return Math.max(startLineNumber, range.endLineNumber - count + 1);\n    }\n    static _moveLeft(viewModel, cursors, inSelectionMode, noOfColumns) {\n        return cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveLeft(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, noOfColumns)));\n    }\n    static _moveHalfLineLeft(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const halfLine = Math.round(viewModel.getLineContent(viewLineNumber).length / 2);\n            result[i] = CursorState.fromViewState(MoveOperations.moveLeft(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, halfLine));\n        }\n        return result;\n    }\n    static _moveRight(viewModel, cursors, inSelectionMode, noOfColumns) {\n        return cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveRight(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, noOfColumns)));\n    }\n    static _moveHalfLineRight(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const halfLine = Math.round(viewModel.getLineContent(viewLineNumber).length / 2);\n            result[i] = CursorState.fromViewState(MoveOperations.moveRight(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, halfLine));\n        }\n        return result;\n    }\n    static _moveDownByViewLines(viewModel, cursors, inSelectionMode, linesCount) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromViewState(MoveOperations.moveDown(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, linesCount));\n        }\n        return result;\n    }\n    static _moveDownByModelLines(viewModel, cursors, inSelectionMode, linesCount) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromModelState(MoveOperations.moveDown(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, linesCount));\n        }\n        return result;\n    }\n    static _moveUpByViewLines(viewModel, cursors, inSelectionMode, linesCount) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromViewState(MoveOperations.moveUp(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, linesCount));\n        }\n        return result;\n    }\n    static _moveUpByModelLines(viewModel, cursors, inSelectionMode, linesCount) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            result[i] = CursorState.fromModelState(MoveOperations.moveUp(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, linesCount));\n        }\n        return result;\n    }\n    static _moveToViewPosition(viewModel, cursor, inSelectionMode, toViewLineNumber, toViewColumn) {\n        return CursorState.fromViewState(cursor.viewState.move(inSelectionMode, toViewLineNumber, toViewColumn, 0));\n    }\n    static _moveToModelPosition(viewModel, cursor, inSelectionMode, toModelLineNumber, toModelColumn) {\n        return CursorState.fromModelState(cursor.modelState.move(inSelectionMode, toModelLineNumber, toModelColumn, 0));\n    }\n    static _moveToViewMinColumn(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const viewColumn = viewModel.getLineMinColumn(viewLineNumber);\n            result[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n        }\n        return result;\n    }\n    static _moveToViewFirstNonWhitespaceColumn(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const viewColumn = viewModel.getLineFirstNonWhitespaceColumn(viewLineNumber);\n            result[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n        }\n        return result;\n    }\n    static _moveToViewCenterColumn(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const viewColumn = Math.round((viewModel.getLineMaxColumn(viewLineNumber) + viewModel.getLineMinColumn(viewLineNumber)) / 2);\n            result[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n        }\n        return result;\n    }\n    static _moveToViewMaxColumn(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const viewColumn = viewModel.getLineMaxColumn(viewLineNumber);\n            result[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n        }\n        return result;\n    }\n    static _moveToViewLastNonWhitespaceColumn(viewModel, cursors, inSelectionMode) {\n        const result = [];\n        for (let i = 0, len = cursors.length; i < len; i++) {\n            const cursor = cursors[i];\n            const viewLineNumber = cursor.viewState.position.lineNumber;\n            const viewColumn = viewModel.getLineLastNonWhitespaceColumn(viewLineNumber);\n            result[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n        }\n        return result;\n    }\n}\nexport var CursorMove;\n(function (CursorMove) {\n    const isCursorMoveArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const cursorMoveArg = arg;\n        if (!types.isString(cursorMoveArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.select) && !types.isBoolean(cursorMoveArg.select)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.by) && !types.isString(cursorMoveArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(cursorMoveArg.value) && !types.isNumber(cursorMoveArg.value)) {\n            return false;\n        }\n        return true;\n    };\n    CursorMove.description = {\n        description: 'Move cursor to a logical position in the view',\n        args: [\n            {\n                name: 'Cursor move argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory logical position value providing where to move the cursor.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'left', 'right', 'up', 'down', 'prevBlankLine', 'nextBlankLine',\n\t\t\t\t\t\t'wrappedLineStart', 'wrappedLineEnd', 'wrappedLineColumnCenter'\n\t\t\t\t\t\t'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineLastNonWhitespaceCharacter'\n\t\t\t\t\t\t'viewPortTop', 'viewPortCenter', 'viewPortBottom', 'viewPortIfOutside'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'character', 'halfLine'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'select': If 'true' makes the selection. Default is 'false'.\n\t\t\t\t`,\n                constraint: isCursorMoveArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['to'],\n                    'properties': {\n                        'to': {\n                            'type': 'string',\n                            'enum': ['left', 'right', 'up', 'down', 'prevBlankLine', 'nextBlankLine', 'wrappedLineStart', 'wrappedLineEnd', 'wrappedLineColumnCenter', 'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineLastNonWhitespaceCharacter', 'viewPortTop', 'viewPortCenter', 'viewPortBottom', 'viewPortIfOutside']\n                        },\n                        'by': {\n                            'type': 'string',\n                            'enum': ['line', 'wrappedLine', 'character', 'halfLine']\n                        },\n                        'value': {\n                            'type': 'number',\n                            'default': 1\n                        },\n                        'select': {\n                            'type': 'boolean',\n                            'default': false\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Positions in the view for cursor move command.\n     */\n    CursorMove.RawDirection = {\n        Left: 'left',\n        Right: 'right',\n        Up: 'up',\n        Down: 'down',\n        PrevBlankLine: 'prevBlankLine',\n        NextBlankLine: 'nextBlankLine',\n        WrappedLineStart: 'wrappedLineStart',\n        WrappedLineFirstNonWhitespaceCharacter: 'wrappedLineFirstNonWhitespaceCharacter',\n        WrappedLineColumnCenter: 'wrappedLineColumnCenter',\n        WrappedLineEnd: 'wrappedLineEnd',\n        WrappedLineLastNonWhitespaceCharacter: 'wrappedLineLastNonWhitespaceCharacter',\n        ViewPortTop: 'viewPortTop',\n        ViewPortCenter: 'viewPortCenter',\n        ViewPortBottom: 'viewPortBottom',\n        ViewPortIfOutside: 'viewPortIfOutside'\n    };\n    /**\n     * Units for Cursor move 'by' argument\n     */\n    CursorMove.RawUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Character: 'character',\n        HalfLine: 'halfLine'\n    };\n    function parse(args) {\n        if (!args.to) {\n            // illegal arguments\n            return null;\n        }\n        let direction;\n        switch (args.to) {\n            case CursorMove.RawDirection.Left:\n                direction = 0 /* Direction.Left */;\n                break;\n            case CursorMove.RawDirection.Right:\n                direction = 1 /* Direction.Right */;\n                break;\n            case CursorMove.RawDirection.Up:\n                direction = 2 /* Direction.Up */;\n                break;\n            case CursorMove.RawDirection.Down:\n                direction = 3 /* Direction.Down */;\n                break;\n            case CursorMove.RawDirection.PrevBlankLine:\n                direction = 4 /* Direction.PrevBlankLine */;\n                break;\n            case CursorMove.RawDirection.NextBlankLine:\n                direction = 5 /* Direction.NextBlankLine */;\n                break;\n            case CursorMove.RawDirection.WrappedLineStart:\n                direction = 6 /* Direction.WrappedLineStart */;\n                break;\n            case CursorMove.RawDirection.WrappedLineFirstNonWhitespaceCharacter:\n                direction = 7 /* Direction.WrappedLineFirstNonWhitespaceCharacter */;\n                break;\n            case CursorMove.RawDirection.WrappedLineColumnCenter:\n                direction = 8 /* Direction.WrappedLineColumnCenter */;\n                break;\n            case CursorMove.RawDirection.WrappedLineEnd:\n                direction = 9 /* Direction.WrappedLineEnd */;\n                break;\n            case CursorMove.RawDirection.WrappedLineLastNonWhitespaceCharacter:\n                direction = 10 /* Direction.WrappedLineLastNonWhitespaceCharacter */;\n                break;\n            case CursorMove.RawDirection.ViewPortTop:\n                direction = 11 /* Direction.ViewPortTop */;\n                break;\n            case CursorMove.RawDirection.ViewPortBottom:\n                direction = 13 /* Direction.ViewPortBottom */;\n                break;\n            case CursorMove.RawDirection.ViewPortCenter:\n                direction = 12 /* Direction.ViewPortCenter */;\n                break;\n            case CursorMove.RawDirection.ViewPortIfOutside:\n                direction = 14 /* Direction.ViewPortIfOutside */;\n                break;\n            default:\n                // illegal arguments\n                return null;\n        }\n        let unit = 0 /* Unit.None */;\n        switch (args.by) {\n            case CursorMove.RawUnit.Line:\n                unit = 1 /* Unit.Line */;\n                break;\n            case CursorMove.RawUnit.WrappedLine:\n                unit = 2 /* Unit.WrappedLine */;\n                break;\n            case CursorMove.RawUnit.Character:\n                unit = 3 /* Unit.Character */;\n                break;\n            case CursorMove.RawUnit.HalfLine:\n                unit = 4 /* Unit.HalfLine */;\n                break;\n        }\n        return {\n            direction: direction,\n            unit: unit,\n            select: (!!args.select),\n            value: (args.value || 1)\n        };\n    }\n    CursorMove.parse = parse;\n})(CursorMove || (CursorMove = {}));\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,+BAA+B;AACtD,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,oBAAoB;AACnE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,kBAAkB;AACxC,WAAaC,kBAAkB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAC3B,uBAAqBC,SAAS,EAAEC,OAAO,EAAEC,cAAc,EAAE;MACrD,IAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,SAAS,GAAG,CAAC;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACC,SAAS,EAAE,CAAC,GAAG,IAAIX,WAAW,CAACe,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,SAAS,CAAC;QAC1E,IAAIR,cAAc,EAAE;UAChBC,MAAM,CAACC,SAAS,EAAE,CAAC,GAAGX,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACiB,aAAa,CAACZ,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,CAAC,CAAC;QAC9I,CAAC,MACI;UACDN,MAAM,CAACC,SAAS,EAAE,CAAC,GAAGX,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACiB,aAAa,CAACZ,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,CAAC,CAAC;QACtI;MACJ;MACA,OAAOP,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,qBAAmBH,SAAS,EAAEC,OAAO,EAAEC,cAAc,EAAE;MACnD,IAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,SAAS,GAAG,CAAC;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACC,SAAS,EAAE,CAAC,GAAG,IAAIX,WAAW,CAACe,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,SAAS,CAAC;QAC1E,IAAIR,cAAc,EAAE;UAChBC,MAAM,CAACC,SAAS,EAAE,CAAC,GAAGX,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACqB,WAAW,CAAChB,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,CAAC,CAAC;QAC5I,CAAC,MACI;UACDN,MAAM,CAACC,SAAS,EAAE,CAAC,GAAGX,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACqB,WAAW,CAAChB,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,CAAC,CAAC;QACpI;MACJ;MACA,OAAOP,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,+BAA6BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC9D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACa,gBAAgB,CAAClB,SAAS,EAAEQ,MAAM,EAAES,eAAe,CAAC;MACzE;MACA,OAAOd,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,0BAAwBH,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAE;MACxD,IAAME,sBAAsB,GAAGX,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACC,MAAM;MAC/D,IAAMC,uBAAuB,GAAGd,MAAM,CAACC,UAAU,CAACW,QAAQ,CAACC,MAAM;MACjE,IAAME,wBAAwB,GAAGJ,sBAAsB,KAAKG,uBAAuB;MACnF,IAAME,0BAA0B,GAAGhB,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;MACvE,IAAMC,mBAAmB,GAAG1B,SAAS,CAAC2B,+BAA+B,CAACH,0BAA0B,CAAC;MACjG,IAAMI,qBAAqB,GAAGT,sBAAsB,KAAKO,mBAAmB;MAC5E,IAAI,CAACH,wBAAwB,IAAI,CAACK,qBAAqB,EAAE;QACrD,OAAO,IAAI,CAACC,sBAAsB,CAAC7B,SAAS,EAAEQ,MAAM,EAAES,eAAe,CAAC;MAC1E,CAAC,MACI;QACD,OAAO,IAAI,CAACa,uBAAuB,CAAC9B,SAAS,EAAEQ,MAAM,EAAES,eAAe,CAAC;MAC3E;IACJ;EAAC;IAAA;IAAA,OACD,gCAA8BjB,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAE;MAC9D,OAAOxB,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACoC,qBAAqB,CAAC/B,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,CAAC,CAAC;IAChJ;EAAC;IAAA;IAAA,OACD,iCAA+BjB,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAE;MAC/D,OAAOxB,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACoC,qBAAqB,CAAC/B,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,CAAC,CAAC;IACxJ;EAAC;IAAA;IAAA,OACD,yBAAuBjB,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEe,MAAM,EAAE;MAChE,IAAM7B,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAAC4B,cAAc,CAACjC,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,CAAC;MAC/E;MACA,OAAO7B,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,wBAAsBH,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,EAAE;MAC9D,IAAME,iBAAiB,GAAG1B,MAAM,CAACE,SAAS,CAACU,QAAQ;MACnD,IAAMe,kBAAkB,GAAGnC,SAAS,CAACoC,gBAAgB,CAACF,iBAAiB,CAACT,UAAU,CAAC;MACnF,IAAMY,eAAe,GAAGH,iBAAiB,CAACb,MAAM,KAAKc,kBAAkB;MACvE,IAAMG,kBAAkB,GAAG9B,MAAM,CAACC,UAAU,CAACW,QAAQ;MACrD,IAAMmB,cAAc,GAAGvC,SAAS,CAACc,KAAK,CAACsB,gBAAgB,CAACE,kBAAkB,CAACb,UAAU,CAAC;MACtF,IAAMe,sBAAsB,GAAGL,kBAAkB,GAAGD,iBAAiB,CAACb,MAAM,KAAKkB,cAAc,GAAGD,kBAAkB,CAACjB,MAAM;MAC3H,IAAIgB,eAAe,IAAIG,sBAAsB,EAAE;QAC3C,OAAO,IAAI,CAACC,qBAAqB,CAACzC,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,CAAC;MACjF,CAAC,MACI;QACD,OAAO,IAAI,CAACU,oBAAoB,CAAC1C,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,CAAC;MAChF;IACJ;EAAC;IAAA;IAAA,OACD,8BAA4BhC,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,EAAE;MACpE,OAAOvC,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACgD,eAAe,CAAC3C,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEe,MAAM,CAAC,CAAC;IAClJ;EAAC;IAAA;IAAA,OACD,+BAA6BhC,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEe,MAAM,EAAE;MACrE,OAAOvC,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACgD,eAAe,CAAC3C,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,EAAEe,MAAM,CAAC,CAAC;IAC1J;EAAC;IAAA;IAAA,OACD,6BAA2BhC,SAAS,EAAEC,OAAO,EAAE;MAC3C,IAAME,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMuC,eAAe,GAAGpC,MAAM,CAACC,UAAU,CAACoC,SAAS,CAACD,eAAe;QACnE,IAAME,SAAS,GAAG9C,SAAS,CAACc,KAAK,CAACiC,YAAY,EAAE;QAChD,IAAIC,aAAa,GAAGxC,MAAM,CAACC,UAAU,CAACoC,SAAS,CAACG,aAAa;QAC7D,IAAIC,SAAS;QACb,IAAID,aAAa,KAAKF,SAAS,EAAE;UAC7BG,SAAS,GAAGjD,SAAS,CAACc,KAAK,CAACsB,gBAAgB,CAACU,SAAS,CAAC;QAC3D,CAAC,MACI;UACDE,aAAa,EAAE;UACfC,SAAS,GAAG,CAAC;QACjB;QACA9C,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACkB,cAAc,CAAC,IAAIjB,iBAAiB,CAAC,IAAII,KAAK,CAAC8C,eAAe,EAAE,CAAC,EAAEA,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI/C,QAAQ,CAACmD,aAAa,EAAEC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAClK;MACA,OAAO9C,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,iCAA+BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAChE,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACuD,uBAAuB,CAAClD,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,CAAC,CAAC;MAC/J;MACA,OAAOd,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,2BAAyBH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC1D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACwD,iBAAiB,CAACnD,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,CAAC,CAAC;MACzJ;MACA,OAAOd,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,mBAAiBH,SAAS,EAAEQ,MAAM,EAAE;MAChC,IAAMsC,SAAS,GAAG9C,SAAS,CAACc,KAAK,CAACiC,YAAY,EAAE;MAChD,IAAMK,SAAS,GAAGpD,SAAS,CAACc,KAAK,CAACsB,gBAAgB,CAACU,SAAS,CAAC;MAC7D,OAAOrD,WAAW,CAACkB,cAAc,CAAC,IAAIjB,iBAAiB,CAAC,IAAII,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAID,QAAQ,CAACiD,SAAS,EAAEM,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7H;EAAC;IAAA;IAAA,OACD,cAAYpD,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEoC,SAAS,EAAEC,aAAa,EAAE;MACtE,IAAMlC,QAAQ,GAAGpB,SAAS,CAACc,KAAK,CAACyC,gBAAgB,CAACF,SAAS,CAAC;MAC5D,IAAMG,YAAY,GAAIF,aAAa,GAC7BtD,SAAS,CAACyD,oBAAoB,CAACC,oBAAoB,CAAC,IAAI7D,QAAQ,CAACyD,aAAa,CAAC7B,UAAU,EAAE6B,aAAa,CAACjC,MAAM,CAAC,EAAED,QAAQ,CAAC,GAC3HpB,SAAS,CAACyD,oBAAoB,CAACE,kCAAkC,CAACvC,QAAQ,CAAE;MAClF,IAAI,CAACH,eAAe,IAAI,CAACT,MAAM,CAACC,UAAU,CAACmD,YAAY,EAAE,EAAE;QACvD;QACA,IAAMd,SAAS,GAAG9C,SAAS,CAACc,KAAK,CAACiC,YAAY,EAAE;QAChD,IAAIc,kBAAkB,GAAGzC,QAAQ,CAACK,UAAU,GAAG,CAAC;QAChD,IAAIqC,cAAc,GAAG,CAAC;QACtB,IAAID,kBAAkB,GAAGf,SAAS,EAAE;UAChCe,kBAAkB,GAAGf,SAAS;UAC9BgB,cAAc,GAAG9D,SAAS,CAACc,KAAK,CAACsB,gBAAgB,CAACyB,kBAAkB,CAAC;QACzE;QACA,OAAOpE,WAAW,CAACkB,cAAc,CAAC,IAAIjB,iBAAiB,CAAC,IAAII,KAAK,CAACsB,QAAQ,CAACK,UAAU,EAAE,CAAC,EAAEoC,kBAAkB,EAAEC,cAAc,CAAC,EAAE,CAAC,EAAE,IAAIjE,QAAQ,CAACgE,kBAAkB,EAAEC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3L;MACA;MACA,IAAMC,kBAAkB,GAAGvD,MAAM,CAACC,UAAU,CAACuD,cAAc,CAACC,gBAAgB,EAAE,CAACxC,UAAU;MACzF,IAAIL,QAAQ,CAACK,UAAU,GAAGsC,kBAAkB,EAAE;QAC1C,OAAOtE,WAAW,CAACsB,aAAa,CAACP,MAAM,CAACE,SAAS,CAACwD,IAAI,CAAC1D,MAAM,CAACC,UAAU,CAACmD,YAAY,EAAE,EAAEJ,YAAY,CAAC/B,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5H,CAAC,MACI,IAAIL,QAAQ,CAACK,UAAU,GAAGsC,kBAAkB,EAAE;QAC/C,IAAMjB,UAAS,GAAG9C,SAAS,CAAC+C,YAAY,EAAE;QAC1C,IAAIoB,sBAAsB,GAAGX,YAAY,CAAC/B,UAAU,GAAG,CAAC;QACxD,IAAI2C,kBAAkB,GAAG,CAAC;QAC1B,IAAID,sBAAsB,GAAGrB,UAAS,EAAE;UACpCqB,sBAAsB,GAAGrB,UAAS;UAClCsB,kBAAkB,GAAGpE,SAAS,CAACoC,gBAAgB,CAAC+B,sBAAsB,CAAC;QAC3E;QACA,OAAO1E,WAAW,CAACsB,aAAa,CAACP,MAAM,CAACE,SAAS,CAACwD,IAAI,CAAC1D,MAAM,CAACC,UAAU,CAACmD,YAAY,EAAE,EAAEO,sBAAsB,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;MAC5I,CAAC,MACI;QACD,IAAMC,2BAA2B,GAAG7D,MAAM,CAACC,UAAU,CAACuD,cAAc,CAACM,cAAc,EAAE;QACrF,OAAO7E,WAAW,CAACkB,cAAc,CAACH,MAAM,CAACC,UAAU,CAACyD,IAAI,CAAC1D,MAAM,CAACC,UAAU,CAACmD,YAAY,EAAE,EAAES,2BAA2B,CAAC5C,UAAU,EAAE4C,2BAA2B,CAAChD,MAAM,EAAE,CAAC,CAAC,CAAC;MAC9K;IACJ;EAAC;IAAA;IAAA,OACD,cAAYrB,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEoC,SAAS,EAAE;MACvD,IAAMjC,QAAQ,GAAGpB,SAAS,CAACc,KAAK,CAACyC,gBAAgB,CAACF,SAAS,CAAC;MAC5D,OAAO5D,WAAW,CAACkB,cAAc,CAACf,cAAc,CAAC2E,IAAI,CAACvE,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,EAAEG,QAAQ,CAAC,CAAC;IACjJ;EAAC;IAAA;IAAA,OACD,yBAAuBpB,SAAS,EAAEQ,MAAM,EAAE;MACtC,IAAI,CAACA,MAAM,CAACC,UAAU,CAACmD,YAAY,EAAE,EAAE;QACnC,OAAO,IAAInE,WAAW,CAACe,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,SAAS,CAAC;MAC/D;MACA,IAAMe,UAAU,GAAGjB,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;MACvD,IAAMJ,MAAM,GAAGb,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACC,MAAM;MAC/C,OAAO5B,WAAW,CAACsB,aAAa,CAAC,IAAIrB,iBAAiB,CAAC,IAAII,KAAK,CAAC2B,UAAU,EAAEJ,MAAM,EAAEI,UAAU,EAAEJ,MAAM,CAAC,EAAE,CAAC,EAAE,IAAIxB,QAAQ,CAAC4B,UAAU,EAAEJ,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACtJ;EAAC;IAAA;IAAA,OACD,gBAAcrB,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEoC,SAAS,EAAEC,aAAa,EAAE;MACxE,IAAMlC,QAAQ,GAAGpB,SAAS,CAACc,KAAK,CAACyC,gBAAgB,CAACF,SAAS,CAAC;MAC5D,IAAMG,YAAY,GAAIF,aAAa,GAC7BtD,SAAS,CAACyD,oBAAoB,CAACC,oBAAoB,CAAC,IAAI7D,QAAQ,CAACyD,aAAa,CAAC7B,UAAU,EAAE6B,aAAa,CAACjC,MAAM,CAAC,EAAED,QAAQ,CAAC,GAC3HpB,SAAS,CAACyD,oBAAoB,CAACE,kCAAkC,CAACvC,QAAQ,CAAE;MAClF,OAAO3B,WAAW,CAACsB,aAAa,CAACP,MAAM,CAACE,SAAS,CAACwD,IAAI,CAACjD,eAAe,EAAEuC,YAAY,CAAC/B,UAAU,EAAE+B,YAAY,CAACnC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC7H;EAAC;IAAA;IAAA,OACD,oBAAkBrB,SAAS,EAAEC,OAAO,EAAEuE,SAAS,EAAEvD,eAAe,EAAEwD,KAAK,EAAEC,IAAI,EAAE;MAC3E,QAAQF,SAAS;QACb,KAAK,CAAC,CAAC;UAAiC;YACpC,IAAIE,IAAI,KAAK,CAAC,CAAC,gCAAgC;cAC3C;cACA,OAAO,IAAI,CAACC,iBAAiB,CAAC3E,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;YACtE,CAAC,MACI;cACD;cACA,OAAO,IAAI,CAAC2D,SAAS,CAAC5E,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YACrE;UACJ;QACA,KAAK,CAAC,CAAC;UAAkC;YACrC,IAAIC,IAAI,KAAK,CAAC,CAAC,gCAAgC;cAC3C;cACA,OAAO,IAAI,CAACG,kBAAkB,CAAC7E,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;YACvE,CAAC,MACI;cACD;cACA,OAAO,IAAI,CAAC6D,UAAU,CAAC9E,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YACtE;UACJ;QACA,KAAK,CAAC,CAAC;UAA+B;YAClC,IAAIC,IAAI,KAAK,CAAC,CAAC,mCAAmC;cAC9C;cACA,OAAO,IAAI,CAACK,kBAAkB,CAAC/E,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YAC9E,CAAC,MACI;cACD;cACA,OAAO,IAAI,CAACO,mBAAmB,CAAChF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YAC/E;UACJ;QACA,KAAK,CAAC,CAAC;UAAiC;YACpC,IAAIC,IAAI,KAAK,CAAC,CAAC,mCAAmC;cAC9C;cACA,OAAO,IAAI,CAACO,oBAAoB,CAACjF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YAChF,CAAC,MACI;cACD;cACA,OAAO,IAAI,CAACS,qBAAqB,CAAClF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEwD,KAAK,CAAC;YACjF;UACJ;QACA,KAAK,CAAC,CAAC;UAA0C;YAC7C,IAAIC,IAAI,KAAK,CAAC,CAAC,mCAAmC;cAC9C,OAAOzE,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;gBAAA,OAAIf,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACyF,mBAAmB,CAACpF,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,CAAC,CAAC;cAAA,EAAC;YACrK,CAAC,MACI;cACD,OAAOhB,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;gBAAA,OAAIf,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAACyF,mBAAmB,CAACpF,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,CAAC,CAAC;cAAA,EAAC;YAC7K;UACJ;QACA,KAAK,CAAC,CAAC;UAA0C;YAC7C,IAAIyD,IAAI,KAAK,CAAC,CAAC,mCAAmC;cAC9C,OAAOzE,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;gBAAA,OAAIf,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAAC0F,mBAAmB,CAACrF,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,CAAC,CAAC;cAAA,EAAC;YACrK,CAAC,MACI;cACD,OAAOhB,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;gBAAA,OAAIf,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAAC0F,mBAAmB,CAACrF,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,CAAC,CAAC;cAAA,EAAC;YAC7K;UACJ;QACA,KAAK,CAAC,CAAC;UAA6C;YAChD;YACA,OAAO,IAAI,CAACqE,oBAAoB,CAACtF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;UACzE;QACA,KAAK,CAAC,CAAC;UAAmE;YACtE;YACA,OAAO,IAAI,CAACsE,mCAAmC,CAACvF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;UACxF;QACA,KAAK,CAAC,CAAC;UAAoD;YACvD;YACA,OAAO,IAAI,CAACuE,uBAAuB,CAACxF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;UAC5E;QACA,KAAK,CAAC,CAAC;UAA2C;YAC9C;YACA,OAAO,IAAI,CAACwE,oBAAoB,CAACzF,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;UACzE;QACA,KAAK,EAAE,CAAC;UAAkE;YACtE;YACA,OAAO,IAAI,CAACyE,kCAAkC,CAAC1F,SAAS,EAAEC,OAAO,EAAEgB,eAAe,CAAC;UACvF;QACA;UACI,OAAO,IAAI;MAAC;IAExB;EAAC;IAAA;IAAA,OACD,sBAAoBjB,SAAS,EAAEC,OAAO,EAAEuE,SAAS,EAAEvD,eAAe,EAAEwD,KAAK,EAAE;MACvE,IAAMkB,gBAAgB,GAAG3F,SAAS,CAAC4F,6BAA6B,EAAE;MAClE,IAAMC,iBAAiB,GAAG7F,SAAS,CAACyD,oBAAoB,CAACqC,4BAA4B,CAACH,gBAAgB,CAAC;MACvG,QAAQnB,SAAS;QACb,KAAK,EAAE,CAAC;UAAwC;YAC5C;YACA,IAAMuB,eAAe,GAAG,IAAI,CAACC,uBAAuB,CAAChG,SAAS,CAACc,KAAK,EAAE+E,iBAAiB,EAAEpB,KAAK,CAAC;YAC/F,IAAMwB,WAAW,GAAGjG,SAAS,CAACc,KAAK,CAACa,+BAA+B,CAACoE,eAAe,CAAC;YACpF,OAAO,CAAC,IAAI,CAACG,oBAAoB,CAAClG,SAAS,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAEgB,eAAe,EAAE8E,eAAe,EAAEE,WAAW,CAAC,CAAC;UAC5G;QACA,KAAK,EAAE,CAAC;UAA2C;YAC/C;YACA,IAAMF,gBAAe,GAAG,IAAI,CAACI,sBAAsB,CAACnG,SAAS,CAACc,KAAK,EAAE+E,iBAAiB,EAAEpB,KAAK,CAAC;YAC9F,IAAMwB,YAAW,GAAGjG,SAAS,CAACc,KAAK,CAACa,+BAA+B,CAACoE,gBAAe,CAAC;YACpF,OAAO,CAAC,IAAI,CAACG,oBAAoB,CAAClG,SAAS,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAEgB,eAAe,EAAE8E,gBAAe,EAAEE,YAAW,CAAC,CAAC;UAC5G;QACA,KAAK,EAAE,CAAC;UAA2C;YAC/C;YACA,IAAMF,iBAAe,GAAGK,IAAI,CAACC,KAAK,CAAC,CAACR,iBAAiB,CAACjD,eAAe,GAAGiD,iBAAiB,CAAC7C,aAAa,IAAI,CAAC,CAAC;YAC7G,IAAMiD,aAAW,GAAGjG,SAAS,CAACc,KAAK,CAACa,+BAA+B,CAACoE,iBAAe,CAAC;YACpF,OAAO,CAAC,IAAI,CAACG,oBAAoB,CAAClG,SAAS,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAEgB,eAAe,EAAE8E,iBAAe,EAAEE,aAAW,CAAC,CAAC;UAC5G;QACA,KAAK,EAAE,CAAC;UAA8C;YAClD;YACA,IAAM9F,MAAM,GAAG,EAAE;YACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;cAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;cACzBF,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACiG,+BAA+B,CAACtG,SAAS,EAAEQ,MAAM,EAAEmF,gBAAgB,EAAE1E,eAAe,CAAC;YAC1G;YACA,OAAOd,MAAM;UACjB;QACA;UACI,OAAO,IAAI;MAAC;IAExB;EAAC;IAAA;IAAA,OACD,yCAAuCH,SAAS,EAAEQ,MAAM,EAAEmF,gBAAgB,EAAE1E,eAAe,EAAE;MACzF,IAAMsF,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;MAC3D,IAAIkE,gBAAgB,CAAC/C,eAAe,IAAI2D,cAAc,IAAIA,cAAc,IAAIZ,gBAAgB,CAAC3C,aAAa,GAAG,CAAC,EAAE;QAC5G;QACA,OAAO,IAAIvD,WAAW,CAACe,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,SAAS,CAAC;MAC/D,CAAC,MACI;QACD,IAAI8F,iBAAiB;QACrB,IAAID,cAAc,GAAGZ,gBAAgB,CAAC3C,aAAa,GAAG,CAAC,EAAE;UACrDwD,iBAAiB,GAAGb,gBAAgB,CAAC3C,aAAa,GAAG,CAAC;QAC1D,CAAC,MACI,IAAIuD,cAAc,GAAGZ,gBAAgB,CAAC/C,eAAe,EAAE;UACxD4D,iBAAiB,GAAGb,gBAAgB,CAAC/C,eAAe;QACxD,CAAC,MACI;UACD4D,iBAAiB,GAAGD,cAAc;QACtC;QACA,IAAMnF,QAAQ,GAAGzB,cAAc,CAAC8G,QAAQ,CAACzG,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEuG,cAAc,EAAE/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACC,MAAM,EAAEb,MAAM,CAACE,SAAS,CAACgG,sBAAsB,EAAEF,iBAAiB,EAAE,KAAK,CAAC;QAChM,OAAO/G,WAAW,CAACsB,aAAa,CAACP,MAAM,CAACE,SAAS,CAACwD,IAAI,CAACjD,eAAe,EAAEG,QAAQ,CAACK,UAAU,EAAEL,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACsF,sBAAsB,CAAC,CAAC;MACnJ;IACJ;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,iCAA+B5F,KAAK,EAAE6F,KAAK,EAAEC,KAAK,EAAE;MAChD,IAAIhE,eAAe,GAAG+D,KAAK,CAAC/D,eAAe;MAC3C,IAAI+D,KAAK,CAACE,WAAW,KAAK/F,KAAK,CAACgG,gBAAgB,CAAClE,eAAe,CAAC,EAAE;QAC/D;QACAA,eAAe,EAAE;MACrB;MACA,OAAOwD,IAAI,CAACW,GAAG,CAACJ,KAAK,CAAC3D,aAAa,EAAEJ,eAAe,GAAGgE,KAAK,GAAG,CAAC,CAAC;IACrE;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,gCAA8B9F,KAAK,EAAE6F,KAAK,EAAEC,KAAK,EAAE;MAC/C,IAAIhE,eAAe,GAAG+D,KAAK,CAAC/D,eAAe;MAC3C,IAAI+D,KAAK,CAACE,WAAW,KAAK/F,KAAK,CAACgG,gBAAgB,CAAClE,eAAe,CAAC,EAAE;QAC/D;QACAA,eAAe,EAAE;MACrB;MACA,OAAOwD,IAAI,CAACY,GAAG,CAACpE,eAAe,EAAE+D,KAAK,CAAC3D,aAAa,GAAG4D,KAAK,GAAG,CAAC,CAAC;IACrE;EAAC;IAAA;IAAA,OACD,mBAAiB5G,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEgG,WAAW,EAAE;MAC/D,OAAOhH,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;QAAA,OAAIf,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACuH,QAAQ,CAAClH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEgG,WAAW,CAAC,CAAC;MAAA,EAAC;IACvK;EAAC;IAAA;IAAA,OACD,2BAAyBjH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC1D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAM0F,QAAQ,GAAGf,IAAI,CAACC,KAAK,CAACrG,SAAS,CAACoH,cAAc,CAACb,cAAc,CAAC,CAAChG,MAAM,GAAG,CAAC,CAAC;QAChFJ,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAACuH,QAAQ,CAAClH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEkG,QAAQ,CAAC,CAAC;MAClJ;MACA,OAAOhH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,oBAAkBH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEgG,WAAW,EAAE;MAChE,OAAOhH,OAAO,CAACkF,GAAG,CAAC,UAAA3E,MAAM;QAAA,OAAIf,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAAC0H,SAAS,CAACrH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEgG,WAAW,CAAC,CAAC;MAAA,EAAC;IACxK;EAAC;IAAA;IAAA,OACD,4BAA0BjH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC3D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAM0F,QAAQ,GAAGf,IAAI,CAACC,KAAK,CAACrG,SAAS,CAACoH,cAAc,CAACb,cAAc,CAAC,CAAChG,MAAM,GAAG,CAAC,CAAC;QAChFJ,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAAC0H,SAAS,CAACrH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEkG,QAAQ,CAAC,CAAC;MACnJ;MACA,OAAOhH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,8BAA4BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEqG,UAAU,EAAE;MACzE,IAAMnH,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAAC4H,QAAQ,CAACvH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEqG,UAAU,CAAC,CAAC;MACpJ;MACA,OAAOnH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,+BAA6BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEqG,UAAU,EAAE;MAC1E,IAAMnH,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAAC4H,QAAQ,CAACvH,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,EAAEqG,UAAU,CAAC,CAAC;MAC5J;MACA,OAAOnH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,4BAA0BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEqG,UAAU,EAAE;MACvE,IAAMnH,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACsB,aAAa,CAACpB,cAAc,CAAC6H,MAAM,CAACxH,SAAS,CAACa,YAAY,EAAEb,SAAS,EAAEQ,MAAM,CAACE,SAAS,EAAEO,eAAe,EAAEqG,UAAU,CAAC,CAAC;MAClJ;MACA,OAAOnH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,6BAA2BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAEqG,UAAU,EAAE;MACxE,IAAMnH,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzBF,MAAM,CAACE,CAAC,CAAC,GAAGZ,WAAW,CAACkB,cAAc,CAAChB,cAAc,CAAC6H,MAAM,CAACxH,SAAS,CAACa,YAAY,EAAEb,SAAS,CAACc,KAAK,EAAEN,MAAM,CAACC,UAAU,EAAEQ,eAAe,EAAEqG,UAAU,CAAC,CAAC;MAC1J;MACA,OAAOnH,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,6BAA2BH,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEwG,gBAAgB,EAAEC,YAAY,EAAE;MAC3F,OAAOjI,WAAW,CAACsB,aAAa,CAACP,MAAM,CAACE,SAAS,CAACwD,IAAI,CAACjD,eAAe,EAAEwG,gBAAgB,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;IAC/G;EAAC;IAAA;IAAA,OACD,8BAA4B1H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAE0G,iBAAiB,EAAEC,aAAa,EAAE;MAC9F,OAAOnI,WAAW,CAACkB,cAAc,CAACH,MAAM,CAACC,UAAU,CAACyD,IAAI,CAACjD,eAAe,EAAE0G,iBAAiB,EAAEC,aAAa,EAAE,CAAC,CAAC,CAAC;IACnH;EAAC;IAAA;IAAA,OACD,8BAA4B5H,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC7D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAMoG,UAAU,GAAG7H,SAAS,CAAC8G,gBAAgB,CAACP,cAAc,CAAC;QAC7DpG,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACyH,mBAAmB,CAAC9H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEsF,cAAc,EAAEsB,UAAU,CAAC;MACxG;MACA,OAAO1H,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,6CAA2CH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC5E,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAMoG,UAAU,GAAG7H,SAAS,CAAC2B,+BAA+B,CAAC4E,cAAc,CAAC;QAC5EpG,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACyH,mBAAmB,CAAC9H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEsF,cAAc,EAAEsB,UAAU,CAAC;MACxG;MACA,OAAO1H,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,iCAA+BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAChE,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAMoG,UAAU,GAAGzB,IAAI,CAACC,KAAK,CAAC,CAACrG,SAAS,CAACoC,gBAAgB,CAACmE,cAAc,CAAC,GAAGvG,SAAS,CAAC8G,gBAAgB,CAACP,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5HpG,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACyH,mBAAmB,CAAC9H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEsF,cAAc,EAAEsB,UAAU,CAAC;MACxG;MACA,OAAO1H,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,8BAA4BH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC7D,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAMoG,UAAU,GAAG7H,SAAS,CAACoC,gBAAgB,CAACmE,cAAc,CAAC;QAC7DpG,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACyH,mBAAmB,CAAC9H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEsF,cAAc,EAAEsB,UAAU,CAAC;MACxG;MACA,OAAO1H,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,4CAA0CH,SAAS,EAAEC,OAAO,EAAEgB,eAAe,EAAE;MAC3E,IAAMd,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,OAAO,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMG,MAAM,GAAGP,OAAO,CAACI,CAAC,CAAC;QACzB,IAAMkG,cAAc,GAAG/F,MAAM,CAACE,SAAS,CAACU,QAAQ,CAACK,UAAU;QAC3D,IAAMoG,UAAU,GAAG7H,SAAS,CAAC+H,8BAA8B,CAACxB,cAAc,CAAC;QAC3EpG,MAAM,CAACE,CAAC,CAAC,GAAG,IAAI,CAACyH,mBAAmB,CAAC9H,SAAS,EAAEQ,MAAM,EAAES,eAAe,EAAEsF,cAAc,EAAEsB,UAAU,CAAC;MACxG;MACA,OAAO1H,MAAM;IACjB;EAAC;EAAA;AAAA;AAEL,OAAO,IAAI6H,UAAU;AACrB,CAAC,UAAUA,UAAU,EAAE;EACnB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaC,GAAG,EAAE;IACpC,IAAI,CAAC1I,KAAK,CAAC2I,QAAQ,CAACD,GAAG,CAAC,EAAE;MACtB,OAAO,KAAK;IAChB;IACA,IAAME,aAAa,GAAGF,GAAG;IACzB,IAAI,CAAC1I,KAAK,CAAC6I,QAAQ,CAACD,aAAa,CAACE,EAAE,CAAC,EAAE;MACnC,OAAO,KAAK;IAChB;IACA,IAAI,CAAC9I,KAAK,CAAC+I,WAAW,CAACH,aAAa,CAACI,MAAM,CAAC,IAAI,CAAChJ,KAAK,CAACiJ,SAAS,CAACL,aAAa,CAACI,MAAM,CAAC,EAAE;MACpF,OAAO,KAAK;IAChB;IACA,IAAI,CAAChJ,KAAK,CAAC+I,WAAW,CAACH,aAAa,CAACM,EAAE,CAAC,IAAI,CAAClJ,KAAK,CAAC6I,QAAQ,CAACD,aAAa,CAACM,EAAE,CAAC,EAAE;MAC3E,OAAO,KAAK;IAChB;IACA,IAAI,CAAClJ,KAAK,CAAC+I,WAAW,CAACH,aAAa,CAAC3D,KAAK,CAAC,IAAI,CAACjF,KAAK,CAACmJ,QAAQ,CAACP,aAAa,CAAC3D,KAAK,CAAC,EAAE;MACjF,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf,CAAC;EACDuD,UAAU,CAACY,WAAW,GAAG;IACrBA,WAAW,EAAE,+CAA+C;IAC5DC,IAAI,EAAE,CACF;MACIC,IAAI,EAAE,6BAA6B;MACnCF,WAAW,u0BActB;MACWG,UAAU,EAAEd,gBAAgB;MAC5Be,MAAM,EAAE;QACJ,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,CAAC,IAAI,CAAC;QAClB,YAAY,EAAE;UACV,IAAI,EAAE;YACF,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,yBAAyB,EAAE,wCAAwC,EAAE,uCAAuC,EAAE,aAAa,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,mBAAmB;UACxS,CAAC;UACD,IAAI,EAAE;YACF,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU;UAC3D,CAAC;UACD,OAAO,EAAE;YACL,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;UACf,CAAC;UACD,QAAQ,EAAE;YACN,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE;UACf;QACJ;MACJ;IACJ,CAAC;EAET,CAAC;EACD;AACJ;AACA;EACIhB,UAAU,CAACiB,YAAY,GAAG;IACtBC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,OAAO;IACdC,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,MAAM;IACZC,aAAa,EAAE,eAAe;IAC9BC,aAAa,EAAE,eAAe;IAC9BC,gBAAgB,EAAE,kBAAkB;IACpCC,sCAAsC,EAAE,wCAAwC;IAChFC,uBAAuB,EAAE,yBAAyB;IAClDC,cAAc,EAAE,gBAAgB;IAChCC,qCAAqC,EAAE,uCAAuC;IAC9EC,WAAW,EAAE,aAAa;IAC1BC,cAAc,EAAE,gBAAgB;IAChCC,cAAc,EAAE,gBAAgB;IAChCC,iBAAiB,EAAE;EACvB,CAAC;EACD;AACJ;AACA;EACIhC,UAAU,CAACiC,OAAO,GAAG;IACjBC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE,aAAa;IAC1BC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE;EACd,CAAC;EACD,SAASC,KAAK,CAACzB,IAAI,EAAE;IACjB,IAAI,CAACA,IAAI,CAACP,EAAE,EAAE;MACV;MACA,OAAO,IAAI;IACf;IACA,IAAI9D,SAAS;IACb,QAAQqE,IAAI,CAACP,EAAE;MACX,KAAKN,UAAU,CAACiB,YAAY,CAACC,IAAI;QAC7B1E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACE,KAAK;QAC9B3E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACG,EAAE;QAC3B5E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACI,IAAI;QAC7B7E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACK,aAAa;QACtC9E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACM,aAAa;QACtC/E,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACO,gBAAgB;QACzChF,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACQ,sCAAsC;QAC/DjF,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACS,uBAAuB;QAChDlF,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACU,cAAc;QACvCnF,SAAS,GAAG,CAAC,CAAC;QACd;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACW,qCAAqC;QAC9DpF,SAAS,GAAG,EAAE,CAAC;QACf;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACY,WAAW;QACpCrF,SAAS,GAAG,EAAE,CAAC;QACf;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACc,cAAc;QACvCvF,SAAS,GAAG,EAAE,CAAC;QACf;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACa,cAAc;QACvCtF,SAAS,GAAG,EAAE,CAAC;QACf;MACJ,KAAKwD,UAAU,CAACiB,YAAY,CAACe,iBAAiB;QAC1CxF,SAAS,GAAG,EAAE,CAAC;QACf;MACJ;QACI;QACA,OAAO,IAAI;IAAC;IAEpB,IAAIE,IAAI,GAAG,CAAC,CAAC;IACb,QAAQmE,IAAI,CAACH,EAAE;MACX,KAAKV,UAAU,CAACiC,OAAO,CAACC,IAAI;QACxBxF,IAAI,GAAG,CAAC,CAAC;QACT;MACJ,KAAKsD,UAAU,CAACiC,OAAO,CAACE,WAAW;QAC/BzF,IAAI,GAAG,CAAC,CAAC;QACT;MACJ,KAAKsD,UAAU,CAACiC,OAAO,CAACG,SAAS;QAC7B1F,IAAI,GAAG,CAAC,CAAC;QACT;MACJ,KAAKsD,UAAU,CAACiC,OAAO,CAACI,QAAQ;QAC5B3F,IAAI,GAAG,CAAC,CAAC;QACT;IAAM;IAEd,OAAO;MACHF,SAAS,EAAEA,SAAS;MACpBE,IAAI,EAAEA,IAAI;MACV8D,MAAM,EAAG,CAAC,CAACK,IAAI,CAACL,MAAO;MACvB/D,KAAK,EAAGoE,IAAI,CAACpE,KAAK,IAAI;IAC1B,CAAC;EACL;EACAuD,UAAU,CAACsC,KAAK,GAAGA,KAAK;AAC5B,CAAC,EAAEtC,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC"}]}