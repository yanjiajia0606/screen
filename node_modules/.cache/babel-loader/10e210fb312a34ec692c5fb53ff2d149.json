{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Range","Searcher","strings","assertNever","DEFAULT_WORD_REGEXP","getWordAtText","UnicodeTextModelHighlighter","model","options","range","startLine","startLineNumber","endLine","endLineNumber","getLineCount","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","regex","RegExp","buildRegExpCharClassExpr","Array","from","searcher","ranges","hasMore","m","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineNumber","lineCount","lineContent","getLineContent","lineLength","length","reset","next","startIndex","index","endIndex","charCodeBefore","charCodeAt","isHighSurrogate","str","substring","word","highlightReason","shouldHighlightNonBasicASCII","MAX_RESULT_LENGTH","push","char","reason","kind","codePoint","codePointAt","primaryConfusable","ambiguousCharacters","getPrimaryConfusable","notAmbiguousInLocales","AmbiguousCharacters","getLocales","filter","l","getInstance","Set","allowedLocales","isAmbiguous","confusableWith","String","fromCodePoint","codePoints","flags","src","escapeRegExpCharacters","map","i","join","allowedCodePoints","nonBasicASCII","set","invisibleCharacters","InvisibleCharacters","cp","isAllowedInvisibleCharacter","add","getConfusableCodePoints","delete","character","wordContext","has","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII","isInvisibleCharacter"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/types.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    const word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* SimpleHighlightReason.None */) {\n                        if (highlightReason === 3 /* SimpleHighlightReason.Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* SimpleHighlightReason.Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* SimpleHighlightReason.NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* SimpleHighlightReason.None */:\n                return null;\n            case 2 /* SimpleHighlightReason.Invisible */:\n                return { kind: 1 /* UnicodeHighlighterReasonKind.Invisible */ };\n            case 3 /* SimpleHighlightReason.Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* UnicodeHighlighterReasonKind.Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* SimpleHighlightReason.NonBasicASCII */:\n                return { kind: 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* SimpleHighlightReason.NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* SimpleHighlightReason.Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* SimpleHighlightReason.Ambiguous */;\n            }\n        }\n        return 0 /* SimpleHighlightReason.None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n"],"mappings":"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"}]}