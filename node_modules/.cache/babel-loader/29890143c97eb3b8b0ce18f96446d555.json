{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/rectangle/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/rectangle/index.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGNyZWF0ZSBmcm9tICIuLi8uLi9jcmVhdGUiOwpleHBvcnQgZGVmYXVsdCBjcmVhdGUoewogIG5hbWU6ICJyZWN0YW5nbGUiLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIG9wdGlvbkRhdGEgPSB0aGlzLmRlZXBDbG9uZSh0aGlzLmRhdGFDaGFydCk7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdG9vbHRpcDogdGhpcy5nZXRPcHRpb25UaXAoKSwKICAgICAgICBzZXJpZXM6IHsKICAgICAgICAgIHR5cGU6ICd0cmVlbWFwJywKICAgICAgICAgIGRhdGE6IG9wdGlvbkRhdGEsCiAgICAgICAgICBsYWJlbDogdGhpcy5nZXRPcHRpb25MYWJlbCgpCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLm15Q2hhcnQucmVzaXplKCk7CiAgICAgIHRoaXMubXlDaGFydC5zZXRPcHRpb24ob3B0aW9uLCB0cnVlKTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"mappings":"AASA;AACA;EACAA;EACAC;IACAC;MACA;MACA;QACAC;QACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","methods","updateChart","tooltip","series","type","data","label"],"sourceRoot":"src/echart/packages/rectangle","sources":["index.vue"],"sourcesContent":["<template>\n  <div :class=\"[b(),className]\"\n       :style=\"styleSizeName\">\n    <div :ref=\"id\"\n         :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from \"../../create\";\nexport default create({\n  name: \"rectangle\",\n  methods: {\n    updateChart () {\n      const optionData = this.deepClone(this.dataChart);\n      const option = {\n        tooltip: this.getOptionTip(),\n        series: {\n          type: 'treemap',\n          data: optionData,\n          label: this.getOptionLabel()\n        }\n      };\n      this.myChart.resize();\n      this.myChart.setOption(option, true);\n    }\n  }\n});\n\n</script>\n\n\n\n"]}]}