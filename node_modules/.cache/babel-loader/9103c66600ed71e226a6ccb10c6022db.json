{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue","mtime":1671169889282},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduLmpzIjsKaW1wb3J0IGNyZWF0ZSBmcm9tICcuLi8uLi9jcmVhdGUnOwpleHBvcnQgZGVmYXVsdCBjcmVhdGUoewogIG5hbWU6ICdiYXInLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdmFyIG9wdGlvbkRhdGEgPSB0aGlzLmRlZXBDbG9uZSh0aGlzLmRhdGFDaGFydCk7CiAgICAgIGlmICghQXJyYXkuaXNBcnJheShvcHRpb25EYXRhKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgY2F0ZWdvcmllcyA9IG9wdGlvbkRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZTsKICAgICAgfSk7CiAgICAgIGNhdGVnb3JpZXMgPSBfdG9Db25zdW1hYmxlQXJyYXkobmV3IFNldChjYXRlZ29yaWVzKSk7CiAgICAgIHZhciBkYXRhID0gW107CiAgICAgIGlmIChvcHRpb25EYXRhWzBdICYmIG9wdGlvbkRhdGFbMF0udHlwZSkgewogICAgICAgIG9wdGlvbkRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgdmFyIHR5cGUgPSBpdGVtLnR5cGU7CiAgICAgICAgICB2YXIgZGF0YUl0ZW0gPSBkYXRhLmZpbmQoZnVuY3Rpb24gKGVsZSkgewogICAgICAgICAgICByZXR1cm4gZWxlLm5hbWUgPT09IHR5cGU7CiAgICAgICAgICB9KTsKICAgICAgICAgIGlmIChkYXRhSXRlbSkgewogICAgICAgICAgICBkYXRhSXRlbS5kYXRhLnB1c2goaXRlbS52YWx1ZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkYXRhLnB1c2goewogICAgICAgICAgICAgIG5hbWU6IGl0ZW0udHlwZSwKICAgICAgICAgICAgICBkYXRhOiBbaXRlbS52YWx1ZV0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHZhbHVlcyA9IG9wdGlvbkRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS52YWx1ZTsKICAgICAgICB9KTsKICAgICAgICBkYXRhID0gW3sKICAgICAgICAgIGRhdGE6IHZhbHVlcwogICAgICAgIH1dOwogICAgICB9CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHRoaXMuZ2V0T3B0aW9uVGl0bGUoKSwKICAgICAgICB0b29sdGlwOiB0aGlzLmdldE9wdGlvblRpcCh7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICB9KSwKICAgICAgICBncmlkOiB0aGlzLmdldE9wdGlvbkdyaWQoKSwKICAgICAgICBsZWdlbmQ6IHRoaXMuZ2V0T3B0aW9uTGVnZW5kKCksCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzU2hvdywgdHJ1ZSksCiAgICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbi5jYXRlZ29yeSA/ICd2YWx1ZScgOiAnY2F0ZWdvcnknLAogICAgICAgICAgbmFtZTogdGhpcy5vcHRpb24ueEF4aXNOYW1lLAogICAgICAgICAgbmFtZVRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueEF4aXNDb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLm9wdGlvbi54QXhpc0ZvbnRTaXplIHx8IDE0CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnhBeGlzTGluZUNvbG9yIHx8ICcjZmZmJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogY2F0ZWdvcmllcyB8fCBbXSwKICAgICAgICAgIGludmVyc2U6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzSW52ZXJzZSwgZmFsc2UpLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzU3BsaXRMaW5lU2hvdywgZmFsc2UpCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIGludGVydmFsOiB0aGlzLm9wdGlvbi54QXhpc0ludGVydmFsIHx8ICdhdXRvJywKICAgICAgICAgICAgcm90YXRlOiB0aGlzLm9wdGlvbi54QXhpc1JvdGF0ZSB8fCAwLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueEF4aXNDb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnhBeGlzRm9udFNpemUgfHwgMTQKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnlBeGlzU2hvdywgdHJ1ZSksCiAgICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbi5jYXRlZ29yeSA/ICdjYXRlZ29yeScgOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogdGhpcy5vcHRpb24ueUF4aXNOYW1lLAogICAgICAgICAgbmFtZVRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueUF4aXNDb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLm9wdGlvbi55QXhpc0ZvbnRTaXplIHx8IDE0CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogY2F0ZWdvcmllcyB8fCBbXSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueUF4aXNDb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnlBeGlzRm9udFNpemUgfHwgMTQKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi55QXhpc0xpbmVDb2xvciB8fCAnI2ZmZicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGludmVyc2U6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnlBeGlzSW52ZXJzZSwgZmFsc2UpLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnlBeGlzU3BsaXRMaW5lU2hvdywgZmFsc2UpCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBiYXJDb2xvciA9IF90aGlzLm9wdGlvbi5iYXJDb2xvciB8fCBbXTsKICAgICAgICAgIHZhciBsaXN0ID0gKGRhdGEgfHwgW10pLm1hcChmdW5jdGlvbiAoZWxlLCBpbmRleCkgewogICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbGUsIHsKICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICBzdGFjazogZWxlLnN0YWNrLAogICAgICAgICAgICAgIGJhcldpZHRoOiBfdGhpcy5vcHRpb24uYmFyV2lkdGggfHwgMTYsCiAgICAgICAgICAgICAgYmFyTWluSGVpZ2h0OiBfdGhpcy5vcHRpb24uYmFyTWluSGVpZ2h0IHx8IDAsCiAgICAgICAgICAgICAgaXRlbVN0eWxlOiBfdGhpcy5nZXRIYXNQcm9wKCFfdGhpcy5zd2l0Y2hUaGVtZSwgewogICAgICAgICAgICAgICAgY29sb3I6IF90aGlzLmdldENvbG9yKGluZGV4KQogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogX3RoaXMub3B0aW9uLmJhclJhZGl1cyB8fCAwCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgbGFiZWw6IF90aGlzLmdldE9wdGlvbkxhYmVsKHsKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBfdGhpcy5vcHRpb24uY2F0ZWdvcnkgPyAncmlnaHQnIDogJ3RvcCcKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgICAgcmV0dXJuIGxpc3Q7CiAgICAgICAgfSgpCiAgICAgIH07CiAgICAgIHRoaXMubXlDaGFydC5yZXNpemUoKTsKICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb24sIHRydWUpOwogICAgfQogIH0KfSk7"},{"version":3,"mappings":";;;;;;;;;;;;AAOA;AAEA;EACAA;EACAC;IACAC;MAAA;MACA;MACA;QACA;MACA;MACA;QAAA;MAAA;MACAC;MACA;MACA;QACAC;UACA;UACA;YAAA;UAAA;UACA;YACAC;UACA;YACAC;cAAAN;cAAAM;YAAA;UACA;QACA;MACA;QACA;UAAA;QAAA;QACAA;UAAAA;QAAA;MACA;MAEA;QACAC;QACAC;UACAC;QACA;QACAC;QACAC;QACAC;UACAC;UACAC;UACAd;UACAe;YACAC;YACAC;UACA;UACAC;YACAL;YACAM;cACAH;YACA;UACA;UACAV;UACAc;UACAC;YACAR;UACA;UACAS;YACAC;YACAC;YACAC;cACAT;cACAC;YACA;UACA;QACA;QACAS;UACAb;UACAC;UACAd;UACAe;YACAC;YACAC;UACA;UACAX;UACAgB;YACAG;cACAT;cACAC;YACA;UACA;UACAC;YACAL;YACAM;cACAH;YACA;UACA;UACAI;UACAC;YACAR;UACA;QACA;QACAc;UACA;UACA;YACA;cACAb;cACAc;cACAC;cACAC;cACAC,4BACA,oBACA;gBACAf;cACA,GACA;gBAAAgB;cAAA,EACA;cACAC;gBACAC;cACA;YACA;UACA;UACA;QACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","methods","updateChart","categories","optionData","dataItem","data","title","tooltip","trigger","grid","legend","xAxis","show","type","nameTextStyle","color","fontSize","axisLine","lineStyle","inverse","splitLine","axisLabel","interval","rotate","textStyle","yAxis","series","stack","barWidth","barMinHeight","itemStyle","barBorderRadius","label","position"],"sourceRoot":"src/echart/packages/bar","sources":["index.vue"],"sourcesContent":["<template>\n  <div :class=\"[b(), className]\" :style=\"styleSizeName\">\n    <div :ref=\"id\" :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from '../../create'\n\nexport default create({\n  name: 'bar',\n  methods: {\n    updateChart() {\n      const optionData = this.deepClone(this.dataChart)\n      if (!Array.isArray(optionData)) {\n        return\n      }\n      let categories = optionData.map((item) => item.name)\n      categories = [...new Set(categories)]\n      let data = []\n      if (optionData[0] && optionData[0].type) {\n        optionData.forEach((item) => {\n          const { type } = item\n          const dataItem = data.find((ele) => ele.name === type)\n          if (dataItem) {\n            dataItem.data.push(item.value)\n          } else {\n            data.push({ name: item.type, data: [item.value] })\n          }\n        })\n      } else {\n        const values = optionData.map((item) => item.value)\n        data = [{ data: values }]\n      }\n\n      const option = {\n        title: this.getOptionTitle(),\n        tooltip: this.getOptionTip({\n          trigger: 'axis',\n        }),\n        grid: this.getOptionGrid(),\n        legend: this.getOptionLegend(),\n        xAxis: {\n          show: this.vaildData(this.option.xAxisShow, true),\n          type: this.option.category ? 'value' : 'category',\n          name: this.option.xAxisName,\n          nameTextStyle: {\n            color: this.option.xAxisColor || '#fff',\n            fontSize: this.option.xAxisFontSize || 14,\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.xAxisLineColor || '#fff',\n            },\n          },\n          data: categories || [],\n          inverse: this.vaildData(this.option.xAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.xAxisSplitLineShow, false),\n          },\n          axisLabel: {\n            interval: this.option.xAxisInterval || 'auto',\n            rotate: this.option.xAxisRotate || 0,\n            textStyle: {\n              color: this.option.xAxisColor || '#fff',\n              fontSize: this.option.xAxisFontSize || 14,\n            },\n          },\n        },\n        yAxis: {\n          show: this.vaildData(this.option.yAxisShow, true),\n          type: this.option.category ? 'category' : 'value',\n          name: this.option.yAxisName,\n          nameTextStyle: {\n            color: this.option.yAxisColor || '#fff',\n            fontSize: this.option.yAxisFontSize || 14,\n          },\n          data: categories || [],\n          axisLabel: {\n            textStyle: {\n              color: this.option.yAxisColor || '#fff',\n              fontSize: this.option.yAxisFontSize || 14,\n            },\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.yAxisLineColor || '#fff',\n            },\n          },\n          inverse: this.vaildData(this.option.yAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.yAxisSplitLineShow, false),\n          },\n        },\n        series: (() => {\n          const barColor = this.option.barColor || []\n          const list = (data || []).map((ele, index) => {\n            return Object.assign(ele, {\n              type: 'bar',\n              stack: ele.stack,\n              barWidth: this.option.barWidth || 16,\n              barMinHeight: this.option.barMinHeight || 0,\n              itemStyle: this.getHasProp(\n                !this.switchTheme,\n                {\n                  color: this.getColor(index),\n                },\n                { barBorderRadius: this.option.barRadius || 0 }\n              ),\n              label: this.getOptionLabel({\n                position: this.option.category ? 'right' : 'top',\n              }),\n            })\n          })\n          return list\n        })(),\n      }\n      this.myChart.resize()\n      this.myChart.setOption(option, true)\n    },\n  },\n})\n</script>\n"]}]}