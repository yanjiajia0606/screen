{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/tokenizationTextModelPart.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/tokenizationTextModelPart.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Emitter","Position","getWordAtText","TextModelPart","TextModelTokenization","ContiguousTokensStore","SparseTokensStore","TokenizationTextModelPart","_languageService","_languageConfigurationService","_textModel","bracketPairsTextModelPart","_languageId","_onDidChangeLanguage","_register","onDidChangeLanguage","event","_onDidChangeLanguageConfiguration","onDidChangeLanguageConfiguration","_onDidChangeTokens","onDidChangeTokens","_backgroundTokenizationState","_onBackgroundTokenizationStateChanged","_tokens","languageIdCodec","_semanticTokens","_tokenization","_languageRegistryListener","onDidChange","e","affects","fire","range","text","eolCount","firstLineLength","lastLineLength","acceptEdit","length","charCodeAt","handleDidChangeAttached","flush","change","handleDidChangeContent","dispose","completed","newState","handleDidChangeBackgroundTokenizationState","tokens","backgroundTokenizationCompleted","ranges","i","len","element","minChangedLineNumber","maxChangedLineNumber","hasChange","lineNumber","startLineNumber","endLineNumber","setTokens","getLineLength","getLineTokens","lineHasChange","push","fromLineNumber","toLineNumber","_emitModelTokensChangedEvent","tokenizationSupportChanged","semanticTokensApplied","handleTokenizationProgress","isComplete","set","getLineCount","isEmpty","hasCompleteSemanticTokens","changedRange","validateRange","setPartial","Math","max","min","tokenizeViewport","_isDisposing","handleDidChangeTokens","reset","Error","forceTokenization","isCheapToTokenize","_getLineTokens","lineText","getLineContent","syntacticTokens","getTokens","addSparseTokens","column","character","position","validatePosition","getTokenTypeIfInsertingCharacter","newText","validatedPosition","tokenizeLineWithEdit","languageId","getLanguageConfiguration","_position","assertNotDisposed","lineContent","lineTokens","tokenIndex","findTokenIndexAtOffset","_findLanguageBoundaries","rbStartOffset","rbEndOffset","rightBiasedWord","getLanguageId","getWordDefinition","substring","startColumn","endColumn","lbStartOffset","lbEndOffset","leftBiasedWord","wordAtPosition","getWordAtPosition","word","substr","oldLanguage","newLanguage","handleDidChangeLanguage","startOffset","getStartOffset","endOffset","tokenCount","getCount","getEndOffset"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/tokenizationTextModelPart.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Position } from '../core/position.js';\nimport { getWordAtText } from '../core/wordHelper.js';\nimport { TextModelPart } from './textModelPart.js';\nimport { TextModelTokenization } from './textModelTokens.js';\nimport { ContiguousTokensStore } from '../tokens/contiguousTokensStore.js';\nimport { SparseTokensStore } from '../tokens/sparseTokensStore.js';\nexport class TokenizationTextModelPart extends TextModelPart {\n    constructor(_languageService, _languageConfigurationService, _textModel, bracketPairsTextModelPart, _languageId) {\n        super();\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._textModel = _textModel;\n        this.bracketPairsTextModelPart = bracketPairsTextModelPart;\n        this._languageId = _languageId;\n        this._onDidChangeLanguage = this._register(new Emitter());\n        this.onDidChangeLanguage = this._onDidChangeLanguage.event;\n        this._onDidChangeLanguageConfiguration = this._register(new Emitter());\n        this.onDidChangeLanguageConfiguration = this._onDidChangeLanguageConfiguration.event;\n        this._onDidChangeTokens = this._register(new Emitter());\n        this.onDidChangeTokens = this._onDidChangeTokens.event;\n        this._backgroundTokenizationState = 0 /* BackgroundTokenizationState.Uninitialized */;\n        this._onBackgroundTokenizationStateChanged = this._register(new Emitter());\n        this._tokens = new ContiguousTokensStore(this._languageService.languageIdCodec);\n        this._semanticTokens = new SparseTokensStore(this._languageService.languageIdCodec);\n        this._tokenization = new TextModelTokenization(_textModel, this, this._languageService.languageIdCodec);\n        this._languageRegistryListener = this._languageConfigurationService.onDidChange(e => {\n            if (e.affects(this._languageId)) {\n                this._onDidChangeLanguageConfiguration.fire({});\n            }\n        });\n    }\n    acceptEdit(range, text, eolCount, firstLineLength, lastLineLength) {\n        this._tokens.acceptEdit(range, eolCount, firstLineLength);\n        this._semanticTokens.acceptEdit(range, eolCount, firstLineLength, lastLineLength, text.length > 0 ? text.charCodeAt(0) : 0 /* CharCode.Null */);\n    }\n    handleDidChangeAttached() {\n        this._tokenization.handleDidChangeAttached();\n    }\n    flush() {\n        this._tokens.flush();\n        this._semanticTokens.flush();\n    }\n    handleDidChangeContent(change) {\n        this._tokenization.handleDidChangeContent(change);\n    }\n    dispose() {\n        this._languageRegistryListener.dispose();\n        this._tokenization.dispose();\n        super.dispose();\n    }\n    get backgroundTokenizationState() {\n        return this._backgroundTokenizationState;\n    }\n    handleTokenizationProgress(completed) {\n        if (this._backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) {\n            // We already did a full tokenization and don't go back to progressing.\n            return;\n        }\n        const newState = completed ? 2 /* BackgroundTokenizationState.Completed */ : 1 /* BackgroundTokenizationState.InProgress */;\n        if (this._backgroundTokenizationState !== newState) {\n            this._backgroundTokenizationState = newState;\n            this.bracketPairsTextModelPart.handleDidChangeBackgroundTokenizationState();\n            this._onBackgroundTokenizationStateChanged.fire();\n        }\n    }\n    setTokens(tokens, backgroundTokenizationCompleted = false) {\n        if (tokens.length !== 0) {\n            const ranges = [];\n            for (let i = 0, len = tokens.length; i < len; i++) {\n                const element = tokens[i];\n                let minChangedLineNumber = 0;\n                let maxChangedLineNumber = 0;\n                let hasChange = false;\n                for (let lineNumber = element.startLineNumber; lineNumber <= element.endLineNumber; lineNumber++) {\n                    if (hasChange) {\n                        this._tokens.setTokens(this._languageId, lineNumber - 1, this._textModel.getLineLength(lineNumber), element.getLineTokens(lineNumber), false);\n                        maxChangedLineNumber = lineNumber;\n                    }\n                    else {\n                        const lineHasChange = this._tokens.setTokens(this._languageId, lineNumber - 1, this._textModel.getLineLength(lineNumber), element.getLineTokens(lineNumber), true);\n                        if (lineHasChange) {\n                            hasChange = true;\n                            minChangedLineNumber = lineNumber;\n                            maxChangedLineNumber = lineNumber;\n                        }\n                    }\n                }\n                if (hasChange) {\n                    ranges.push({\n                        fromLineNumber: minChangedLineNumber,\n                        toLineNumber: maxChangedLineNumber,\n                    });\n                }\n            }\n            if (ranges.length > 0) {\n                this._emitModelTokensChangedEvent({\n                    tokenizationSupportChanged: false,\n                    semanticTokensApplied: false,\n                    ranges: ranges,\n                });\n            }\n        }\n        this.handleTokenizationProgress(backgroundTokenizationCompleted);\n    }\n    setSemanticTokens(tokens, isComplete) {\n        this._semanticTokens.set(tokens, isComplete);\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: false,\n            semanticTokensApplied: tokens !== null,\n            ranges: [{ fromLineNumber: 1, toLineNumber: this._textModel.getLineCount() }],\n        });\n    }\n    hasCompleteSemanticTokens() {\n        return this._semanticTokens.isComplete();\n    }\n    hasSomeSemanticTokens() {\n        return !this._semanticTokens.isEmpty();\n    }\n    setPartialSemanticTokens(range, tokens) {\n        if (this.hasCompleteSemanticTokens()) {\n            return;\n        }\n        const changedRange = this._textModel.validateRange(this._semanticTokens.setPartial(range, tokens));\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: false,\n            semanticTokensApplied: true,\n            ranges: [\n                {\n                    fromLineNumber: changedRange.startLineNumber,\n                    toLineNumber: changedRange.endLineNumber,\n                },\n            ],\n        });\n    }\n    tokenizeViewport(startLineNumber, endLineNumber) {\n        startLineNumber = Math.max(1, startLineNumber);\n        endLineNumber = Math.min(this._textModel.getLineCount(), endLineNumber);\n        this._tokenization.tokenizeViewport(startLineNumber, endLineNumber);\n    }\n    clearTokens() {\n        this._tokens.flush();\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: true,\n            semanticTokensApplied: false,\n            ranges: [\n                {\n                    fromLineNumber: 1,\n                    toLineNumber: this._textModel.getLineCount(),\n                },\n            ],\n        });\n    }\n    _emitModelTokensChangedEvent(e) {\n        if (!this._textModel._isDisposing()) {\n            this.bracketPairsTextModelPart.handleDidChangeTokens(e);\n            this._onDidChangeTokens.fire(e);\n        }\n    }\n    resetTokenization() {\n        this._tokenization.reset();\n    }\n    forceTokenization(lineNumber) {\n        if (lineNumber < 1 || lineNumber > this._textModel.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        this._tokenization.forceTokenization(lineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        return this._tokenization.isCheapToTokenize(lineNumber);\n    }\n    tokenizeIfCheap(lineNumber) {\n        if (this.isCheapToTokenize(lineNumber)) {\n            this.forceTokenization(lineNumber);\n        }\n    }\n    getLineTokens(lineNumber) {\n        if (lineNumber < 1 || lineNumber > this._textModel.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._getLineTokens(lineNumber);\n    }\n    _getLineTokens(lineNumber) {\n        const lineText = this._textModel.getLineContent(lineNumber);\n        const syntacticTokens = this._tokens.getTokens(this._languageId, lineNumber - 1, lineText);\n        return this._semanticTokens.addSparseTokens(lineNumber, syntacticTokens);\n    }\n    getTokenTypeIfInsertingCharacter(lineNumber, column, character) {\n        const position = this._textModel.validatePosition(new Position(lineNumber, column));\n        return this._tokenization.getTokenTypeIfInsertingCharacter(position, character);\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        const validatedPosition = this._textModel.validatePosition(position);\n        return this._tokenization.tokenizeLineWithEdit(validatedPosition, length, newText);\n    }\n    getLanguageConfiguration(languageId) {\n        return this._languageConfigurationService.getLanguageConfiguration(languageId);\n    }\n    // Having tokens allows implementing additional helper methods\n    getWordAtPosition(_position) {\n        this.assertNotDisposed();\n        const position = this._textModel.validatePosition(_position);\n        const lineContent = this._textModel.getLineContent(position.lineNumber);\n        const lineTokens = this._getLineTokens(position.lineNumber);\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        // (1). First try checking right biased word\n        const [rbStartOffset, rbEndOffset] = TokenizationTextModelPart._findLanguageBoundaries(lineTokens, tokenIndex);\n        const rightBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).getWordDefinition(), lineContent.substring(rbStartOffset, rbEndOffset), rbStartOffset);\n        // Make sure the result touches the original passed in position\n        if (rightBiasedWord &&\n            rightBiasedWord.startColumn <= _position.column &&\n            _position.column <= rightBiasedWord.endColumn) {\n            return rightBiasedWord;\n        }\n        // (2). Else, if we were at a language boundary, check the left biased word\n        if (tokenIndex > 0 && rbStartOffset === position.column - 1) {\n            // edge case, where `position` sits between two tokens belonging to two different languages\n            const [lbStartOffset, lbEndOffset] = TokenizationTextModelPart._findLanguageBoundaries(lineTokens, tokenIndex - 1);\n            const leftBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex - 1)).getWordDefinition(), lineContent.substring(lbStartOffset, lbEndOffset), lbStartOffset);\n            // Make sure the result touches the original passed in position\n            if (leftBiasedWord &&\n                leftBiasedWord.startColumn <= _position.column &&\n                _position.column <= leftBiasedWord.endColumn) {\n                return leftBiasedWord;\n            }\n        }\n        return null;\n    }\n    static _findLanguageBoundaries(lineTokens, tokenIndex) {\n        const languageId = lineTokens.getLanguageId(tokenIndex);\n        // go left until a different language is hit\n        let startOffset = 0;\n        for (let i = tokenIndex; i >= 0 && lineTokens.getLanguageId(i) === languageId; i--) {\n            startOffset = lineTokens.getStartOffset(i);\n        }\n        // go right until a different language is hit\n        let endOffset = lineTokens.getLineContent().length;\n        for (let i = tokenIndex, tokenCount = lineTokens.getCount(); i < tokenCount && lineTokens.getLanguageId(i) === languageId; i++) {\n            endOffset = lineTokens.getEndOffset(i);\n        }\n        return [startOffset, endOffset];\n    }\n    getWordUntilPosition(position) {\n        const wordAtPosition = this.getWordAtPosition(position);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column,\n            };\n        }\n        return {\n            word: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column,\n        };\n    }\n    getLanguageId() {\n        return this._languageId;\n    }\n    getLanguageIdAtPosition(lineNumber, column) {\n        const position = this._textModel.validatePosition(new Position(lineNumber, column));\n        const lineTokens = this.getLineTokens(position.lineNumber);\n        return lineTokens.getLanguageId(lineTokens.findTokenIndexAtOffset(position.column - 1));\n    }\n    setLanguageId(languageId) {\n        if (this._languageId === languageId) {\n            // There's nothing to do\n            return;\n        }\n        const e = {\n            oldLanguage: this._languageId,\n            newLanguage: languageId\n        };\n        this._languageId = languageId;\n        this.bracketPairsTextModelPart.handleDidChangeLanguage(e);\n        this._tokenization.handleDidChangeLanguage(e);\n        this._onDidChangeLanguage.fire(e);\n        this._onDidChangeLanguageConfiguration.fire({});\n    }\n}\n"],"mappings":"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"}]}