{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TokenMetadata","IThemeService","ILogService","LogLevel","SparseMultilineTokens","ILanguageService","SemanticTokensProviderStyling","_legend","_themeService","_languageService","_logService","_hasWarnedOverlappingTokens","_hasWarnedInvalidLengthTokens","_hasWarnedInvalidEditStart","_hashTable","HashTable","tokenTypeIndex","tokenModifierSet","languageId","encodedLanguageId","languageIdCodec","encodeLanguageId","entry","get","metadata","getLevel","Trace","trace","getForeground","getFontStyle","toString","tokenType","tokenTypes","tokenModifiers","modifierSet","modifierIndex","push","JSON","stringify","tokenStyle","getColorTheme","getTokenStyleMetadata","italic","italicBit","bold","boldBit","underline","underlineBit","strikethrough","strikethroughBit","foreground","foregroundBits","add","join","lineNumber","startColumn","console","warn","previousResultId","resultId","editIndex","editStart","maxExpectedStart","toMultilineTokens2","tokens","styling","srcData","data","tokenCount","tokensPerArea","Math","max","ceil","result","tokenIndex","lastLineNumber","lastStartCharacter","tokenStartIndex","tokenEndIndex","min","smallTokenEndIndex","bigTokenEndIndex","destData","Uint32Array","destOffset","areaLine","prevLineNumber","prevEndCharacter","srcOffset","deltaLine","deltaCharacter","startCharacter","endCharacter","warnInvalidLengthSemanticTokens","warnOverlappingSemanticTokens","getMetadata","subarray","create","HashTableEntry","next","_elementsCount","_currentLengthIndex","_currentLength","_SIZES","_growCount","round","_elements","_nullOutEntries","n1","n2","_hash2","hash","_hashFunc","p","oldElements","first","oldNext","_add","element","entries"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService, LogLevel } from '../../../platform/log/common/log.js';\nimport { SparseMultilineTokens } from '../tokens/sparseMultilineTokens.js';\nimport { ILanguageService } from '../languages/language.js';\nlet SemanticTokensProviderStyling = class SemanticTokensProviderStyling {\n    constructor(_legend, _themeService, _languageService, _logService) {\n        this._legend = _legend;\n        this._themeService = _themeService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._hasWarnedOverlappingTokens = false;\n        this._hasWarnedInvalidLengthTokens = false;\n        this._hasWarnedInvalidEditStart = false;\n        this._hashTable = new HashTable();\n    }\n    getMetadata(tokenTypeIndex, tokenModifierSet, languageId) {\n        const encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n        const entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, encodedLanguageId);\n        let metadata;\n        if (entry) {\n            metadata = entry.metadata;\n            if (this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        else {\n            let tokenType = this._legend.tokenTypes[tokenTypeIndex];\n            const tokenModifiers = [];\n            if (tokenType) {\n                let modifierSet = tokenModifierSet;\n                for (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\n                    if (modifierSet & 1) {\n                        tokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\n                    }\n                    modifierSet = modifierSet >> 1;\n                }\n                if (modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\n                    tokenModifiers.push('not-in-legend');\n                }\n                const tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId);\n                if (typeof tokenStyle === 'undefined') {\n                    metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                }\n                else {\n                    metadata = 0;\n                    if (typeof tokenStyle.italic !== 'undefined') {\n                        const italicBit = (tokenStyle.italic ? 1 /* FontStyle.Italic */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= italicBit | 1 /* MetadataConsts.SEMANTIC_USE_ITALIC */;\n                    }\n                    if (typeof tokenStyle.bold !== 'undefined') {\n                        const boldBit = (tokenStyle.bold ? 2 /* FontStyle.Bold */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= boldBit | 2 /* MetadataConsts.SEMANTIC_USE_BOLD */;\n                    }\n                    if (typeof tokenStyle.underline !== 'undefined') {\n                        const underlineBit = (tokenStyle.underline ? 4 /* FontStyle.Underline */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= underlineBit | 4 /* MetadataConsts.SEMANTIC_USE_UNDERLINE */;\n                    }\n                    if (typeof tokenStyle.strikethrough !== 'undefined') {\n                        const strikethroughBit = (tokenStyle.strikethrough ? 8 /* FontStyle.Strikethrough */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= strikethroughBit | 8 /* MetadataConsts.SEMANTIC_USE_STRIKETHROUGH */;\n                    }\n                    if (tokenStyle.foreground) {\n                        const foregroundBits = (tokenStyle.foreground) << 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n                        metadata |= foregroundBits | 16 /* MetadataConsts.SEMANTIC_USE_FOREGROUND */;\n                    }\n                    if (metadata === 0) {\n                        // Nothing!\n                        metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                    }\n                }\n            }\n            else {\n                if (this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\n                }\n                metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                tokenType = 'not-in-legend';\n            }\n            this._hashTable.add(tokenTypeIndex, tokenModifierSet, encodedLanguageId, metadata);\n            if (this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        return metadata;\n    }\n    warnOverlappingSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedOverlappingTokens) {\n            this._hasWarnedOverlappingTokens = true;\n            console.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidLengthSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedInvalidLengthTokens) {\n            this._hasWarnedInvalidLengthTokens = true;\n            console.warn(`Semantic token with invalid length detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidEditStart(previousResultId, resultId, editIndex, editStart, maxExpectedStart) {\n        if (!this._hasWarnedInvalidEditStart) {\n            this._hasWarnedInvalidEditStart = true;\n            console.warn(`Invalid semantic tokens edit detected (previousResultId: ${previousResultId}, resultId: ${resultId}) at edit #${editIndex}: The provided start offset ${editStart} is outside the previous data (length ${maxExpectedStart}).`);\n        }\n    }\n};\nSemanticTokensProviderStyling = __decorate([\n    __param(1, IThemeService),\n    __param(2, ILanguageService),\n    __param(3, ILogService)\n], SemanticTokensProviderStyling);\nexport { SemanticTokensProviderStyling };\nexport function toMultilineTokens2(tokens, styling, languageId) {\n    const srcData = tokens.data;\n    const tokenCount = (tokens.data.length / 5) | 0;\n    const tokensPerArea = Math.max(Math.ceil(tokenCount / 1024 /* SemanticColoringConstants.DesiredMaxAreas */), 400 /* SemanticColoringConstants.DesiredTokensPerArea */);\n    const result = [];\n    let tokenIndex = 0;\n    let lastLineNumber = 1;\n    let lastStartCharacter = 0;\n    while (tokenIndex < tokenCount) {\n        const tokenStartIndex = tokenIndex;\n        let tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\n        // Keep tokens on the same line in the same area...\n        if (tokenEndIndex < tokenCount) {\n            let smallTokenEndIndex = tokenEndIndex;\n            while (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\n                smallTokenEndIndex--;\n            }\n            if (smallTokenEndIndex - 1 === tokenStartIndex) {\n                // there are so many tokens on this line that our area would be empty, we must now go right\n                let bigTokenEndIndex = tokenEndIndex;\n                while (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\n                    bigTokenEndIndex++;\n                }\n                tokenEndIndex = bigTokenEndIndex;\n            }\n            else {\n                tokenEndIndex = smallTokenEndIndex;\n            }\n        }\n        let destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\n        let destOffset = 0;\n        let areaLine = 0;\n        let prevLineNumber = 0;\n        let prevEndCharacter = 0;\n        while (tokenIndex < tokenEndIndex) {\n            const srcOffset = 5 * tokenIndex;\n            const deltaLine = srcData[srcOffset];\n            const deltaCharacter = srcData[srcOffset + 1];\n            // Casting both `lineNumber`, `startCharacter` and `endCharacter` here to uint32 using `|0`\n            // to validate below with the actual values that will be inserted in the Uint32Array result\n            const lineNumber = (lastLineNumber + deltaLine) | 0;\n            const startCharacter = (deltaLine === 0 ? (lastStartCharacter + deltaCharacter) | 0 : deltaCharacter);\n            const length = srcData[srcOffset + 2];\n            const endCharacter = (startCharacter + length) | 0;\n            const tokenTypeIndex = srcData[srcOffset + 3];\n            const tokenModifierSet = srcData[srcOffset + 4];\n            if (endCharacter <= startCharacter) {\n                // this token is invalid (most likely a negative length casted to uint32)\n                styling.warnInvalidLengthSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\n                // this token overlaps with the previous token\n                styling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else {\n                const metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\n                if (metadata !== 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */) {\n                    if (areaLine === 0) {\n                        areaLine = lineNumber;\n                    }\n                    destData[destOffset] = lineNumber - areaLine;\n                    destData[destOffset + 1] = startCharacter;\n                    destData[destOffset + 2] = endCharacter;\n                    destData[destOffset + 3] = metadata;\n                    destOffset += 4;\n                    prevLineNumber = lineNumber;\n                    prevEndCharacter = endCharacter;\n                }\n            }\n            lastLineNumber = lineNumber;\n            lastStartCharacter = startCharacter;\n            tokenIndex++;\n        }\n        if (destOffset !== destData.length) {\n            destData = destData.subarray(0, destOffset);\n        }\n        const tokens = SparseMultilineTokens.create(areaLine, destData);\n        result.push(tokens);\n    }\n    return result;\n}\nclass HashTableEntry {\n    constructor(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this.tokenTypeIndex = tokenTypeIndex;\n        this.tokenModifierSet = tokenModifierSet;\n        this.languageId = languageId;\n        this.metadata = metadata;\n        this.next = null;\n    }\n}\nclass HashTable {\n    constructor() {\n        this._elementsCount = 0;\n        this._currentLengthIndex = 0;\n        this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n        this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n        this._elements = [];\n        HashTable._nullOutEntries(this._elements, this._currentLength);\n    }\n    static _nullOutEntries(entries, length) {\n        for (let i = 0; i < length; i++) {\n            entries[i] = null;\n        }\n    }\n    _hash2(n1, n2) {\n        return (((n1 << 5) - n1) + n2) | 0; // n1 * 31 + n2, keep as int32\n    }\n    _hashFunc(tokenTypeIndex, tokenModifierSet, languageId) {\n        return this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\n    }\n    get(tokenTypeIndex, tokenModifierSet, languageId) {\n        const hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\n        let p = this._elements[hash];\n        while (p) {\n            if (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\n                return p;\n            }\n            p = p.next;\n        }\n        return null;\n    }\n    add(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this._elementsCount++;\n        if (this._growCount !== 0 && this._elementsCount >= this._growCount) {\n            // expand!\n            const oldElements = this._elements;\n            this._currentLengthIndex++;\n            this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n            this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n            this._elements = [];\n            HashTable._nullOutEntries(this._elements, this._currentLength);\n            for (const first of oldElements) {\n                let p = first;\n                while (p) {\n                    const oldNext = p.next;\n                    p.next = null;\n                    this._add(p);\n                    p = oldNext;\n                }\n            }\n        }\n        this._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\n    }\n    _add(element) {\n        const hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\n        element.next = this._elements[hash];\n        this._elements[hash] = element;\n    }\n}\nHashTable._SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143];\n"],"mappings":"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"}]}