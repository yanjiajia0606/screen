{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["PageCoordinates","PartFingerprints","ViewLine","Position","Range","EditorRange","CursorColumns","dom","AtomicTabMoveOperations","UnknownHitTestResult","hitTarget","type","ContentHitTestResult","position","spanNode","injectedText","HitTestResult","createFromDOMInfo","ctx","offset","getPositionFromDOMInfo","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","range","lineNumber","column","element","mouseColumn","_deduceRage","detail","target","_typeToString","JSON","stringify","ElementPath","path","length","HitTestContext","context","viewHelper","lastRenderData","viewModel","options","configuration","layoutInfo","get","viewDomNode","lineHeight","stickyTabStops","typicalHalfwidthCharacterWidth","_context","_viewHelper","mouseVerticalOffset","getZoneAtCoord","viewLayout","isAfterLines","getLineCount","maxLineColumn","getLineMaxColumn","getLineNumberAtVerticalOffset","isInTopPadding","isInBottomPadding","getVerticalOffsetForLineNumber","attr","_findAttribute","getLineWidth","visibleRangeForPosition","getCurrentScrollTop","getCurrentScrollLeft","viewZoneWhitespace","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","height","lineCount","positionBefore","positionAfter","afterLineNumber","viewZoneId","id","stopAt","document","body","hasAttribute","getAttribute","parentNode","BareHitTestRequest","editorPos","pos","relativePos","Math","max","y","mouseContentHorizontalOffset","x","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","_getMouseColumn","HitTestRequest","_ctx","targetPath","collect","Uint8Array","outerHTML","visibleColumnFromColumn","getLineContent","model","getOptions","tabSize","createUnknown","createTextarea","createMargin","createViewZone","createContentText","createContentEmpty","createContentWidget","createScrollbar","createOverlayWidget","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","e","t","isChildOfContentWidgets","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","request","r","_createMouseTarget","err","fulfillUnknown","domHitTestExecuted","hitTestResult","_doHitTest","createMouseTargetFromHitTestPosition","withTarget","resolvedRequest","result","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","findAttribute","fulfillContentWidget","fulfillOverlayWidget","d","domNode","fulfillContentText","mightBeForeignElement","width","cursorVerticalOffset","viewZoneData","mouseTargetType","fulfillViewZone","isTextArea","fulfillTextarea","res","getFullLineRangeAtCoord","getStartPosition","abs","glyphMarginWidth","lineNumbersWidth","offsetX","fulfillMargin","isChildOfViewLines","fulfillContentEmpty","isStrictChildOfViewLines","getLineLength","lineWidth","isChildOfMinimap","possibleLineNumber","maxColumn","fulfillScrollbar","isChildOfScrollableElement","nodeType","className","test","chars","round","visibleRange","columnHorizontalOffset","left","points","push","lineMaxColumn","sort","a","b","mouseCoordinates","toClientCoordinates","spanNodeClientRect","getBoundingClientRect","mouseIsOverSpanNode","clientX","right","i","prev","curr","rng","prevDelta","nextDelta","resultPos","lineVerticalOffset","lineCenteredVerticalOffset","floor","adjustedPageY","adjustedPage","_actualDoHitTestWithCaretRangeFromPoint","coords","shadowRoot","getShadowRoot","caretRangeFromPoint","shadowCaretRangeFromPoint","clientY","startContainer","TEXT_NODE","parent1","parent2","parent3","parent3ClassName","ELEMENT_NODE","CLASS_NAME","startOffset","parent2ClassName","textContent","hitResult","caretPositionFromPoint","offsetNode","parent1ClassName","tokenSpan","childNodes","min","lineContent","newPosition","atomicPosition","_doHitTestWithCaretRangeFromPoint","_doHitTestWithCaretPositionFromPoint","getInjectedTextAt","normalizedPosition","normalizePosition","equals","_snapToSoftTabBoundary","createRange","el","elementFromPoint","firstChild","lastChild","rect","font","window","getComputedStyle","getPropertyValue","text","innerText","pixelCursor","step","charWidthReader","CharWidthReader","getInstance","getCharWidth","charAt","setStart","setEnd","_cache","_canvas","createElement","char","cacheKey","getContext","metrics","measureText","_INSTANCE"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations } from '../../common/cursor/cursorAtomicMoveOperations.js';\nclass UnknownHitTestResult {\n    constructor(hitTarget = null) {\n        this.hitTarget = hitTarget;\n        this.type = 0 /* HitTestResultType.Unknown */;\n    }\n}\nclass ContentHitTestResult {\n    constructor(position, spanNode, injectedText) {\n        this.position = position;\n        this.spanNode = spanNode;\n        this.injectedText = injectedText;\n        this.type = 1 /* HitTestResultType.Content */;\n    }\n}\nvar HitTestResult;\n(function (HitTestResult) {\n    function createFromDOMInfo(ctx, spanNode, offset) {\n        const position = ctx.getPositionFromDOMInfo(spanNode, offset);\n        if (position) {\n            return new ContentHitTestResult(position, spanNode, null);\n        }\n        return new UnknownHitTestResult(spanNode);\n    }\n    HitTestResult.createFromDOMInfo = createFromDOMInfo;\n})(HitTestResult || (HitTestResult = {}));\nexport class PointerHandlerLastRenderData {\n    constructor(lastViewCursorsRenderData, lastTextareaPosition) {\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n        this.lastTextareaPosition = lastTextareaPosition;\n    }\n}\nexport class MouseTarget {\n    static _deduceRage(position, range = null) {\n        if (!range && position) {\n            return new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return range !== null && range !== void 0 ? range : null;\n    }\n    static createUnknown(element, mouseColumn, position) {\n        return { type: 0 /* MouseTargetType.UNKNOWN */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createTextarea(element, mouseColumn) {\n        return { type: 1 /* MouseTargetType.TEXTAREA */, element, mouseColumn, position: null, range: null };\n    }\n    static createMargin(type, element, mouseColumn, position, range, detail) {\n        return { type, element, mouseColumn, position, range, detail };\n    }\n    static createViewZone(type, element, mouseColumn, position, detail) {\n        return { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentText(element, mouseColumn, position, range, detail) {\n        return { type: 6 /* MouseTargetType.CONTENT_TEXT */, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n    }\n    static createContentEmpty(element, mouseColumn, position, detail) {\n        return { type: 7 /* MouseTargetType.CONTENT_EMPTY */, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentWidget(element, mouseColumn, detail) {\n        return { type: 9 /* MouseTargetType.CONTENT_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createScrollbar(element, mouseColumn, position) {\n        return { type: 11 /* MouseTargetType.SCROLLBAR */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createOverlayWidget(element, mouseColumn, detail) {\n        return { type: 12 /* MouseTargetType.OVERLAY_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createOutsideEditor(mouseColumn, position) {\n        return { type: 13 /* MouseTargetType.OUTSIDE_EDITOR */, element: null, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static _typeToString(type) {\n        if (type === 1 /* MouseTargetType.TEXTAREA */) {\n            return 'TEXTAREA';\n        }\n        if (type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */) {\n            return 'GUTTER_GLYPH_MARGIN';\n        }\n        if (type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */) {\n            return 'GUTTER_LINE_NUMBERS';\n        }\n        if (type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n            return 'GUTTER_LINE_DECORATIONS';\n        }\n        if (type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            return 'GUTTER_VIEW_ZONE';\n        }\n        if (type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return 'CONTENT_TEXT';\n        }\n        if (type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            return 'CONTENT_EMPTY';\n        }\n        if (type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            return 'CONTENT_VIEW_ZONE';\n        }\n        if (type === 9 /* MouseTargetType.CONTENT_WIDGET */) {\n            return 'CONTENT_WIDGET';\n        }\n        if (type === 10 /* MouseTargetType.OVERVIEW_RULER */) {\n            return 'OVERVIEW_RULER';\n        }\n        if (type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return 'SCROLLBAR';\n        }\n        if (type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return 'OVERLAY_WIDGET';\n        }\n        return 'UNKNOWN';\n    }\n    static toString(target) {\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify(target.detail);\n    }\n}\nclass ElementPath {\n    static isTextArea(path) {\n        return (path.length === 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 6 /* PartFingerprint.TextArea */);\n    }\n    static isChildOfViewLines(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isStrictChildOfViewLines(path) {\n        return (path.length > 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isChildOfScrollableElement(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 5 /* PartFingerprint.ScrollableElement */);\n    }\n    static isChildOfMinimap(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 8 /* PartFingerprint.Minimap */);\n    }\n    static isChildOfContentWidgets(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 1 /* PartFingerprint.ContentWidgets */);\n    }\n    static isChildOfOverflowingContentWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 2 /* PartFingerprint.OverflowingContentWidgets */);\n    }\n    static isChildOfOverlayWidgets(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 4 /* PartFingerprint.OverlayWidgets */);\n    }\n}\nexport class HitTestContext {\n    constructor(context, viewHelper, lastRenderData) {\n        this.viewModel = context.viewModel;\n        const options = context.configuration.options;\n        this.layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this.viewDomNode = viewHelper.viewDomNode;\n        this.lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this.stickyTabStops = options.get(106 /* EditorOption.stickyTabStops */);\n        this.typicalHalfwidthCharacterWidth = options.get(46 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this.lastRenderData = lastRenderData;\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    getZoneAtCoord(mouseVerticalOffset) {\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n    }\n    static getZoneAtCoord(context, mouseVerticalOffset) {\n        // The target is either a view zone or the empty space after the last view-line\n        const viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n        if (viewZoneWhitespace) {\n            const viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n            const lineCount = context.viewModel.getLineCount();\n            let positionBefore = null;\n            let position;\n            let positionAfter = null;\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n                // There are more lines after this view zone\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n            }\n            if (viewZoneWhitespace.afterLineNumber > 0) {\n                // There are more lines above this view zone\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n            }\n            if (positionAfter === null) {\n                position = positionBefore;\n            }\n            else if (positionBefore === null) {\n                position = positionAfter;\n            }\n            else if (mouseVerticalOffset < viewZoneMiddle) {\n                position = positionBefore;\n            }\n            else {\n                position = positionAfter;\n            }\n            return {\n                viewZoneId: viewZoneWhitespace.id,\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\n                positionBefore: positionBefore,\n                positionAfter: positionAfter,\n                position: position\n            };\n        }\n        return null;\n    }\n    getFullLineRangeAtCoord(mouseVerticalOffset) {\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n            // Below the last line\n            const lineNumber = this._context.viewModel.getLineCount();\n            const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n            return {\n                range: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n                isAfterLines: true\n            };\n        }\n        const lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n        const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n        return {\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n            isAfterLines: false\n        };\n    }\n    getLineNumberAtVerticalOffset(mouseVerticalOffset) {\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    }\n    isAfterLines(mouseVerticalOffset) {\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n    }\n    isInTopPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n    }\n    isInBottomPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    findAttribute(element, attr) {\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n    }\n    static _findAttribute(element, attr, stopAt) {\n        while (element && element !== document.body) {\n            if (element.hasAttribute && element.hasAttribute(attr)) {\n                return element.getAttribute(attr);\n            }\n            if (element === stopAt) {\n                return null;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n    getLineWidth(lineNumber) {\n        return this._viewHelper.getLineWidth(lineNumber);\n    }\n    visibleRangeForPosition(lineNumber, column) {\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n    }\n    getPositionFromDOMInfo(spanNode, offset) {\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n    }\n    getCurrentScrollTop() {\n        return this._context.viewLayout.getCurrentScrollTop();\n    }\n    getCurrentScrollLeft() {\n        return this._context.viewLayout.getCurrentScrollLeft();\n    }\n}\nclass BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos) {\n        this.editorPos = editorPos;\n        this.pos = pos;\n        this.relativePos = relativePos;\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n        this.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n        this.isInContentArea = !this.isInMarginArea;\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n    }\n}\nclass HitTestRequest extends BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos, target) {\n        super(ctx, editorPos, pos, relativePos);\n        this._ctx = ctx;\n        if (target) {\n            this.target = target;\n            this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n        }\n        else {\n            this.target = null;\n            this.targetPath = new Uint8Array(0);\n        }\n    }\n    toString() {\n        return `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? this.target.outerHTML : null}`;\n    }\n    _getMouseColumn(position = null) {\n        if (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n            // Most likely, the line contains foreign decorations...\n            return CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n        }\n        return this.mouseColumn;\n    }\n    fulfillUnknown(position = null) {\n        return MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillTextarea() {\n        return MouseTarget.createTextarea(this.target, this._getMouseColumn());\n    }\n    fulfillMargin(type, position, range, detail) {\n        return MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillViewZone(type, position, detail) {\n        return MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentText(position, range, detail) {\n        return MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillContentEmpty(position, detail) {\n        return MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentWidget(detail) {\n        return MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n    }\n    fulfillScrollbar(position) {\n        return MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillOverlayWidget(detail) {\n        return MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n    }\n    withTarget(target) {\n        return new HitTestRequest(this._ctx, this.editorPos, this.pos, this.relativePos, target);\n    }\n}\nconst EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n    return {\n        isAfterLines: false,\n        horizontalDistanceToText: horizontalDistanceToText\n    };\n}\nexport class MouseTargetFactory {\n    constructor(context, viewHelper) {\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    mouseTargetIsWidget(e) {\n        const t = e.target;\n        const path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n            return true;\n        }\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(path)) {\n            return true;\n        }\n        return false;\n    }\n    createMouseTarget(lastRenderData, editorPos, pos, relativePos, target) {\n        const ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n        const request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n        try {\n            const r = MouseTargetFactory._createMouseTarget(ctx, request, false);\n            // console.log(MouseTarget.toString(r));\n            return r;\n        }\n        catch (err) {\n            // console.log(err);\n            return request.fulfillUnknown();\n        }\n    }\n    static _createMouseTarget(ctx, request, domHitTestExecuted) {\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n        // First ensure the request has a target\n        if (request.target === null) {\n            if (domHitTestExecuted) {\n                // Still no target... and we have already executed hit test...\n                return request.fulfillUnknown();\n            }\n            const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n            if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n                return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n            }\n            return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n        }\n        // we know for a fact that request.target is not null\n        const resolvedRequest = request;\n        let result = null;\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n        return (result || request.fulfillUnknown());\n    }\n    static _hitTestContentWidget(ctx, request) {\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillContentWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestOverlayWidget(ctx, request) {\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillOverlayWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestViewCursor(ctx, request) {\n        if (request.target) {\n            // Check if we've hit a painted cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            for (const d of lastViewCursorsRenderData) {\n                if (request.target === d.domNode) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        if (request.isInContentArea) {\n            // Edge has a bug when hit-testing the exact position of a cursor,\n            // instead of returning the correct dom node, it returns the\n            // first or last rendered view line dom node, therefore help it out\n            // and first check if we are on top of a cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            const mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n            const mouseVerticalOffset = request.mouseVerticalOffset;\n            for (const d of lastViewCursorsRenderData) {\n                if (mouseContentHorizontalOffset < d.contentLeft) {\n                    // mouse position is to the left of the cursor\n                    continue;\n                }\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n                    // mouse position is to the right of the cursor\n                    continue;\n                }\n                const cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n                if (cursorVerticalOffset <= mouseVerticalOffset\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestViewZone(ctx, request) {\n        const viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n        if (viewZoneData) {\n            const mouseTargetType = (request.isInContentArea ? 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ : 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n            return request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n        }\n        return null;\n    }\n    static _hitTestTextArea(ctx, request) {\n        // Is it the textarea?\n        if (ElementPath.isTextArea(request.targetPath)) {\n            if (ctx.lastRenderData.lastTextareaPosition) {\n                return request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n            }\n            return request.fulfillTextarea();\n        }\n        return null;\n    }\n    static _hitTestMargin(ctx, request) {\n        if (request.isInMarginArea) {\n            const res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n            const pos = res.range.getStartPosition();\n            let offset = Math.abs(request.relativePos.x);\n            const detail = {\n                isAfterLines: res.isAfterLines,\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n                offsetX: offset\n            };\n            offset -= ctx.layoutInfo.glyphMarginLeft;\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n                // On the glyph margin\n                return request.fulfillMargin(2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.glyphMarginWidth;\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n                // On the line numbers\n                return request.fulfillMargin(3 /* MouseTargetType.GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.lineNumbersWidth;\n            // On the line decorations\n            return request.fulfillMargin(4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n        }\n        return null;\n    }\n    static _hitTestViewLines(ctx, request, domHitTestExecuted) {\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n            return null;\n        }\n        if (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n            return request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if it is below any lines and any view zones\n        if (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n            // This most likely indicates it happened after the last view-line\n            const lineCount = ctx.viewModel.getLineCount();\n            const maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n            return request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n        }\n        if (domHitTestExecuted) {\n            // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n            // See https://github.com/microsoft/vscode/issues/46942\n            if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n                const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                if (ctx.viewModel.getLineLength(lineNumber) === 0) {\n                    const lineWidth = ctx.getLineWidth(lineNumber);\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    return request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n                }\n                const lineWidth = ctx.getLineWidth(lineNumber);\n                if (request.mouseContentHorizontalOffset >= lineWidth) {\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    const pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n                    return request.fulfillContentEmpty(pos, detail);\n                }\n            }\n            // We have already executed hit test...\n            return request.fulfillUnknown();\n        }\n        const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n        if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n        }\n        return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n    }\n    static _hitTestMinimap(ctx, request) {\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    static _hitTestScrollbarSlider(ctx, request) {\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            if (request.target && request.target.nodeType === 1) {\n                const className = request.target.className;\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n                    const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                    const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n                    return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestScrollbar(ctx, request) {\n        // Is it the overview ruler?\n        // Is it a child of the scrollable element?\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    getMouseColumn(relativePos) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        const mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(46 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth);\n    }\n    static _getMouseColumn(mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n        if (mouseContentHorizontalOffset < 0) {\n            return 1;\n        }\n        const chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n        return (chars + 1);\n    }\n    static createMouseTargetFromHitTestPosition(ctx, request, spanNode, pos, injectedText) {\n        const lineNumber = pos.lineNumber;\n        const column = pos.column;\n        const lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset > lineWidth) {\n            const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n            return request.fulfillContentEmpty(pos, detail);\n        }\n        const visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n        if (!visibleRange) {\n            return request.fulfillUnknown(pos);\n        }\n        const columnHorizontalOffset = visibleRange.left;\n        if (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\n            return request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n        }\n        const points = [];\n        points.push({ offset: visibleRange.left, column: column });\n        if (column > 1) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column - 1 });\n            }\n        }\n        const lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n        if (column < lineMaxColumn) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column + 1 });\n            }\n        }\n        points.sort((a, b) => a.offset - b.offset);\n        const mouseCoordinates = request.pos.toClientCoordinates();\n        const spanNodeClientRect = spanNode.getBoundingClientRect();\n        const mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n        for (let i = 1; i < points.length; i++) {\n            const prev = points[i - 1];\n            const curr = points[i];\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n                const rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n                // See https://github.com/microsoft/vscode/issues/152819\n                // Due to the use of zwj, the browser's hit test result is skewed towards the left\n                // Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n                const prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n                const nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n                const resultPos = (prevDelta < nextDelta\n                    ? new Position(lineNumber, prev.column)\n                    : new Position(lineNumber, curr.column));\n                return request.fulfillContentText(resultPos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n            }\n        }\n        return request.fulfillContentText(pos, null, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n    }\n    /**\n     * Most probably WebKit browsers and Edge\n     */\n    static _doHitTestWithCaretRangeFromPoint(ctx, request) {\n        // In Chrome, especially on Linux it is possible to click between lines,\n        // so try to adjust the `hity` below so that it lands in the center of a line\n        const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        const lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n        const lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\n        let adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n        if (adjustedPageY <= request.editorPos.y) {\n            adjustedPageY = request.editorPos.y + 1;\n        }\n        if (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n            adjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n        }\n        const adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n        const r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n        if (r.type === 1 /* HitTestResultType.Content */) {\n            return r;\n        }\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n    }\n    static _actualDoHitTestWithCaretRangeFromPoint(ctx, coords) {\n        const shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n        let range;\n        if (shadowRoot) {\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n            }\n            else {\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n            }\n        }\n        else {\n            range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\n        }\n        if (!range || !range.startContainer) {\n            return new UnknownHitTestResult();\n        }\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n        const startContainer = range.startContainer;\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\n            // startContainer is expected to be the token text\n            const parent1 = startContainer.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, parent1, range.startOffset);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer.parentNode);\n            }\n        }\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n            // startContainer is expected to be the token span\n            const parent1 = startContainer.parentNode; // expected to be the view line container span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, startContainer, startContainer.textContent.length);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer);\n            }\n        }\n        return new UnknownHitTestResult();\n    }\n    /**\n     * Most probably Gecko\n     */\n    static _doHitTestWithCaretPositionFromPoint(ctx, coords) {\n        const hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n            // offsetNode is expected to be the token text\n            const parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode.parentNode, hitResult.offset);\n            }\n            else {\n                return new UnknownHitTestResult(hitResult.offsetNode.parentNode);\n            }\n        }\n        // For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n        // Some other times, it returns the `<span>` with the inline decoration\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n            const parent1 = hitResult.offsetNode.parentNode;\n            const parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? parent1.className : null;\n            const parent2 = parent1 ? parent1.parentNode : null;\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent1ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n                const tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n                if (tokenSpan) {\n                    return HitTestResult.createFromDOMInfo(ctx, tokenSpan, 0);\n                }\n            }\n            else if (parent2ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` with the inline decoration\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode, 0);\n            }\n        }\n        return new UnknownHitTestResult(hitResult.offsetNode);\n    }\n    static _snapToSoftTabBoundary(position, viewModel) {\n        const lineContent = viewModel.getLineContent(position.lineNumber);\n        const { tabSize } = viewModel.model.getOptions();\n        const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 2 /* Direction.Nearest */);\n        if (newPosition !== -1) {\n            return new Position(position.lineNumber, newPosition + 1);\n        }\n        return position;\n    }\n    static _doHitTest(ctx, request) {\n        let result = new UnknownHitTestResult();\n        if (typeof document.caretRangeFromPoint === 'function') {\n            result = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n        }\n        else if (document.caretPositionFromPoint) {\n            result = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n        }\n        if (result.type === 1 /* HitTestResultType.Content */) {\n            const injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n            const normalizedPosition = ctx.viewModel.normalizePosition(result.position, 2 /* PositionAffinity.None */);\n            if (injectedText || !normalizedPosition.equals(result.position)) {\n                result = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n            }\n        }\n        // Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n        if (result.type === 1 /* HitTestResultType.Content */ && ctx.stickyTabStops) {\n            result = new ContentHitTestResult(this._snapToSoftTabBoundary(result.position, ctx.viewModel), result.spanNode, result.injectedText);\n        }\n        return result;\n    }\n}\nexport function shadowCaretRangeFromPoint(shadowRoot, x, y) {\n    const range = document.createRange();\n    // Get the element under the point\n    let el = shadowRoot.elementFromPoint(x, y);\n    if (el !== null) {\n        // Get the last child of the element until its firstChild is a text node\n        // This assumes that the pointer is on the right of the line, out of the tokens\n        // and that we want to get the offset of the last token of the line\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n            el = el.lastChild;\n        }\n        // Grab its rect\n        const rect = el.getBoundingClientRect();\n        // And its font\n        const font = window.getComputedStyle(el, null).getPropertyValue('font');\n        // And also its txt content\n        const text = el.innerText;\n        // Position the pixel cursor at the left of the element\n        let pixelCursor = rect.left;\n        let offset = 0;\n        let step;\n        // If the point is on the right of the box put the cursor after the last character\n        if (x > rect.left + rect.width) {\n            offset = text.length;\n        }\n        else {\n            const charWidthReader = CharWidthReader.getInstance();\n            // Goes through all the characters of the innerText, and checks if the x of the point\n            // belongs to the character.\n            for (let i = 0; i < text.length + 1; i++) {\n                // The step is half the width of the character\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n                // Move to the center of the character\n                pixelCursor += step;\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\n                if (x < pixelCursor) {\n                    offset = i;\n                    break;\n                }\n                // Move between the current character and the next\n                pixelCursor += step;\n            }\n        }\n        // Creates a range with the text node of the element and set the offset found\n        range.setStart(el.firstChild, offset);\n        range.setEnd(el.firstChild, offset);\n    }\n    return range;\n}\nclass CharWidthReader {\n    constructor() {\n        this._cache = {};\n        this._canvas = document.createElement('canvas');\n    }\n    static getInstance() {\n        if (!CharWidthReader._INSTANCE) {\n            CharWidthReader._INSTANCE = new CharWidthReader();\n        }\n        return CharWidthReader._INSTANCE;\n    }\n    getCharWidth(char, font) {\n        const cacheKey = char + font;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n        const context = this._canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(char);\n        const width = metrics.width;\n        this._cache[cacheKey] = width;\n        return width;\n    }\n}\nCharWidthReader._INSTANCE = null;\n"],"mappings":"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"}]}