{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","_a","nls","dom","createFastDomNode","ActionBar","DomScrollableElement","Action","Disposable","applyFontInfo","EditorAction","registerEditorAction","ICodeEditorService","EditorFontLigatures","LineTokens","Position","editorLineNumbers","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","ContextKeyExpr","scrollbarShadow","registerThemingParticipant","ThemeIcon","Codicon","registerIcon","ILanguageService","DIFF_LINES_PADDING","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","add","localize","diffReviewRemoveIcon","remove","diffReviewCloseIcon","close","DiffReview","diffEditor","_languageService","_width","_diffEditor","_isVisible","shadow","document","createElement","setClassName","actionBarContainer","_actionBar","_register","domNode","push","asClassName","hide","label","icon","_content","setAttribute","scrollbar","appendChild","getDomNode","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","onDidChangeCursorPosition","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","index","currentIndex","len","_findDiffIndex","getPosition","setPosition","setSelection","startColumn","startLineNumber","endColumn","endLineNumber","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","lineNumber","parseInt","getAttribute","isNaN","revealPosition","updateOptions","readOnly","focus","_getFirstRow","previousElementSibling","nextElementSibling","querySelector","activeElement","test","className","prev","tabIndex","scanDomNode","top","width","height","setTop","setWidth","setHeight","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","getModel","modifiedModel","_mergeAdjacent","getLineCount","pos","diff","lastModifiedLine","originalOptions","getOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","get","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","String","getAriaLines","lines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","concat","slice","dest","type","rowClassName","lineNumbersExtraClassName","spacerClassName","spacerIcon","cnt","Math","max","originalLayoutInfo","originalLineNumbersWidth","glyphMarginWidth","lineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","tabSize","_ttPolicy","createHTML","insertAdjacentHTML","getLineContent","ariaLabel","model","options","fontInfo","lineTokens","createEmpty","isBasicASCII","mightContainNonBasicASCII","containsRTL","mightContainRTL","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","window","trustedTypes","createPolicy","theme","collector","lineNumbers","getColor","addRule","DiffReviewNext","id","alias","precondition","has","kbOpts","kbExpr","primary","weight","accessor","editor","findFocusedDiffEditor","diffReviewNext","DiffReviewPrev","diffReviewPrev","codeEditorService","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","getId"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/core/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* DiffEntryType.Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* DiffEntryType.Delete */;\n        }\n        return 0 /* DiffEntryType.Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService) {\n        super();\n        this._languageService = _languageService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow());\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow());\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)) {\n                e.preventDefault();\n                this.hide();\n            }\n            if (e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* ScrollType.Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row) {\n        const prev = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (prev && prev !== row) {\n            prev.tabIndex = -1;\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(46 /* EditorOption.fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(61 /* EditorOption.lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* DiffEntryType.Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* DiffEntryType.Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(133 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(133 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* DiffEntryType.Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* DiffEntryType.Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* DiffEntryType.Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(29 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(107 /* EditorOption.stopRenderingLineAfter */), options.get(90 /* EditorOption.renderWhitespace */), options.get(85 /* EditorOption.renderControlCharacters */), options.get(47 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService)\n], DiffReview);\nexport { DiffReview };\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const lineNumbers = theme.getColor(editorLineNumbers);\n    if (lineNumbers) {\n        collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\n    }\n});\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewNext();\n        }\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewPrev();\n        }\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n"],"mappings":"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"}]}