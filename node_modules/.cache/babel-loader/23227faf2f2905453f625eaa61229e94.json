{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["dom","createFastDomNode","GlobalPointerMoveMonitor","Disposable","platform","strings","RenderedLinesCollection","PartFingerprints","ViewPart","MINIMAP_GUTTER_WIDTH","EditorLayoutInfoComputer","Range","RGBA8","MinimapTokensColorTracker","ViewModelDecoration","minimapSelection","scrollbarShadow","minimapBackground","minimapSliderBackground","minimapSliderHoverBackground","minimapSliderActiveBackground","minimapForegroundOpacity","registerThemingParticipant","Selection","EventType","Gesture","MinimapCharRendererFactory","MinimapPosition","once","POINTER_DRAG_RESET_DISTANCE","GUTTER_DECORATION_WIDTH","MinimapOptions","configuration","theme","tokensColorTracker","options","pixelRatio","get","layoutInfo","minimapLayout","minimap","fontInfo","minimapOpts","renderMinimap","size","minimapHeightIsEditorHeight","scrollBeyondLastLine","showSlider","autohide","typicalHalfwidthCharacterWidth","lineHeight","minimapLeft","minimapWidth","minimapHeight","height","canvasInnerWidth","minimapCanvasInnerWidth","canvasInnerHeight","minimapCanvasInnerHeight","canvasOuterWidth","minimapCanvasOuterWidth","canvasOuterHeight","minimapCanvasOuterHeight","isSampling","minimapIsSampling","editorHeight","fontScale","minimapScale","minimapLineHeight","minimapCharWidth","charRenderer","create","fontFamily","defaultBackgroundColor","getColor","backgroundColor","_getMinimapBackground","foregroundAlpha","_getMinimapForegroundOpacity","other","equals","themeColor","rgba","r","g","b","Math","round","a","_clamp","MinimapLayout","scrollTop","scrollHeight","sliderNeeded","computedSliderRatio","sliderTop","sliderHeight","startLineNumber","endLineNumber","_computedSliderRatio","delta","pageY","viewportStartLineNumber","viewportEndLineNumber","viewportStartLineNumberVerticalOffset","viewportHeight","viewportContainsWhitespaceGaps","lineCount","realLineCount","previousLayout","minimapLinesFitting","floor","logicalScrollHeight","max","maxMinimapSliderTop","maxLinesFitting","min","viewportLineCount","expectedViewportLineCount","extraLinesAtTheBottom","partialLine","sliderTopAligned","MinimapLine","dy","INVALID","RenderData","renderedLayout","imageData","lines","_imageData","_renderedLines","_set","layout","scrollEquals","tmp","_get","i","len","length","rendLineNumberStart","changeFromLineNumber","changeCount","onLinesChanged","deleteFromLineNumber","deleteToLineNumber","onLinesDeleted","insertFromLineNumber","insertToLineNumber","onLinesInserted","ranges","onTokensChanged","MinimapBuffers","ctx","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","result","data","set","backgroundR","backgroundG","backgroundB","backgroundA","Uint8ClampedArray","offset","j","MinimapSamplingState","samplingRatio","minimapLines","lineNumber","fromLineNumber","toLineNumber","fromLineIndex","modelLineToMinimapLine","toLineIndex","sampledLineNumber","minimapLineStart","minimapLineEnd","e","deletedLineCount","changeStartIndex","changeEndIndex","insertedLineCount","viewLineCount","oldSamplingState","computeContainedMinimapLineCount","minimapLineCount","ratio","halfRatio","lastIndex","oldMinimapLines","oldLength","oldIndex","oldDeltaLineCount","minViewLineNumber","MAX_EVENT_COUNT","events","lastEvent","fromViewLineNumber","toViewLineNumber","oldMinimapLineNumber","type","_oldIndex","push","selectedViewLineNumber","_i","Minimap","context","getInstance","_selections","_minimapSelections","_context","compute","viewModel","getLineCount","samplingState","_samplingState","_shouldCheckSampling","_actual","InnerMinimap","dispose","getDomNode","opts","_recreateLineSampling","onDidChangeOptions","_onOptionsMaybeChanged","selections","onSelectionChanged","affectsMinimap","onDecorationsChanged","onFlushed","minimapLineRange","modelLineRangeToMinimapLineRange","count","onScrollChanged","onThemeChanged","range","onTokensColorsChanged","onZonesChanged","visibleRange","minimapCtx","viewportData","whitespaceViewportData","scrollWidth","getVerticalOffsetForLineNumber","scrollLeft","viewportWidth","render","wasSampling","Boolean","event","getLineContent","getLineMaxColumn","needed","lineIndex","getViewLineData","getMinimapLinesRenderingData","selection","decorationLineRangeToMinimapLineRange","startColumn","endColumn","modelStartLineNumber","modelEndLineNumber","decorations","getDecorationsInViewport","decoration","minimapStartLineNumber","minimapEndLineNumber","model","getOptions","revealRange","viewLayout","setScrollPosition","_renderDecorations","_gestureInProgress","_theme","_model","_lastRenderData","_selectionColor","_domNode","document","createElement","write","setClassName","_getMinimapDomNodeClassName","setPosition","setAttribute","_shadow","appendChild","_canvas","setLeft","_decorationsCanvas","_slider","setLayerHinting","setContain","_sliderHorizontal","_applyLayout","_pointerDownListener","addStandardDisposableListener","domNode","POINTER_DOWN","preventDefault","button","position","getDomNodePagePosition","initialPosY","top","_startSliderDragging","internalOffsetY","offsetY","revealLineNumber","_sliderPointerMoveMonitor","_sliderPointerDownListener","stopPropagation","_gestureDisposable","addTarget","_sliderTouchStartListener","addDisposableListener","Start","toggleClassName","scrollDueToTouchEvent","passive","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","initialSliderState","target","Element","initialPosX","pageX","handlePointerMove","posy","posx","pointerOrthogonalDelta","abs","isWindows","setScrollTop","pointerDelta","getDesiredScrollTopFromDelta","startMonitoring","pointerId","buttons","pointerMoveData","touch","startY","getBoundingClientRect","getDesiredScrollTopFromTouchLocation","class_","join","setWidth","setHeight","width","getContext","getBuffer","_a","renderingCtx","getRealLineCount","setDisplay","setTop","renderDecorations","renderLines","getSelections","sort","compareRangesUsingStarts","getMinimapDecorationsInViewport","zIndex","characterWidth","tabSize","canvasContext","clearRect","highlightedLines","ContiguousLineMap","_renderSelectionLineHighlights","_renderDecorationsLineHighlights","lineOffsetMap","_renderSelectionsHighlights","_renderDecorationsHighlights","isTransparent","fillStyle","transparent","toString","y1","y2","line","yy1","yy2","fillRect","canvas","highlightColors","Map","minimapOptions","Inline","decorationColor","value","highlightColor","has","y","renderDecorationOnLine","Gutter","x","renderDecoration","decorationRange","charWidth","x1","getXOffsetForPosition","x2","column","minimumXOffset","lineIndexToXOffset","lineData","prevx","charCode","charCodeAt","dx","isFullWidthCharacter","linesEquals","_lastData","_getBuffer","_renderUntouchedLines","_dirtyY1","_dirtyY2","lineInfo","defaultBackground","useLighterFont","backgroundIsLight","baseCharHeight","renderMinimapLineHeight","innerLinePadding","renderBackground","renderedLines","_renderLine","dirtyY1","dirtyY2","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","backgroundAlpha","colorTracker","minimapCharRenderer","content","tokens","maxDx","force1pxHeight","charIndex","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","blockRenderChar","renderChar","defaultValue","_startLineNumber","_endLineNumber","_defaultValue","_values","collector","sliderBackground","addRule","sliderHoverBackground","sliderActiveBackground","shadow"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, scrollbarShadow, minimapBackground, minimapSliderBackground, minimapSliderHoverBackground, minimapSliderActiveBackground, minimapForegroundOpacity } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { once } from '../../../../base/common/functional.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(131 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(67 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(96 /* EditorOption.scrollBeyondLastLine */);\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.charRenderer = once(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            const logicalScrollHeight = (realLineCount * options.lineHeight\n                + (options.scrollBeyondLastLine ? viewportHeight - options.lineHeight : 0));\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        let maxMinimapSliderTop;\n        if (options.scrollBeyondLastLine) {\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (lineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, lineCount * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        let extraLinesAtTheBottom = 0;\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = expectedViewportLineCount - 1;\n        }\n        if (minimapLinesFitting >= lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const startLineNumber = 1;\n            const endLineNumber = lineCount;\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\n        }\n        else {\n            let startLineNumber = Math.max(1, Math.floor(viewportStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            const sliderTopAligned = (viewportStartLineNumber - startLineNumber + partialLine) * minimapLineHeight / pixelRatio;\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nMinimapLine.INVALID = new MinimapLine(-1);\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection(() => MinimapLine.INVALID);\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    constructor(samplingRatio, minimapLines) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const pixelRatio = options.pixelRatio;\n        const lineHeight = options.lineHeight;\n        const scrollBeyondLastLine = options.scrollBeyondLastLine;\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: scrollBeyondLastLine,\n            height: options.editorHeight,\n            lineHeight: lineHeight,\n            pixelRatio: pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        const decorations = this._context.viewModel.getDecorationsInViewport(visibleRange);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 8 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const pointerOrthogonalDelta = Math.abs(posx - initialPosX);\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const lineHeight = this._model.options.minimapLineHeight;\n            const characterWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, lineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, lineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, lineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const startLineNumber = Math.max(layout.startLineNumber, selection.startLineNumber);\n            const endLineNumber = Math.min(layout.endLineNumber, selection.endLineNumber);\n            if (startLineNumber > endLineNumber) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = (startLineNumber - layout.startLineNumber) * lineHeight;\n            const yy2 = (endLineNumber - layout.startLineNumber) * lineHeight + lineHeight;\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, lineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n                continue;\n            }\n            const startLineNumber = Math.max(layout.startLineNumber, decoration.range.startLineNumber);\n            const endLineNumber = Math.min(layout.endLineNumber, decoration.range.endLineNumber);\n            if (startLineNumber > endLineNumber) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = (startLineNumber - layout.startLineNumber) * lineHeight;\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, lineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const startLineNumber = Math.max(layout.startLineNumber, selection.startLineNumber);\n            const endLineNumber = Math.min(layout.endLineNumber, selection.endLineNumber);\n            if (startLineNumber > endLineNumber) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const startLineNumber = Math.max(layout.startLineNumber, decoration.range.startLineNumber);\n            const endLineNumber = Math.min(layout.endLineNumber, decoration.range.endLineNumber);\n            if (startLineNumber > endLineNumber) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case MinimapPosition.Inline:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case MinimapPosition.Gutter: {\n                        const y = (line - layout.startLineNumber) * lineHeight;\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, lineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, lineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = (lineNumber - layout.startLineNumber) * lineHeight;\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = 0;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const sliderBackground = theme.getColor(minimapSliderBackground);\n    if (sliderBackground) {\n        collector.addRule(`.monaco-editor .minimap-slider .minimap-slider-horizontal { background: ${sliderBackground}; }`);\n    }\n    const sliderHoverBackground = theme.getColor(minimapSliderHoverBackground);\n    if (sliderHoverBackground) {\n        collector.addRule(`.monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: ${sliderHoverBackground}; }`);\n    }\n    const sliderActiveBackground = theme.getColor(minimapSliderActiveBackground);\n    if (sliderActiveBackground) {\n        collector.addRule(`.monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: ${sliderActiveBackground}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-editor .minimap-shadow-visible { box-shadow: ${shadow} -6px 0 6px -6px inset; }`);\n    }\n});\n"],"mappings":"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"}]}