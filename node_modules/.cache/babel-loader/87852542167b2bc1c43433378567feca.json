{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/textChange.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/textChange.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["buffer","decodeUTF16LE","escapeNewLine","str","replace","TextChange","oldPosition","oldText","newPosition","newText","length","_writeStringSize","b","offset","writeUInt32BE","_writeString","len","i","writeUInt16LE","charCodeAt","readUInt32BE","dest","_readString","push","compressConsecutiveTextChanges","prevEdits","currEdits","compressor","TextChangeCompressor","compress","_prevEdits","_currEdits","_result","_resultLen","_prevLen","_prevDeltaOffset","_currLen","_currDeltaOffset","prevIndex","currIndex","prevEdit","_getPrev","currEdit","_getCurr","_acceptCurr","_acceptPrev","oldEnd","newEnd","_splitCurr","e1","e2","_splitPrev","mergePrev","mergeCurr","oldLength","newLength","merged","_merge","cleaned","_removeNoOps","_rebaseCurr","_rebasePrev","prevDeltaOffset","currDeltaOffset","edit","preText","substr","postText","edits","result","resultLen","prev","curr"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/textChange.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as buffer from '../../../base/common/buffer.js';\nimport { decodeUTF16LE } from './stringBuilder.js';\nfunction escapeNewLine(str) {\n    return (str\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r'));\n}\nexport class TextChange {\n    constructor(oldPosition, oldText, newPosition, newText) {\n        this.oldPosition = oldPosition;\n        this.oldText = oldText;\n        this.newPosition = newPosition;\n        this.newText = newText;\n    }\n    get oldLength() {\n        return this.oldText.length;\n    }\n    get oldEnd() {\n        return this.oldPosition + this.oldText.length;\n    }\n    get newLength() {\n        return this.newText.length;\n    }\n    get newEnd() {\n        return this.newPosition + this.newText.length;\n    }\n    toString() {\n        if (this.oldText.length === 0) {\n            return `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n        }\n        if (this.newText.length === 0) {\n            return `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n        }\n        return `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n    }\n    static _writeStringSize(str) {\n        return (4 + 2 * str.length);\n    }\n    static _writeString(b, str, offset) {\n        const len = str.length;\n        buffer.writeUInt32BE(b, len, offset);\n        offset += 4;\n        for (let i = 0; i < len; i++) {\n            buffer.writeUInt16LE(b, str.charCodeAt(i), offset);\n            offset += 2;\n        }\n        return offset;\n    }\n    static _readString(b, offset) {\n        const len = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        return decodeUTF16LE(b, offset, len);\n    }\n    writeSize() {\n        return (+4 // oldPosition\n            + 4 // newPosition\n            + TextChange._writeStringSize(this.oldText)\n            + TextChange._writeStringSize(this.newText));\n    }\n    write(b, offset) {\n        buffer.writeUInt32BE(b, this.oldPosition, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.newPosition, offset);\n        offset += 4;\n        offset = TextChange._writeString(b, this.oldText, offset);\n        offset = TextChange._writeString(b, this.newText, offset);\n        return offset;\n    }\n    static read(b, offset, dest) {\n        const oldPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const newPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const oldText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(oldText);\n        const newText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(newText);\n        dest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n        return offset;\n    }\n}\nexport function compressConsecutiveTextChanges(prevEdits, currEdits) {\n    if (prevEdits === null || prevEdits.length === 0) {\n        return currEdits;\n    }\n    const compressor = new TextChangeCompressor(prevEdits, currEdits);\n    return compressor.compress();\n}\nclass TextChangeCompressor {\n    constructor(prevEdits, currEdits) {\n        this._prevEdits = prevEdits;\n        this._currEdits = currEdits;\n        this._result = [];\n        this._resultLen = 0;\n        this._prevLen = this._prevEdits.length;\n        this._prevDeltaOffset = 0;\n        this._currLen = this._currEdits.length;\n        this._currDeltaOffset = 0;\n    }\n    compress() {\n        let prevIndex = 0;\n        let currIndex = 0;\n        let prevEdit = this._getPrev(prevIndex);\n        let currEdit = this._getCurr(currIndex);\n        while (prevIndex < this._prevLen || currIndex < this._currLen) {\n            if (prevEdit === null) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (currEdit === null) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldEnd <= prevEdit.newPosition) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (prevEdit.newEnd <= currEdit.oldPosition) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldPosition < prevEdit.newPosition) {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n                this._acceptCurr(e1);\n                currEdit = e2;\n                continue;\n            }\n            if (prevEdit.newPosition < currEdit.oldPosition) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n                this._acceptPrev(e1);\n                prevEdit = e2;\n                continue;\n            }\n            // At this point, currEdit.oldPosition === prevEdit.newPosition\n            let mergePrev;\n            let mergeCurr;\n            if (currEdit.oldEnd === prevEdit.newEnd) {\n                mergePrev = prevEdit;\n                mergeCurr = currEdit;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = this._getCurr(++currIndex);\n            }\n            else if (currEdit.oldEnd < prevEdit.newEnd) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n                mergePrev = e1;\n                mergeCurr = currEdit;\n                prevEdit = e2;\n                currEdit = this._getCurr(++currIndex);\n            }\n            else {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n                mergePrev = prevEdit;\n                mergeCurr = e1;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = e2;\n            }\n            this._result[this._resultLen++] = new TextChange(mergePrev.oldPosition, mergePrev.oldText, mergeCurr.newPosition, mergeCurr.newText);\n            this._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n            this._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n        }\n        const merged = TextChangeCompressor._merge(this._result);\n        const cleaned = TextChangeCompressor._removeNoOps(merged);\n        return cleaned;\n    }\n    _acceptCurr(currEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n        this._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n    }\n    _getCurr(currIndex) {\n        return (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n    }\n    _acceptPrev(prevEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n        this._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n    }\n    _getPrev(prevIndex) {\n        return (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n    }\n    static _rebaseCurr(prevDeltaOffset, currEdit) {\n        return new TextChange(currEdit.oldPosition - prevDeltaOffset, currEdit.oldText, currEdit.newPosition, currEdit.newText);\n    }\n    static _rebasePrev(currDeltaOffset, prevEdit) {\n        return new TextChange(prevEdit.oldPosition, prevEdit.oldText, prevEdit.newPosition + currDeltaOffset, prevEdit.newText);\n    }\n    static _splitPrev(edit, offset) {\n        const preText = edit.newText.substr(0, offset);\n        const postText = edit.newText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, edit.oldText, edit.newPosition, preText),\n            new TextChange(edit.oldEnd, '', edit.newPosition + offset, postText)\n        ];\n    }\n    static _splitCurr(edit, offset) {\n        const preText = edit.oldText.substr(0, offset);\n        const postText = edit.oldText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, preText, edit.newPosition, edit.newText),\n            new TextChange(edit.oldPosition + offset, postText, edit.newEnd, '')\n        ];\n    }\n    static _merge(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        let prev = edits[0];\n        for (let i = 1; i < edits.length; i++) {\n            const curr = edits[i];\n            if (prev.oldEnd === curr.oldPosition) {\n                // Merge into `prev`\n                prev = new TextChange(prev.oldPosition, prev.oldText + curr.oldText, prev.newPosition, prev.newText + curr.newText);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = curr;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _removeNoOps(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0; i < edits.length; i++) {\n            const edit = edits[i];\n            if (edit.oldText === edit.newText) {\n                continue;\n            }\n            result[resultLen++] = edit;\n        }\n        return result;\n    }\n}\n"],"mappings":"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"}]}