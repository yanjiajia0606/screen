{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/errors.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/errors.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ErrorHandler","listeners","unexpectedErrorHandler","e","setTimeout","stack","ErrorNoTelemetry","isErrorNoTelemetry","message","Error","forEach","listener","emit","errorHandler","onUnexpectedError","isCancellationError","undefined","onUnexpectedExternalError","transformErrorForSerialization","error","name","stacktrace","$isError","noTelemetry","canceledName","CancellationError","canceled","illegalArgument","illegalState","NotSupportedError","msg","err","result","BugIndicatingError","Object","setPrototypeOf","prototype"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/common/errors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'ErrorNoTelemetry';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'ErrorNoTelemetry';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        debugger;\n    }\n}\n"],"mappings":"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"}]}