{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["onUnexpectedError","Emitter","Disposable","regExpLeadsToEndlessLoop","clearPlatformLanguageAssociations","getLanguageIds","registerPlatformLanguageAssociation","ModesRegistry","PLAINTEXT_LANGUAGE_ID","Extensions","Registry","hasOwnProperty","Object","prototype","NULL_LANGUAGE_ID","LanguageIdCodec","_languageIdToLanguage","_languageToLanguageId","Map","_register","_nextLanguageId","language","languageId","set","has","get","LanguagesRegistry","useModesRegistry","warnOnOverwrite","_onDidChange","onDidChange","event","instanceCount","_warnOnOverwrite","languageIdCodec","_dynamicLanguages","_languages","_mimeTypesMap","_nameMap","_lowercaseNameMap","_initializeFromRegistry","onDidChangeLanguages","m","desc","concat","getLanguages","_registerLanguages","d","_registerLanguage","keys","forEach","langId","name","identifier","aliases","alias","toLowerCase","mimetypes","mimetype","as","Configuration","registerOverrideIdentifiers","getRegisteredLanguageIds","fire","lang","id","resolvedLanguage","call","register","extensions","filenames","configurationFiles","icons","_mergeLanguage","primaryMime","Array","isArray","length","push","configuration","extension","mime","filename","filenamePatterns","filenamePattern","filepattern","firstLine","firstLineRegexStr","charAt","firstLineRegex","RegExp","firstline","err","langAliases","langAlias","containsAliases","bestName","icon","languageName","languageNameLower","mimeType","resource"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\nexport class LanguageIdCodec {\n    constructor() {\n        this._languageIdToLanguage = [];\n        this._languageToLanguageId = new Map();\n        this._register(NULL_LANGUAGE_ID, 0 /* LanguageId.Null */);\n        this._register(PLAINTEXT_LANGUAGE_ID, 1 /* LanguageId.PlainText */);\n        this._nextLanguageId = 2;\n    }\n    _register(language, languageId) {\n        this._languageIdToLanguage[languageId] = language;\n        this._languageToLanguageId.set(language, languageId);\n    }\n    register(language) {\n        if (this._languageToLanguageId.has(language)) {\n            return;\n        }\n        const languageId = this._nextLanguageId++;\n        this._register(language, languageId);\n    }\n    encodeLanguageId(languageId) {\n        return this._languageToLanguageId.get(languageId) || 0 /* LanguageId.Null */;\n    }\n    decodeLanguageId(languageId) {\n        return this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n    }\n}\nexport class LanguagesRegistry extends Disposable {\n    constructor(useModesRegistry = true, warnOnOverwrite = false) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        LanguagesRegistry.instanceCount++;\n        this._warnOnOverwrite = warnOnOverwrite;\n        this.languageIdCodec = new LanguageIdCodec();\n        this._dynamicLanguages = [];\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        if (useModesRegistry) {\n            this._initializeFromRegistry();\n            this._register(ModesRegistry.onDidChangeLanguages((m) => {\n                this._initializeFromRegistry();\n            }));\n        }\n    }\n    dispose() {\n        LanguagesRegistry.instanceCount--;\n        super.dispose();\n    }\n    _initializeFromRegistry() {\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        clearPlatformLanguageAssociations();\n        const desc = [].concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n        this._registerLanguages(desc);\n    }\n    _registerLanguages(desc) {\n        for (const d of desc) {\n            this._registerLanguage(d);\n        }\n        // Rebuild fast path maps\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        Object.keys(this._languages).forEach((langId) => {\n            const language = this._languages[langId];\n            if (language.name) {\n                this._nameMap[language.name] = language.identifier;\n            }\n            language.aliases.forEach((alias) => {\n                this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n            });\n            language.mimetypes.forEach((mimetype) => {\n                this._mimeTypesMap[mimetype] = language.identifier;\n            });\n        });\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n        this._onDidChange.fire();\n    }\n    _registerLanguage(lang) {\n        const langId = lang.id;\n        let resolvedLanguage;\n        if (hasOwnProperty.call(this._languages, langId)) {\n            resolvedLanguage = this._languages[langId];\n        }\n        else {\n            this.languageIdCodec.register(langId);\n            resolvedLanguage = {\n                identifier: langId,\n                name: null,\n                mimetypes: [],\n                aliases: [],\n                extensions: [],\n                filenames: [],\n                configurationFiles: [],\n                icons: []\n            };\n            this._languages[langId] = resolvedLanguage;\n        }\n        this._mergeLanguage(resolvedLanguage, lang);\n    }\n    _mergeLanguage(resolvedLanguage, lang) {\n        const langId = lang.id;\n        let primaryMime = null;\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n            resolvedLanguage.mimetypes.push(...lang.mimetypes);\n            primaryMime = lang.mimetypes[0];\n        }\n        if (!primaryMime) {\n            primaryMime = `text/x-${langId}`;\n            resolvedLanguage.mimetypes.push(primaryMime);\n        }\n        if (Array.isArray(lang.extensions)) {\n            if (lang.configuration) {\n                // insert first as this appears to be the 'primary' language definition\n                resolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n            }\n            else {\n                resolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n            }\n            for (const extension of lang.extensions) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n            }\n        }\n        if (Array.isArray(lang.filenames)) {\n            for (const filename of lang.filenames) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n                resolvedLanguage.filenames.push(filename);\n            }\n        }\n        if (Array.isArray(lang.filenamePatterns)) {\n            for (const filenamePattern of lang.filenamePatterns) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n            }\n        }\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n            let firstLineRegexStr = lang.firstLine;\n            if (firstLineRegexStr.charAt(0) !== '^') {\n                firstLineRegexStr = '^' + firstLineRegexStr;\n            }\n            try {\n                const firstLineRegex = new RegExp(firstLineRegexStr);\n                if (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n                    registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n                }\n            }\n            catch (err) {\n                // Most likely, the regex was bad\n                onUnexpectedError(err);\n            }\n        }\n        resolvedLanguage.aliases.push(langId);\n        let langAliases = null;\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n            if (lang.aliases.length === 0) {\n                // signal that this language should not get a name\n                langAliases = [null];\n            }\n            else {\n                langAliases = lang.aliases;\n            }\n        }\n        if (langAliases !== null) {\n            for (const langAlias of langAliases) {\n                if (!langAlias || langAlias.length === 0) {\n                    continue;\n                }\n                resolvedLanguage.aliases.push(langAlias);\n            }\n        }\n        const containsAliases = (langAliases !== null && langAliases.length > 0);\n        if (containsAliases && langAliases[0] === null) {\n            // signal that this language should not get a name\n        }\n        else {\n            const bestName = (containsAliases ? langAliases[0] : null) || langId;\n            if (containsAliases || !resolvedLanguage.name) {\n                resolvedLanguage.name = bestName;\n            }\n        }\n        if (lang.configuration) {\n            resolvedLanguage.configurationFiles.push(lang.configuration);\n        }\n        if (lang.icon) {\n            resolvedLanguage.icons.push(lang.icon);\n        }\n    }\n    isRegisteredLanguageId(languageId) {\n        if (!languageId) {\n            return false;\n        }\n        return hasOwnProperty.call(this._languages, languageId);\n    }\n    getRegisteredLanguageIds() {\n        return Object.keys(this._languages);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        const languageNameLower = languageName.toLowerCase();\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n            return null;\n        }\n        return this._lowercaseNameMap[languageNameLower];\n    }\n    getLanguageIdByMimeType(mimeType) {\n        if (!mimeType) {\n            return null;\n        }\n        if (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n            return this._mimeTypesMap[mimeType];\n        }\n        return null;\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        if (!resource && !firstLine) {\n            return [];\n        }\n        return getLanguageIds(resource, firstLine);\n    }\n}\nLanguagesRegistry.instanceCount = 0;\n"],"mappings":"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"}]}