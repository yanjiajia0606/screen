{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi4KICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCmltcG9ydCB7IHNwbGl0TGluZXMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9iYXNlL2NvbW1vbi9zdHJpbmdzLmpzJzsKaW1wb3J0IHsgUmFuZ2UgfSBmcm9tICcuLi8uLi8uLi9jb3JlL3JhbmdlLmpzJzsKLyoqCiAqIFJlcHJlc2VudHMgYSBub24tbmVnYXRpdmUgbGVuZ3RoIGluIHRlcm1zIG9mIGxpbmUgYW5kIGNvbHVtbiBjb3VudC4KICogUHJlZmVyIHVzaW5nIHtAbGluayBMZW5ndGh9IGZvciBwZXJmb3JtYW5jZSByZWFzb25zLgoqLwpleHBvcnQgdmFyIExlbmd0aE9iaiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTGVuZ3RoT2JqKGxpbmVDb3VudCwgY29sdW1uQ291bnQpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMZW5ndGhPYmopOwogICAgdGhpcy5saW5lQ291bnQgPSBsaW5lQ291bnQ7CiAgICB0aGlzLmNvbHVtbkNvdW50ID0gY29sdW1uQ291bnQ7CiAgfQogIF9jcmVhdGVDbGFzcyhMZW5ndGhPYmosIFt7CiAgICBrZXk6ICJ0b1N0cmluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy5saW5lQ291bnQsICIsIikuY29uY2F0KHRoaXMuY29sdW1uQ291bnQpOwogICAgfQogIH1dKTsKICByZXR1cm4gTGVuZ3RoT2JqOwp9KCk7Ckxlbmd0aE9iai56ZXJvID0gbmV3IExlbmd0aE9iaigwLCAwKTsKLyoqCiAqIFRoZSBlbmQgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIHN0YXJ0LgoqLwpleHBvcnQgZnVuY3Rpb24gbGVuZ3RoRGlmZihzdGFydExpbmVDb3VudCwgc3RhcnRDb2x1bW5Db3VudCwgZW5kTGluZUNvdW50LCBlbmRDb2x1bW5Db3VudCkgewogIHJldHVybiBzdGFydExpbmVDb3VudCAhPT0gZW5kTGluZUNvdW50ID8gdG9MZW5ndGgoZW5kTGluZUNvdW50IC0gc3RhcnRMaW5lQ291bnQsIGVuZENvbHVtbkNvdW50KSA6IHRvTGVuZ3RoKDAsIGVuZENvbHVtbkNvdW50IC0gc3RhcnRDb2x1bW5Db3VudCk7Cn0KZXhwb3J0IHZhciBsZW5ndGhaZXJvID0gMDsKZXhwb3J0IGZ1bmN0aW9uIGxlbmd0aElzWmVybyhsZW5ndGgpIHsKICByZXR1cm4gbGVuZ3RoID09PSAwOwp9Ci8qCiAqIFdlIGhhdmUgNTIgYml0cyBhdmFpbGFibGUgaW4gYSBKUyBudW1iZXIuCiAqIFdlIHVzZSB0aGUgdXBwZXIgMjYgYml0cyB0byBzdG9yZSB0aGUgbGluZSBhbmQgdGhlIGxvd2VyIDI2IGJpdHMgdG8gc3RvcmUgdGhlIGNvbHVtbi4KICoKICogU2V0IGJvb2xlYW4gdG8gYHRydWVgIHdoZW4gZGVidWdnaW5nLCBzbyB0aGF0IGRlYnVnZ2luZyBpcyBlYXNpZXIuCiAqLwp2YXIgZmFjdG9yID0gLyogaXMgZGVidWc6ICovZmFsc2UgPyAxMDAwMDAgOiBNYXRoLnBvdygyLCAyNik7CmV4cG9ydCBmdW5jdGlvbiB0b0xlbmd0aChsaW5lQ291bnQsIGNvbHVtbkNvdW50KSB7CiAgLy8gbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjYyAoNTIgYml0cykKICAvLyAgICAgICBsaW5lIGNvdW50ICgyNiBiaXRzKSAgICBjb2x1bW4gY291bnQgKDI2IGJpdHMpCiAgLy8gSWYgdGhlcmUgaXMgbm8gb3ZlcmZsb3cgKGFsbCB2YWx1ZXMvc3VtcyBiZWxvdyAyXjI2ID0gNjcxMDg4NjQpLAogIC8vIHdlIGhhdmUgYHRvTGVuZ3RoKGxuczEsIGNvbHMxKSArIHRvTGVuZ3RoKGxuczIsIGNvbHMyKSA9IHRvTGVuZ3RoKGxuczEgKyBsbnMyLCBjb2xzMSArIGNvbHMyKWAuCiAgcmV0dXJuIGxpbmVDb3VudCAqIGZhY3RvciArIGNvbHVtbkNvdW50Owp9CmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhUb09iaihsZW5ndGgpIHsKICB2YXIgbCA9IGxlbmd0aDsKICB2YXIgbGluZUNvdW50ID0gTWF0aC5mbG9vcihsIC8gZmFjdG9yKTsKICB2YXIgY29sdW1uQ291bnQgPSBsIC0gbGluZUNvdW50ICogZmFjdG9yOwogIHJldHVybiBuZXcgTGVuZ3RoT2JqKGxpbmVDb3VudCwgY29sdW1uQ291bnQpOwp9CmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhHZXRMaW5lQ291bnQobGVuZ3RoKSB7CiAgcmV0dXJuIE1hdGguZmxvb3IobGVuZ3RoIC8gZmFjdG9yKTsKfQovKioKICogUmV0dXJucyB0aGUgYW1vdW50IG9mIGNvbHVtbnMgb2YgdGhlIGdpdmVuIGxlbmd0aCwgYXNzdW1pbmcgdGhhdCBpdCBkb2VzIG5vdCBzcGFuIGFueSBsaW5lLgoqLwpleHBvcnQgZnVuY3Rpb24gbGVuZ3RoR2V0Q29sdW1uQ291bnRJZlplcm9MaW5lQ291bnQobGVuZ3RoKSB7CiAgcmV0dXJuIGxlbmd0aDsKfQpleHBvcnQgZnVuY3Rpb24gbGVuZ3RoQWRkKGwxLCBsMikgewogIHJldHVybiBsMiA8IGZhY3RvciA/IGwxICsgbDIgLy8gbDIgaXMgdGhlIGFtb3VudCBvZiBjb2x1bW5zICh6ZXJvIGxpbmUgY291bnQpLiBLZWVwIHRoZSBjb2x1bW4gY291bnQgZnJvbSBsMS4KICA6IGwxIC0gbDEgJSBmYWN0b3IgKyBsMjsgLy8gbDEgLSAobDEgJSBmYWN0b3IpIGVxdWFscyB0b0xlbmd0aChsMS5saW5lQ291bnQsIDApCn0KLyoqCiAqIFJldHVybnMgYSBub24gbmVnYXRpdmUgbGVuZ3RoIGByZXN1bHRgIHN1Y2ggdGhhdCBgbGVuZ3RoQWRkKGxlbmd0aDEsIHJlc3VsdCkgPSBsZW5ndGgyYCwgb3IgemVybyBpZiBzdWNoIGxlbmd0aCBkb2VzIG5vdCBleGlzdC4KICovCmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhEaWZmTm9uTmVnYXRpdmUobGVuZ3RoMSwgbGVuZ3RoMikgewogIHZhciBsMSA9IGxlbmd0aDE7CiAgdmFyIGwyID0gbGVuZ3RoMjsKICB2YXIgZGlmZiA9IGwyIC0gbDE7CiAgaWYgKGRpZmYgPD0gMCkgewogICAgLy8gbGluZS1jb3VudCBvZiBsZW5ndGgxIGlzIGhpZ2hlciB0aGFuIGxpbmUtY291bnQgb2YgbGVuZ3RoMgogICAgLy8gb3IgdGhleSBhcmUgZXF1YWwgYW5kIGNvbHVtbi1jb3VudCBvZiBsZW5ndGgxIGlzIGhpZ2hlciB0aGFuIGNvbHVtbi1jb3VudCBvZiBsZW5ndGgyCiAgICByZXR1cm4gbGVuZ3RoWmVybzsKICB9CiAgdmFyIGxpbmVDb3VudDEgPSBNYXRoLmZsb29yKGwxIC8gZmFjdG9yKTsKICB2YXIgbGluZUNvdW50MiA9IE1hdGguZmxvb3IobDIgLyBmYWN0b3IpOwogIHZhciBjb2xDb3VudDIgPSBsMiAtIGxpbmVDb3VudDIgKiBmYWN0b3I7CiAgaWYgKGxpbmVDb3VudDEgPT09IGxpbmVDb3VudDIpIHsKICAgIHZhciBjb2xDb3VudDEgPSBsMSAtIGxpbmVDb3VudDEgKiBmYWN0b3I7CiAgICByZXR1cm4gdG9MZW5ndGgoMCwgY29sQ291bnQyIC0gY29sQ291bnQxKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHRvTGVuZ3RoKGxpbmVDb3VudDIgLSBsaW5lQ291bnQxLCBjb2xDb3VudDIpOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gbGVuZ3RoTGVzc1RoYW4obGVuZ3RoMSwgbGVuZ3RoMikgewogIC8vIEZpcnN0LCBjb21wYXJlIGxpbmUgY291bnRzLCB0aGVuIGNvbHVtbiBjb3VudHMuCiAgcmV0dXJuIGxlbmd0aDEgPCBsZW5ndGgyOwp9CmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhMZXNzVGhhbkVxdWFsKGxlbmd0aDEsIGxlbmd0aDIpIHsKICByZXR1cm4gbGVuZ3RoMSA8PSBsZW5ndGgyOwp9CmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhHcmVhdGVyVGhhbkVxdWFsKGxlbmd0aDEsIGxlbmd0aDIpIHsKICByZXR1cm4gbGVuZ3RoMSA+PSBsZW5ndGgyOwp9CmV4cG9ydCBmdW5jdGlvbiBwb3NpdGlvblRvTGVuZ3RoKHBvc2l0aW9uKSB7CiAgcmV0dXJuIHRvTGVuZ3RoKHBvc2l0aW9uLmxpbmVOdW1iZXIgLSAxLCBwb3NpdGlvbi5jb2x1bW4gLSAxKTsKfQpleHBvcnQgZnVuY3Rpb24gbGVuZ3Roc1RvUmFuZ2UobGVuZ3RoU3RhcnQsIGxlbmd0aEVuZCkgewogIHZhciBsID0gbGVuZ3RoU3RhcnQ7CiAgdmFyIGxpbmVDb3VudCA9IE1hdGguZmxvb3IobCAvIGZhY3Rvcik7CiAgdmFyIGNvbENvdW50ID0gbCAtIGxpbmVDb3VudCAqIGZhY3RvcjsKICB2YXIgbDIgPSBsZW5ndGhFbmQ7CiAgdmFyIGxpbmVDb3VudDIgPSBNYXRoLmZsb29yKGwyIC8gZmFjdG9yKTsKICB2YXIgY29sQ291bnQyID0gbDIgLSBsaW5lQ291bnQyICogZmFjdG9yOwogIHJldHVybiBuZXcgUmFuZ2UobGluZUNvdW50ICsgMSwgY29sQ291bnQgKyAxLCBsaW5lQ291bnQyICsgMSwgY29sQ291bnQyICsgMSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGxlbmd0aE9mU3RyaW5nKHN0cikgewogIHZhciBsaW5lcyA9IHNwbGl0TGluZXMoc3RyKTsKICByZXR1cm4gdG9MZW5ndGgobGluZXMubGVuZ3RoIC0gMSwgbGluZXNbbGluZXMubGVuZ3RoIC0gMV0ubGVuZ3RoKTsKfQ=="},{"version":3,"names":["splitLines","Range","LengthObj","lineCount","columnCount","zero","lengthDiff","startLineCount","startColumnCount","endLineCount","endColumnCount","toLength","lengthZero","lengthIsZero","length","factor","Math","pow","lengthToObj","l","floor","lengthGetLineCount","lengthGetColumnCountIfZeroLineCount","lengthAdd","l1","l2","lengthDiffNonNegative","length1","length2","diff","lineCount1","lineCount2","colCount2","colCount1","lengthLessThan","lengthLessThanEqual","lengthGreaterThanEqual","positionToLength","position","lineNumber","column","lengthsToRange","lengthStart","lengthEnd","colCount","lengthOfString","str","lines"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../core/range.js';\n/**\n * Represents a non-negative length in terms of line and column count.\n * Prefer using {@link Length} for performance reasons.\n*/\nexport class LengthObj {\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\nLengthObj.zero = new LengthObj(0, 0);\n/**\n * The end must be greater than or equal to the start.\n*/\nexport function lengthDiff(startLineCount, startColumnCount, endLineCount, endColumnCount) {\n    return (startLineCount !== endLineCount)\n        ? toLength(endLineCount - startLineCount, endColumnCount)\n        : toLength(0, endColumnCount - startColumnCount);\n}\nexport const lengthZero = 0;\nexport function lengthIsZero(length) {\n    return length === 0;\n}\n/*\n * We have 52 bits available in a JS number.\n * We use the upper 26 bits to store the line and the lower 26 bits to store the column.\n *\n * Set boolean to `true` when debugging, so that debugging is easier.\n */\nconst factor = /* is debug: */ false ? 100000 : Math.pow(2, 26);\nexport function toLength(lineCount, columnCount) {\n    // llllllllllllllllllllllllllcccccccccccccccccccccccccc (52 bits)\n    //       line count (26 bits)    column count (26 bits)\n    // If there is no overflow (all values/sums below 2^26 = 67108864),\n    // we have `toLength(lns1, cols1) + toLength(lns2, cols2) = toLength(lns1 + lns2, cols1 + cols2)`.\n    return (lineCount * factor + columnCount);\n}\nexport function lengthToObj(length) {\n    const l = length;\n    const lineCount = Math.floor(l / factor);\n    const columnCount = l - lineCount * factor;\n    return new LengthObj(lineCount, columnCount);\n}\nexport function lengthGetLineCount(length) {\n    return Math.floor(length / factor);\n}\n/**\n * Returns the amount of columns of the given length, assuming that it does not span any line.\n*/\nexport function lengthGetColumnCountIfZeroLineCount(length) {\n    return length;\n}\nexport function lengthAdd(l1, l2) {\n    return ((l2 < factor)\n        ? (l1 + l2) // l2 is the amount of columns (zero line count). Keep the column count from l1.\n        : (l1 - (l1 % factor) + l2)); // l1 - (l1 % factor) equals toLength(l1.lineCount, 0)\n}\n/**\n * Returns a non negative length `result` such that `lengthAdd(length1, result) = length2`, or zero if such length does not exist.\n */\nexport function lengthDiffNonNegative(length1, length2) {\n    const l1 = length1;\n    const l2 = length2;\n    const diff = l2 - l1;\n    if (diff <= 0) {\n        // line-count of length1 is higher than line-count of length2\n        // or they are equal and column-count of length1 is higher than column-count of length2\n        return lengthZero;\n    }\n    const lineCount1 = Math.floor(l1 / factor);\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    if (lineCount1 === lineCount2) {\n        const colCount1 = l1 - lineCount1 * factor;\n        return toLength(0, colCount2 - colCount1);\n    }\n    else {\n        return toLength(lineCount2 - lineCount1, colCount2);\n    }\n}\nexport function lengthLessThan(length1, length2) {\n    // First, compare line counts, then column counts.\n    return length1 < length2;\n}\nexport function lengthLessThanEqual(length1, length2) {\n    return length1 <= length2;\n}\nexport function lengthGreaterThanEqual(length1, length2) {\n    return length1 >= length2;\n}\nexport function positionToLength(position) {\n    return toLength(position.lineNumber - 1, position.column - 1);\n}\nexport function lengthsToRange(lengthStart, lengthEnd) {\n    const l = lengthStart;\n    const lineCount = Math.floor(l / factor);\n    const colCount = l - lineCount * factor;\n    const l2 = lengthEnd;\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    return new Range(lineCount + 1, colCount + 1, lineCount2 + 1, colCount2 + 1);\n}\nexport function lengthOfString(str) {\n    const lines = splitLines(str);\n    return toLength(lines.length - 1, lines[lines.length - 1].length);\n}\n"],"mappings":"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"}]}