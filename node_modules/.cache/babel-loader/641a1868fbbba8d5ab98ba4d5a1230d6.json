{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["browser","createFastDomNode","platform","RangeUtil","FloatHorizontalRange","VisibleRanges","LineDecoration","RenderLineInput","renderViewLine","LineRange","DomPosition","isHighContrast","EditorFontLigatures","canUseFastRenderedViewLine","isNative","isLinux","isFirefox","isSafari","monospaceAssumptionsAreValid","DomReadingContext","domNode","endNode","_domNode","_clientRectDeltaLeft","_clientRectScale","_clientRectRead","rect","getBoundingClientRect","left","width","offsetWidth","readClientRect","ViewLineOptions","config","themeType","options","fontInfo","get","renderWhitespace","renderControlCharacters","spaceWidth","middotWidth","wsmiddotWidth","useMonospaceOptimizations","isMonospace","canUseHalfwidthRightwardsArrow","lineHeight","stopRenderingLineAfter","fontLigatures","other","ViewLine","_options","_isMaybeInvalid","_renderedViewLine","Error","newOptions","lineNumber","deltaTop","viewportData","sb","lineData","getViewLineRenderingData","actualInlineDecorations","filter","inlineDecorations","minColumn","maxColumn","selectionsOnLine","selections","selection","endLineNumber","startLineNumber","startColumn","endColumn","push","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","OFF","input","equals","appendASCIIString","String","CLASS_NAME","output","renderedViewLine","containsForeignElements","length","lineTokens","getCount","FastRenderedViewLine","characterMapping","createRenderedLine","setTop","setHeight","getWidth","getWidthIsFast","toSlowRenderedLine","context","Math","min","lineContent","max","outsideRenderedLine","horizontalRanges","getVisibleRangesForRange","spanNode","offset","getColumnOfNodeOffset","_characterMapping","_charWidth","round","_getCharPosition","expectedWidth","actualWidth","firstChild","abs","console","warn","startPosition","endPosition","column","horizontalOffset","getHorizontalOffset","spanNodeTextContentLength","textContent","spanIndex","previousSibling","getColumn","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_cachedWidth","_pixelOffsetCache","Float32Array","len","myDomNode","_getReadingTarget","startOffset","_readPixelOffset","endOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","result","_actualReadPixelOffset","r","readHorizontalRanges","clientRectDeltaLeft","clientRectScale","domPosition","getDomPosition","partIndex","charIndex","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","endPixelOffset","lastRange","isWebKit","createWebKitRenderedLine","createNormalRenderedLine"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class DomReadingContext {\n    constructor(domNode, endNode) {\n        this._domNode = domNode;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n        this.endNode = endNode;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n}\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this.renderWhitespace = options.get(90 /* EditorOption.renderWhitespace */);\n        this.renderControlCharacters = options.get(85 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(29 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(107 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(47 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType) || this._options.renderWhitespace !== 'selection') {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    else {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendASCIIString('<div style=\"top:');\n        sb.appendASCIIString(String(deltaTop));\n        sb.appendASCIIString('px;height:');\n        sb.appendASCIIString(String(this._options.lineHeight));\n        sb.appendASCIIString('px;\" class=\"');\n        sb.appendASCIIString(ViewLine.CLASS_NAME);\n        sb.appendASCIIString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendASCIIString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            if (lineData.content.length < 300 && renderLineInput.lineTokens.getCount() < 100) {\n                // Browser rounding errors have been observed in Chrome and IE, so using the fast\n                // view line only for short lines. Please test before removing the length check...\n                // ---\n                // Another rounding error has been observed on Linux in VSCode, where <span> width\n                // rounding errors add up to an observable large number...\n                // ---\n                // Also see another example of rounding errors on Windows in\n                // https://github.com/microsoft/vscode/issues/33178\n                renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n            }\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth() {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth();\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        let outsideRenderedLine = false;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            outsideRenderedLine = true;\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(outsideRenderedLine, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(lineNumber, spanNode, offset);\n    }\n}\nViewLine.CLASS_NAME = 'view-line';\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth() {\n        return Math.round(this._getCharPosition(this._characterMapping.length));\n    }\n    getWidthIsFast() {\n        return true;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        const expectedWidth = this.getWidth();\n        const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n        if (Math.abs(expectedWidth - actualWidth) >= 2) {\n            // more than 2px off\n            console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n            monospaceAssumptionsAreValid = false;\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getCharPosition(startColumn);\n        const endPosition = this._getCharPosition(endColumn);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getCharPosition(column) {\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return this._charWidth * horizontalOffset;\n    }\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        const spanNodeTextContentLength = spanNode.textContent.length;\n        let spanIndex = -1;\n        while (spanNode) {\n            spanNode = spanNode.previousSibling;\n            spanIndex++;\n        }\n        return this._characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth() {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth();\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context.clientRectDeltaLeft, context.clientRectScale, context.endNode);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth();\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context.clientRectDeltaLeft, context.clientRectScale, context.endNode);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth())];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context.clientRectDeltaLeft, context.clientRectScale, context.endNode);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(lineNumber, spanNode, offset) {\n        const spanNodeTextContentLength = spanNode.textContent.length;\n        let spanIndex = -1;\n        while (spanNode) {\n            spanNode = spanNode.previousSibling;\n            spanIndex++;\n        }\n        return this._characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\n"],"mappings":"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"}]}