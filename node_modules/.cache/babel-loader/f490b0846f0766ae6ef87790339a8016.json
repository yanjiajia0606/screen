{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["arrays","ResourceMap","objects","types","URI","addToValueTree","getConfigurationValue","removeFromValueTree","toValuesTree","ConfigurationModel","_contents","_keys","_overrides","frozen","overrideConfigurations","Map","checkAndFreeze","length","Object","keys","section","contents","overrideIdentifier","overrideContents","getContentsForOverrideIdentifer","undefined","identifier","overrideConfigurationModel","get","createOverrideConfigurationModel","set","deepClone","overrides","others","other","isEmpty","mergeContents","otherOverride","filter","o","equals","identifiers","override","push","distinct","key","indexOf","contentsForKey","overrideContentsForKey","source","target","isObject","data","isFrozen","deepFreeze","contentsForIdentifierOnly","contentsToMerge","includes","value","addKey","e","Error","removeKey","index","i","splice","Configuration","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","consolidateConfigurationModel","getConsolidatedConfigurationModel","getValue","memoryConfiguration","resource","removeValue","setValue","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","defaultValue","freeze","policyValue","applicationValue","applicationConfiguration","userValue","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","workspaceValue","workspaceFolderValue","memoryValue","overrideIdentifiers","map","flat","getOverrideValue","default","policy","application","user","userLocal","userRemote","workspaceFolder","memory","merge","configurationModel","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","root","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","defaults","folders","reduce","result","defaultConfiguration","parseConfigurationModel","policyConfiguration","workspaceConfiguration","revive","model","ConfigurationChangeEvent","change","previous","currentConfiguraiton","currentWorkspace","_previousConfiguration","keysSet","Set","forEach","add","affectedKeys","values","affectedKeysTree","parse","_a","doesAffectedKeysTreeContains","value1","previousConfiguration","value2","requestedTree"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = []) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.frozen = false;\n        this.overrideConfigurations = new Map();\n    }\n    get contents() {\n        return this.checkAndFreeze(this._contents);\n    }\n    get overrides() {\n        return this.checkAndFreeze(this._overrides);\n    }\n    get keys() {\n        return this.checkAndFreeze(this._keys);\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        for (const other of others) {\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides);\n    }\n    freeze() {\n        this.frozen = true;\n        return this;\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    checkAndFreeze(data) {\n        if (this.frozen && !Object.isFrozen(data)) {\n            return objects.deepFreeze(data);\n        }\n        return data;\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (arrays.equals(override.identifiers, [identifier])) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    setValue(key, value) {\n        this.addKey(key);\n        addToValueTree(this.contents, key, value, e => { throw new Error(e); });\n    }\n    removeValue(key) {\n        if (this.removeKey(key)) {\n            removeFromValueTree(this.contents, key);\n        }\n    }\n    addKey(key) {\n        let index = this.keys.length;\n        for (let i = 0; i < index; i++) {\n            if (key.indexOf(this.keys[i]) === 0) {\n                index = i;\n            }\n        }\n        this.keys.splice(index, 1, key);\n    }\n    removeKey(key) {\n        const index = this.keys.indexOf(key);\n        if (index !== -1) {\n            this.keys.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap(), _freeze = true) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._freeze = _freeze;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\n        const policyValue = this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration.freeze().getValue(key);\n        const applicationValue = this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration.freeze().getValue(key);\n        const userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\n        const userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\n        const userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\n        const workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n        const workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\n        const memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\n        const value = consolidateConfigurationModel.getValue(key);\n        const overrideIdentifiers = arrays.distinct(consolidateConfigurationModel.overrides.map(override => override.identifiers).flat()).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n        return {\n            defaultValue,\n            policyValue,\n            applicationValue,\n            userValue,\n            userLocalValue,\n            userRemoteValue,\n            workspaceValue,\n            workspaceFolderValue,\n            memoryValue,\n            value,\n            default: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            policy: policyValue !== undefined ? { value: policyValue } : undefined,\n            application: applicationValue !== undefined ? { value: applicationValue, override: overrides.overrideIdentifier ? this.applicationConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            user: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            memory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n        };\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n            if (this._freeze) {\n                this._userConfiguration.freeze();\n            }\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n            if (this._freeze) {\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\n            }\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                if (this._freeze) {\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n                }\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const policyConfiguration = this.parseConfigurationModel(data.policy);\n        const applicationConfiguration = this.parseConfigurationModel(data.application);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap(), false);\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._previousConfiguration = undefined;\n        const keysSet = new Set();\n        change.keys.forEach(key => keysSet.add(key));\n        change.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n        this.affectedKeys = [...keysSet.values()];\n        const configurationModel = new ConfigurationModel();\n        this.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n        this.affectedKeysTree = configurationModel.contents;\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        if (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n            if (overrides) {\n                const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n                const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n                return !objects.equals(value1, value2);\n            }\n            return true;\n        }\n        return false;\n    }\n    doesAffectedKeysTreeContains(affectedKeysTree, section) {\n        let requestedTree = toValuesTree({ [section]: true }, () => { });\n        let key;\n        while (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n            affectedKeysTree = affectedKeysTree[key];\n            if (!affectedKeysTree) {\n                return false; // Requested tree is not found\n            }\n            requestedTree = requestedTree[key];\n        }\n        return true;\n    }\n}\n"],"mappings":"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"}]}