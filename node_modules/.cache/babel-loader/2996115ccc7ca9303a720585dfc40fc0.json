{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/cursorColumns.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/cursorColumns.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi4KICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCmltcG9ydCAqIGFzIHN0cmluZ3MgZnJvbSAnLi4vLi4vLi4vYmFzZS9jb21tb24vc3RyaW5ncy5qcyc7Ci8qKgogKiBBIGNvbHVtbiBpbiBhIHBvc2l0aW9uIGlzIHRoZSBnYXAgYmV0d2VlbiB0d28gYWRqYWNlbnQgY2hhcmFjdGVycy4gVGhlIG1ldGhvZHMgaGVyZQogKiB3b3JrIHdpdGggYSBjb25jZXB0IGNhbGxlZCAidmlzaWJsZSBjb2x1bW4iLiBBIHZpc2libGUgY29sdW1uIGlzIGEgdmVyeSByb3VnaCBhcHByb3hpbWF0aW9uCiAqIG9mIHRoZSBob3Jpem9udGFsIHNjcmVlbiBwb3NpdGlvbiBvZiBhIGNvbHVtbi4gRm9yIGV4YW1wbGUsIHVzaW5nIGEgdGFiIHNpemUgb2YgNDoKICogYGBgdHh0CiAqIHw8VEFCPnw8VEFCPnxUfGV4dAogKiB8ICAgICB8ICAgICB8IFwtLS0tIGNvbHVtbiA9IDQsIHZpc2libGUgY29sdW1uID0gOQogKiB8ICAgICB8ICAgICBcLS0tLS0tIGNvbHVtbiA9IDMsIHZpc2libGUgY29sdW1uID0gOAogKiB8ICAgICBcLS0tLS0tLS0tLS0tIGNvbHVtbiA9IDIsIHZpc2libGUgY29sdW1uID0gNAogKiBcLS0tLS0tLS0tLS0tLS0tLS0tIGNvbHVtbiA9IDEsIHZpc2libGUgY29sdW1uID0gMAogKiBgYGAKICoKICogKipOT1RFKio6IFZpc3VhbCBjb2x1bW5zIGRvIG5vdCB3b3JrIHdlbGwgZm9yIFJUTCB0ZXh0IG9yIHZhcmlhYmxlLXdpZHRoIGZvbnRzIG9yIGNoYXJhY3RlcnMuCiAqCiAqICoqTk9URSoqOiBUaGVzZSBtZXRob2RzIHdvcmsgYW5kIG1ha2Ugc2Vuc2UgYm90aCBvbiB0aGUgbW9kZWwgYW5kIG9uIHRoZSB2aWV3IG1vZGVsLgogKi8KZXhwb3J0IHZhciBDdXJzb3JDb2x1bW5zID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBDdXJzb3JDb2x1bW5zKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEN1cnNvckNvbHVtbnMpOwogIH0KICBfY3JlYXRlQ2xhc3MoQ3Vyc29yQ29sdW1ucywgbnVsbCwgW3sKICAgIGtleTogIl9uZXh0VmlzaWJsZUNvbHVtbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX25leHRWaXNpYmxlQ29sdW1uKGNvZGVQb2ludCwgdmlzaWJsZUNvbHVtbiwgdGFiU2l6ZSkgewogICAgICBpZiAoY29kZVBvaW50ID09PSA5IC8qIENoYXJDb2RlLlRhYiAqLykgewogICAgICAgIHJldHVybiBDdXJzb3JDb2x1bW5zLm5leHRSZW5kZXJUYWJTdG9wKHZpc2libGVDb2x1bW4sIHRhYlNpemUpOwogICAgICB9CiAgICAgIGlmIChzdHJpbmdzLmlzRnVsbFdpZHRoQ2hhcmFjdGVyKGNvZGVQb2ludCkgfHwgc3RyaW5ncy5pc0Vtb2ppSW1wcmVjaXNlKGNvZGVQb2ludCkpIHsKICAgICAgICByZXR1cm4gdmlzaWJsZUNvbHVtbiArIDI7CiAgICAgIH0KICAgICAgcmV0dXJuIHZpc2libGVDb2x1bW4gKyAxOwogICAgfQogICAgLyoqCiAgICAgKiBSZXR1cm5zIGEgdmlzaWJsZSBjb2x1bW4gZnJvbSBhIGNvbHVtbi4KICAgICAqIEBzZWUge0BsaW5rIEN1cnNvckNvbHVtbnN9CiAgICAgKi8KICB9LCB7CiAgICBrZXk6ICJ2aXNpYmxlQ29sdW1uRnJvbUNvbHVtbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdmlzaWJsZUNvbHVtbkZyb21Db2x1bW4obGluZUNvbnRlbnQsIGNvbHVtbiwgdGFiU2l6ZSkgewogICAgICB2YXIgdGV4dExlbiA9IE1hdGgubWluKGNvbHVtbiAtIDEsIGxpbmVDb250ZW50Lmxlbmd0aCk7CiAgICAgIHZhciB0ZXh0ID0gbGluZUNvbnRlbnQuc3Vic3RyaW5nKDAsIHRleHRMZW4pOwogICAgICB2YXIgaXRlcmF0b3IgPSBuZXcgc3RyaW5ncy5HcmFwaGVtZUl0ZXJhdG9yKHRleHQpOwogICAgICB2YXIgcmVzdWx0ID0gMDsKICAgICAgd2hpbGUgKCFpdGVyYXRvci5lb2woKSkgewogICAgICAgIHZhciBjb2RlUG9pbnQgPSBzdHJpbmdzLmdldE5leHRDb2RlUG9pbnQodGV4dCwgdGV4dExlbiwgaXRlcmF0b3Iub2Zmc2V0KTsKICAgICAgICBpdGVyYXRvci5uZXh0R3JhcGhlbWVMZW5ndGgoKTsKICAgICAgICByZXN1bHQgPSB0aGlzLl9uZXh0VmlzaWJsZUNvbHVtbihjb2RlUG9pbnQsIHJlc3VsdCwgdGFiU2l6ZSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJucyBhIGNvbHVtbiBmcm9tIGEgdmlzaWJsZSBjb2x1bW4uCiAgICAgKiBAc2VlIHtAbGluayBDdXJzb3JDb2x1bW5zfQogICAgICovCiAgfSwgewogICAga2V5OiAiY29sdW1uRnJvbVZpc2libGVDb2x1bW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbHVtbkZyb21WaXNpYmxlQ29sdW1uKGxpbmVDb250ZW50LCB2aXNpYmxlQ29sdW1uLCB0YWJTaXplKSB7CiAgICAgIGlmICh2aXNpYmxlQ29sdW1uIDw9IDApIHsKICAgICAgICByZXR1cm4gMTsKICAgICAgfQogICAgICB2YXIgbGluZUNvbnRlbnRMZW5ndGggPSBsaW5lQ29udGVudC5sZW5ndGg7CiAgICAgIHZhciBpdGVyYXRvciA9IG5ldyBzdHJpbmdzLkdyYXBoZW1lSXRlcmF0b3IobGluZUNvbnRlbnQpOwogICAgICB2YXIgYmVmb3JlVmlzaWJsZUNvbHVtbiA9IDA7CiAgICAgIHZhciBiZWZvcmVDb2x1bW4gPSAxOwogICAgICB3aGlsZSAoIWl0ZXJhdG9yLmVvbCgpKSB7CiAgICAgICAgdmFyIGNvZGVQb2ludCA9IHN0cmluZ3MuZ2V0TmV4dENvZGVQb2ludChsaW5lQ29udGVudCwgbGluZUNvbnRlbnRMZW5ndGgsIGl0ZXJhdG9yLm9mZnNldCk7CiAgICAgICAgaXRlcmF0b3IubmV4dEdyYXBoZW1lTGVuZ3RoKCk7CiAgICAgICAgdmFyIGFmdGVyVmlzaWJsZUNvbHVtbiA9IHRoaXMuX25leHRWaXNpYmxlQ29sdW1uKGNvZGVQb2ludCwgYmVmb3JlVmlzaWJsZUNvbHVtbiwgdGFiU2l6ZSk7CiAgICAgICAgdmFyIGFmdGVyQ29sdW1uID0gaXRlcmF0b3Iub2Zmc2V0ICsgMTsKICAgICAgICBpZiAoYWZ0ZXJWaXNpYmxlQ29sdW1uID49IHZpc2libGVDb2x1bW4pIHsKICAgICAgICAgIHZhciBiZWZvcmVEZWx0YSA9IHZpc2libGVDb2x1bW4gLSBiZWZvcmVWaXNpYmxlQ29sdW1uOwogICAgICAgICAgdmFyIGFmdGVyRGVsdGEgPSBhZnRlclZpc2libGVDb2x1bW4gLSB2aXNpYmxlQ29sdW1uOwogICAgICAgICAgaWYgKGFmdGVyRGVsdGEgPCBiZWZvcmVEZWx0YSkgewogICAgICAgICAgICByZXR1cm4gYWZ0ZXJDb2x1bW47CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gYmVmb3JlQ29sdW1uOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBiZWZvcmVWaXNpYmxlQ29sdW1uID0gYWZ0ZXJWaXNpYmxlQ29sdW1uOwogICAgICAgIGJlZm9yZUNvbHVtbiA9IGFmdGVyQ29sdW1uOwogICAgICB9CiAgICAgIC8vIHdhbGtlZCB0aGUgZW50aXJlIHN0cmluZwogICAgICByZXR1cm4gbGluZUNvbnRlbnRMZW5ndGggKyAxOwogICAgfQogICAgLyoqCiAgICAgKiBBVFRFTlRJT046IFRoaXMgd29ya3Mgd2l0aCAwLWJhc2VkIGNvbHVtbnMgKGFzIG9wb3NlZCB0byB0aGUgcmVndWxhciAxLWJhc2VkIGNvbHVtbnMpCiAgICAgKiBAc2VlIHtAbGluayBDdXJzb3JDb2x1bW5zfQogICAgICovCiAgfSwgewogICAga2V5OiAibmV4dFJlbmRlclRhYlN0b3AiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG5leHRSZW5kZXJUYWJTdG9wKHZpc2libGVDb2x1bW4sIHRhYlNpemUpIHsKICAgICAgcmV0dXJuIHZpc2libGVDb2x1bW4gKyB0YWJTaXplIC0gdmlzaWJsZUNvbHVtbiAlIHRhYlNpemU7CiAgICB9CiAgICAvKioKICAgICAqIEFUVEVOVElPTjogVGhpcyB3b3JrcyB3aXRoIDAtYmFzZWQgY29sdW1ucyAoYXMgb3Bvc2VkIHRvIHRoZSByZWd1bGFyIDEtYmFzZWQgY29sdW1ucykKICAgICAqIEBzZWUge0BsaW5rIEN1cnNvckNvbHVtbnN9CiAgICAgKi8KICB9LCB7CiAgICBrZXk6ICJuZXh0SW5kZW50VGFiU3RvcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbmV4dEluZGVudFRhYlN0b3AodmlzaWJsZUNvbHVtbiwgaW5kZW50U2l6ZSkgewogICAgICByZXR1cm4gdmlzaWJsZUNvbHVtbiArIGluZGVudFNpemUgLSB2aXNpYmxlQ29sdW1uICUgaW5kZW50U2l6ZTsKICAgIH0KICAgIC8qKgogICAgICogQVRURU5USU9OOiBUaGlzIHdvcmtzIHdpdGggMC1iYXNlZCBjb2x1bW5zIChhcyBvcHBvc2VkIHRvIHRoZSByZWd1bGFyIDEtYmFzZWQgY29sdW1ucykKICAgICAqIEBzZWUge0BsaW5rIEN1cnNvckNvbHVtbnN9CiAgICAgKi8KICB9LCB7CiAgICBrZXk6ICJwcmV2UmVuZGVyVGFiU3RvcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJldlJlbmRlclRhYlN0b3AoY29sdW1uLCB0YWJTaXplKSB7CiAgICAgIHJldHVybiBNYXRoLm1heCgwLCBjb2x1bW4gLSAxIC0gKGNvbHVtbiAtIDEpICUgdGFiU2l6ZSk7CiAgICB9CiAgICAvKioKICAgICAqIEFUVEVOVElPTjogVGhpcyB3b3JrcyB3aXRoIDAtYmFzZWQgY29sdW1ucyAoYXMgb3Bwb3NlZCB0byB0aGUgcmVndWxhciAxLWJhc2VkIGNvbHVtbnMpCiAgICAgKiBAc2VlIHtAbGluayBDdXJzb3JDb2x1bW5zfQogICAgICovCiAgfSwgewogICAga2V5OiAicHJldkluZGVudFRhYlN0b3AiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByZXZJbmRlbnRUYWJTdG9wKGNvbHVtbiwgaW5kZW50U2l6ZSkgewogICAgICByZXR1cm4gTWF0aC5tYXgoMCwgY29sdW1uIC0gMSAtIChjb2x1bW4gLSAxKSAlIGluZGVudFNpemUpOwogICAgfQogIH1dKTsKICByZXR1cm4gQ3Vyc29yQ29sdW1uczsKfSgpOw=="},{"version":3,"names":["strings","CursorColumns","codePoint","visibleColumn","tabSize","nextRenderTabStop","isFullWidthCharacter","isEmojiImprecise","lineContent","column","textLen","Math","min","length","text","substring","iterator","GraphemeIterator","result","eol","getNextCodePoint","offset","nextGraphemeLength","_nextVisibleColumn","lineContentLength","beforeVisibleColumn","beforeColumn","afterVisibleColumn","afterColumn","beforeDelta","afterDelta","indentSize","max"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/core/cursorColumns.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\n/**\n * A column in a position is the gap between two adjacent characters. The methods here\n * work with a concept called \"visible column\". A visible column is a very rough approximation\n * of the horizontal screen position of a column. For example, using a tab size of 4:\n * ```txt\n * |<TAB>|<TAB>|T|ext\n * |     |     | \\---- column = 4, visible column = 9\n * |     |     \\------ column = 3, visible column = 8\n * |     \\------------ column = 2, visible column = 4\n * \\------------------ column = 1, visible column = 0\n * ```\n *\n * **NOTE**: Visual columns do not work well for RTL text or variable-width fonts or characters.\n *\n * **NOTE**: These methods work and make sense both on the model and on the view model.\n */\nexport class CursorColumns {\n    static _nextVisibleColumn(codePoint, visibleColumn, tabSize) {\n        if (codePoint === 9 /* CharCode.Tab */) {\n            return CursorColumns.nextRenderTabStop(visibleColumn, tabSize);\n        }\n        if (strings.isFullWidthCharacter(codePoint) || strings.isEmojiImprecise(codePoint)) {\n            return visibleColumn + 2;\n        }\n        return visibleColumn + 1;\n    }\n    /**\n     * Returns a visible column from a column.\n     * @see {@link CursorColumns}\n     */\n    static visibleColumnFromColumn(lineContent, column, tabSize) {\n        const textLen = Math.min(column - 1, lineContent.length);\n        const text = lineContent.substring(0, textLen);\n        const iterator = new strings.GraphemeIterator(text);\n        let result = 0;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(text, textLen, iterator.offset);\n            iterator.nextGraphemeLength();\n            result = this._nextVisibleColumn(codePoint, result, tabSize);\n        }\n        return result;\n    }\n    /**\n     * Returns a column from a visible column.\n     * @see {@link CursorColumns}\n     */\n    static columnFromVisibleColumn(lineContent, visibleColumn, tabSize) {\n        if (visibleColumn <= 0) {\n            return 1;\n        }\n        const lineContentLength = lineContent.length;\n        const iterator = new strings.GraphemeIterator(lineContent);\n        let beforeVisibleColumn = 0;\n        let beforeColumn = 1;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(lineContent, lineContentLength, iterator.offset);\n            iterator.nextGraphemeLength();\n            const afterVisibleColumn = this._nextVisibleColumn(codePoint, beforeVisibleColumn, tabSize);\n            const afterColumn = iterator.offset + 1;\n            if (afterVisibleColumn >= visibleColumn) {\n                const beforeDelta = visibleColumn - beforeVisibleColumn;\n                const afterDelta = afterVisibleColumn - visibleColumn;\n                if (afterDelta < beforeDelta) {\n                    return afterColumn;\n                }\n                else {\n                    return beforeColumn;\n                }\n            }\n            beforeVisibleColumn = afterVisibleColumn;\n            beforeColumn = afterColumn;\n        }\n        // walked the entire string\n        return lineContentLength + 1;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextRenderTabStop(visibleColumn, tabSize) {\n        return visibleColumn + tabSize - visibleColumn % tabSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextIndentTabStop(visibleColumn, indentSize) {\n        return visibleColumn + indentSize - visibleColumn % indentSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevRenderTabStop(column, tabSize) {\n        return Math.max(0, column - 1 - (column - 1) % tabSize);\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevIndentTabStop(column, indentSize) {\n        return Math.max(0, column - 1 - (column - 1) % indentSize);\n    }\n}\n"],"mappings":"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"}]}