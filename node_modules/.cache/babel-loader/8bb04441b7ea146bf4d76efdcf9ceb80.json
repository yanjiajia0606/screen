{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/scatter/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/scatter/index.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCBjcmVhdGUgZnJvbSAiLi4vLi4vY3JlYXRlIjsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlKHsKICBuYW1lOiAic2NhdHRlciIsCiAgLy/mlaPngrnlm74KICBtZXRob2RzOiB7CiAgICB1cGRhdGVDaGFydDogZnVuY3Rpb24gdXBkYXRlQ2hhcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHZhciBvcHRpb25EYXRhID0gdGhpcy5kZWVwQ2xvbmUodGhpcy5kYXRhQ2hhcnQpOwogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIHRpdGxlOiB0aGlzLmdldE9wdGlvblRpdGxlKCksCiAgICAgICAgdG9vbHRpcDogdGhpcy5nZXRPcHRpb25UaXAoKSwKICAgICAgICBncmlkOiB0aGlzLmdldE9wdGlvbkdyaWQoKSwKICAgICAgICB4QXhpczogewogICAgICAgICAgc2hvdzogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueEF4aXNTaG93LCB0cnVlKSwKICAgICAgICAgIG5hbWU6IHRoaXMub3B0aW9uLnhBeGlzTmFtZSwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnhBeGlzQ29sb3IgfHwgIiNmZmYiLAogICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueEF4aXNGb250U2l6ZSB8fCAxNAogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi54QXhpc0xpbmVDb2xvciB8fCAiI2ZmZiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGludmVyc2U6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzSW52ZXJzZSwgZmFsc2UpLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnhBeGlzU3BsaXRMaW5lU2hvdywgdHJ1ZSkKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgaW50ZXJ2YWw6IHRoaXMub3B0aW9uLnhBeGlzSW50ZXJ2YWwgfHwgJ2F1dG8nLAogICAgICAgICAgICByb3RhdGU6IHRoaXMub3B0aW9uLnhBeGlzUm90YXRlIHx8IDAsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi54QXhpc0NvbG9yIHx8ICIjZmZmIiwKICAgICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueEF4aXNGb250U2l6ZSB8fCAxNAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgc2hvdzogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueUF4aXNTaG93LCB0cnVlKSwKICAgICAgICAgIG5hbWU6IHRoaXMub3B0aW9uLnlBeGlzTmFtZSwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnlBeGlzQ29sb3IgfHwgIiNmZmYiLAogICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueUF4aXNGb250U2l6ZSB8fCAxNAogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueUF4aXNDb2xvciB8fCAiI2ZmZiIsCiAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnlBeGlzRm9udFNpemUgfHwgMTQKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi55QXhpc0xpbmVDb2xvciB8fCAiI2ZmZiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGludmVyc2U6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnlBeGlzSW52ZXJzZSwgZmFsc2UpLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLnlBeGlzU3BsaXRMaW5lU2hvdywgdHJ1ZSkKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGJhckNvbG9yID0gX3RoaXMub3B0aW9uLmJhckNvbG9yIHx8IFtdOwogICAgICAgICAgdmFyIGxpc3QgPSAob3B0aW9uRGF0YSB8fCBbXSkubWFwKGZ1bmN0aW9uIChlbGUsIGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGVsZSwgewogICAgICAgICAgICAgIHR5cGU6ICJzY2F0dGVyIiwKICAgICAgICAgICAgICBzeW1ib2xTaXplOiBfdGhpcy5vcHRpb24uc3ltYm9sU2l6ZSB8fCAxMCwKICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiBfdGhpcy5nZXRDb2xvcihpbmRleCkKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGxhYmVsOiBfdGhpcy5nZXRPcHRpb25MYWJlbCgpCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gbGlzdDsKICAgICAgICB9KCkKICAgICAgfTsKICAgICAgdGhpcy5teUNoYXJ0LnJlc2l6ZSgpOwogICAgICB0aGlzLm15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICB9CiAgfQp9KTs="},{"version":3,"mappings":";;AASA;AACA;EACAA;EAAA;EACAC;IACAC;MAAA;MACA;MACA;QACAC;QACAC;QACAC;QACAC;UACAC;UACAP;UACAQ;YACAC;YACAC;UACA;UACAC;YACAJ;YACAK;cACAH;YACA;UACA;UACAI;UACAC;YACAP;UACA;UACAQ;YACAC;YACAC;YACAC;cACAT;cACAC;YACA;UACA;QACA;QACAS;UACAZ;UACAP;UACAQ;YACAC;YACAC;UACA;UACAK;YACAG;cACAT;cACAC;YACA;UACA;UACAC;YACAJ;YACAK;cACAH;YACA;UACA;UACAI;UACAC;YACAP;UACA;QACA;QACAa;UACA;UACA;YACA;cACAC;cACAC;cACAC;gBACAd;cACA;cACAe;YACA;UACA;UACA;QACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","methods","updateChart","title","tooltip","grid","xAxis","show","nameTextStyle","color","fontSize","axisLine","lineStyle","inverse","splitLine","axisLabel","interval","rotate","textStyle","yAxis","series","type","symbolSize","itemStyle","label"],"sourceRoot":"src/echart/packages/scatter","sources":["index.vue"],"sourcesContent":["<template>\n  <div :class=\"[b(),className]\"\n       :style=\"styleSizeName\">\n    <div :ref=\"id\"\n         :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from \"../../create\";\nexport default create({\n  name: \"scatter\",//散点图\n  methods: {\n    updateChart () {\n      const optionData = this.deepClone(this.dataChart);\n      const option = {\n        title: this.getOptionTitle(),\n        tooltip: this.getOptionTip(),\n        grid: this.getOptionGrid(),\n        xAxis: {\n          show: this.vaildData(this.option.xAxisShow, true),\n          name: this.option.xAxisName,\n          nameTextStyle: {\n            color: this.option.xAxisColor || \"#fff\",\n            fontSize: this.option.xAxisFontSize || 14\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.xAxisLineColor || \"#fff\"\n            }\n          },\n          inverse: this.vaildData(this.option.xAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.xAxisSplitLineShow, true)\n          },\n          axisLabel: {\n            interval: this.option.xAxisInterval || 'auto',\n            rotate: this.option.xAxisRotate || 0,\n            textStyle: {\n              color: this.option.xAxisColor || \"#fff\",\n              fontSize: this.option.xAxisFontSize || 14\n            }\n          }\n        },\n        yAxis: {\n          show: this.vaildData(this.option.yAxisShow, true),\n          name: this.option.yAxisName,\n          nameTextStyle: {\n            color: this.option.yAxisColor || \"#fff\",\n            fontSize: this.option.yAxisFontSize || 14\n          },\n          axisLabel: {\n            textStyle: {\n              color: this.option.yAxisColor || \"#fff\",\n              fontSize: this.option.yAxisFontSize || 14\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.yAxisLineColor || \"#fff\"\n            }\n          },\n          inverse: this.vaildData(this.option.yAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.yAxisSplitLineShow, true)\n          }\n        },\n        series: (() => {\n          const barColor = this.option.barColor || [];\n          const list = (optionData || []).map((ele, index) => {\n            return Object.assign(ele, {\n              type: \"scatter\",\n              symbolSize: this.option.symbolSize || 10,\n              itemStyle: {\n                color: this.getColor(index)\n              },\n              label: this.getOptionLabel()\n            });\n          });\n          return list;\n        })()\n      };\n      this.myChart.resize();\n      this.myChart.setOption(option, true);\n    }\n  }\n});\n</script>\n\n"]}]}