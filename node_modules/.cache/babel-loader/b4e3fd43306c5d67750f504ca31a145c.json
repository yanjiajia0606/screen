{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","strings","dom","StandardKeyboardEvent","Emitter","SimpleKeybinding","createKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","combinedDisposable","OS","isLinux","isMacintosh","Severity","URI","IBulkEditService","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","ITextModelService","ITextResourceConfigurationService","ITextResourcePropertiesService","CommandsRegistry","ICommandService","IConfigurationService","Configuration","ConfigurationModel","ConfigurationChangeEvent","IContextKeyService","IDialogService","createDecorator","IInstantiationService","AbstractKeybindingService","IKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","ILabelService","INotificationService","NoOpNotification","IEditorProgressService","IProgressService","ITelemetryService","IWorkspaceContextService","WorkspaceFolder","ILayoutService","StandaloneServicesNLS","basename","ICodeEditorService","ConsoleLogger","ILogService","LogService","IWorkspaceTrustManagementService","IContextMenuService","IContextViewService","ContextViewService","LanguageService","ContextMenuService","IThemeService","getSingletonServiceDescriptors","registerSingleton","OpenerService","IEditorWorkerService","EditorWorkerService","ILanguageService","MarkerDecorationsService","IMarkerDecorationsService","ModelService","StandaloneQuickInputService","StandaloneThemeService","IStandaloneThemeService","AccessibilityService","IAccessibilityService","IMenuService","MenuService","BrowserClipboardService","IClipboardService","ContextKeyService","SyncDescriptor","InstantiationService","ServiceCollection","IListService","ListService","IMarkerService","MarkerService","IOpenerService","IQuickInputService","IStorageService","InMemoryStorageService","DefaultConfigurationModel","SimpleModel","model","disposed","_onWillDispose","fire","StandaloneTextModelService","modelService","resource","getModel","Error","StandaloneEditorProgressService","NULL_PROGRESS_RUNNER","promise","delay","total","worked","StandaloneProgressService","_options","task","onDidCancel","report","StandaloneDialogService","confirmation","doConfirm","confirmed","checkboxChecked","messageText","message","detail","window","confirm","severity","buttons","options","choice","StandaloneNotificationService","notify","Info","Warning","error","notification","console","warn","log","NO_OP","None","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","onWillExecuteCommand","event","onDidExecuteCommand","_instantiationService","id","command","getCommand","args","commandId","invokeFunction","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","codeEditorService","_cachedResolver","_dynamicKeybindings","_domNodeListeners","addContainer","domNode","disposables","add","addDisposableListener","EventType","KEY_DOWN","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","push","DomNodeListeners","removeContainer","domNodeListeners","splice","dispose","addCodeEditor","codeEditor","getOption","getContainerDomNode","removeCodeEditor","_register","onCodeEditorAdd","onCodeEditorRemove","listCodeEditors","forEach","addDiffEditor","diffEditor","removeDiffEditor","onDiffEditorAdd","onDiffEditorRemove","listDiffEditors","keybinding","when","registerCommand","addDynamicKeybindings","rules","entries","map","rule","_a","_b","parts","commandArgs","weight1","weight2","extensionId","isBuiltinExtension","concat","updateResolver","_onDidUpdateKeybindings","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","document","hasFocus","items","isDefault","resultLen","item","undefined","resolvedKeybindings","resolveUserBinding","resolvedKeybinding","keyboardEvent","ctrlKey","shiftKey","altKey","metaKey","keyCode","toChord","isConfigurationOverrides","thing","overrideIdentifier","StandaloneConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","_configuration","arg1","arg2","section","getValue","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","keys","source","sourceConfig","arg3","arg4","updateValues","inspect","StandaloneResourceConfigurationService","configurationService","affectedKeys","affectsConfiguration","configuration","position","isIPosition","StandaloneResourcePropertiesService","language","eol","StandaloneTelemetryService","eventName","publicLog","StandaloneWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","uri","name","index","updateConfigurationService","isDiffEditor","toUpdate","StandaloneBulkEditService","_modelService","edits","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","StandaloneUriLabelService","fsPath","StandaloneContextViewService","layoutService","_codeEditorService","delegate","container","shadowRoot","getFocusedCodeEditor","getActiveCodeEditor","StandaloneWorkspaceTrustManagementService","_neverEmitter","onDidChangeTrust","StandaloneLanguageService","StandaloneLogService","StandaloneContextMenuService","contextViewService","keybindingService","themeService","configure","blockMouse","StandaloneServices","serviceCollection","descriptor","serviceId","accessor","initialized","initialize","hasOwnProperty","serviceIdentifier"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport '../../common/services/languageFeaturesService.js';\nimport { DefaultConfigurationModel } from '../../../platform/configuration/common/configurations.js';\nclass SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    createModelReference(resource) {\n        const model = this.modelService.getModel(resource);\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n};\nStandaloneTextModelService = __decorate([\n    __param(0, IModelService)\n], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n    show() {\n        return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    showWhile(promise, delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield promise;\n        });\n    }\n}\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n    done: () => { },\n    total: () => { },\n    worked: () => { }\n};\nclass StandaloneProgressService {\n    withProgress(_options, task, onDidCancel) {\n        return task({\n            report: () => { },\n        });\n    }\n}\nclass StandaloneDialogService {\n    confirm(confirmation) {\n        return this.doConfirm(confirmation).then(confirmed => {\n            return {\n                confirmed,\n                checkboxChecked: false // unsupported\n            };\n        });\n    }\n    doConfirm(confirmation) {\n        let messageText = confirmation.message;\n        if (confirmation.detail) {\n            messageText = messageText + '\\n\\n' + confirmation.detail;\n        }\n        return Promise.resolve(window.confirm(messageText));\n    }\n    show(severity, message, buttons, options) {\n        return Promise.resolve({ choice: 0 });\n    }\n}\nexport class StandaloneNotificationService {\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return StandaloneNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onWillExecuteCommand = this._onWillExecuteCommand.event;\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\nStandaloneCommandService = __decorate([\n    __param(0, IInstantiationService)\n], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        this._domNodeListeners = [];\n        const addContainer = (domNode) => {\n            const disposables = new DisposableStore();\n            // for standard keybindings\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                    keyEvent.stopPropagation();\n                }\n            }));\n            // for single modifier chord keybindings (e.g. shift shift)\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n            }));\n            this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n        };\n        const removeContainer = (domNode) => {\n            for (let i = 0; i < this._domNodeListeners.length; i++) {\n                const domNodeListeners = this._domNodeListeners[i];\n                if (domNodeListeners.domNode === domNode) {\n                    this._domNodeListeners.splice(i, 1);\n                    domNodeListeners.dispose();\n                }\n            }\n        };\n        const addCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            addContainer(codeEditor.getContainerDomNode());\n        };\n        const removeCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            removeContainer(codeEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n        this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n        codeEditorService.listCodeEditors().forEach(addCodeEditor);\n        const addDiffEditor = (diffEditor) => {\n            addContainer(diffEditor.getContainerDomNode());\n        };\n        const removeDiffEditor = (diffEditor) => {\n            removeContainer(diffEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n        this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n        codeEditorService.listDiffEditors().forEach(addDiffEditor);\n    }\n    addDynamicKeybinding(command, keybinding, handler, when) {\n        return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n                keybinding,\n                command,\n                when\n            }]));\n    }\n    addDynamicKeybindings(rules) {\n        const entries = rules.map((rule) => {\n            var _a, _b;\n            const keybinding = createKeybinding(rule.keybinding, OS);\n            return {\n                keybinding: (_a = keybinding === null || keybinding === void 0 ? void 0 : keybinding.parts) !== null && _a !== void 0 ? _a : null,\n                command: (_b = rule.command) !== null && _b !== void 0 ? _b : null,\n                commandArgs: rule.commandArgs,\n                when: rule.when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            };\n        });\n        this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n        this.updateResolver();\n        return toDisposable(() => {\n            // Search the first entry and remove them all since they will be contiguous\n            for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                if (this._dynamicKeybindings[i] === entries[0]) {\n                    this._dynamicKeybindings.splice(i, entries.length);\n                    this.updateResolver();\n                    return;\n                }\n            }\n        });\n    }\n    updateResolver() {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire();\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        const result = [];\n        let resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n        return new USLayoutResolvedKeybinding(keybinding, OS);\n    }\n};\nStandaloneKeybindingService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICommandService),\n    __param(2, ITelemetryService),\n    __param(3, INotificationService),\n    __param(4, ILogService),\n    __param(5, ICodeEditorService)\n], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n    constructor(domNode, disposables) {\n        super();\n        this.domNode = domNode;\n        this._register(disposables);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nexport class StandaloneConfigurationService {\n    constructor() {\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel());\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        const changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n            configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n            configurationChangeEvent.sourceConfig = null;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n    updateValue(key, value, arg3, arg4) {\n        return this.updateValues([[key, value]]);\n    }\n    inspect(key, options = {}) {\n        return this._configuration.inspect(key, options, undefined);\n    }\n}\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue();\n        }\n        return this.configurationService.getValue(section);\n    }\n};\nStandaloneResourceConfigurationService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nStandaloneResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n    publicLog(eventName, data) {\n        return Promise.resolve(undefined);\n    }\n    publicLog2(eventName, data) {\n        return this.publicLog(eventName, data);\n    }\n}\nclass StandaloneWorkspaceContextService {\n    constructor() {\n        const resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n    getWorkspaceFolder(resource) {\n        return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n    }\n}\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof StandaloneConfigurationService)) {\n        return;\n    }\n    const toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    apply(edits, _options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEdits = new Map();\n            for (const edit of edits) {\n                if (!(edit instanceof ResourceTextEdit)) {\n                    throw new Error('bad edit - only text edits are supported');\n                }\n                const model = this._modelService.getModel(edit.resource);\n                if (!model) {\n                    throw new Error('bad edit - model not found');\n                }\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                    throw new Error('bad state - model changed in the meantime');\n                }\n                let array = textEdits.get(model);\n                if (!array) {\n                    array = [];\n                    textEdits.set(model, array);\n                }\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n            }\n            let totalEdits = 0;\n            let totalFiles = 0;\n            for (const [model, edits] of textEdits) {\n                model.pushStackElement();\n                model.pushEditOperations([], edits, () => []);\n                model.pushStackElement();\n                totalFiles += 1;\n                totalEdits += edits.length;\n            }\n            return {\n                ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n            };\n        });\n    }\n};\nStandaloneBulkEditService = __decorate([\n    __param(0, IModelService)\n], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n    getUriBasenameLabel(resource) {\n        return basename(resource);\n    }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n    constructor(layoutService, _codeEditorService) {\n        super(layoutService);\n        this._codeEditorService = _codeEditorService;\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (!container) {\n            const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n            if (codeEditor) {\n                container = codeEditor.getContainerDomNode();\n            }\n        }\n        return super.showContextView(delegate, container, shadowRoot);\n    }\n};\nStandaloneContextViewService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ICodeEditorService)\n], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n    constructor() {\n        this._neverEmitter = new Emitter();\n        this.onDidChangeTrust = this._neverEmitter.event;\n    }\n    isWorkspaceTrusted() {\n        return true;\n    }\n}\nclass StandaloneLanguageService extends LanguageService {\n    constructor() {\n        super();\n    }\n}\nclass StandaloneLogService extends LogService {\n    constructor() {\n        super(new ConsoleLogger());\n    }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n        super(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n        this.configure({ blockMouse: false }); // we do not want that in the standalone editor\n    }\n};\nStandaloneContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService)\n], StandaloneContextMenuService);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService);\nregisterSingleton(ILabelService, StandaloneUriLabelService);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService);\nregisterSingleton(IDialogService, StandaloneDialogService);\nregisterSingleton(INotificationService, StandaloneNotificationService);\nregisterSingleton(IMarkerService, MarkerService);\nregisterSingleton(ILanguageService, StandaloneLanguageService);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService);\nregisterSingleton(ILogService, StandaloneLogService);\nregisterSingleton(IModelService, ModelService);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService);\nregisterSingleton(IContextKeyService, ContextKeyService);\nregisterSingleton(IProgressService, StandaloneProgressService);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService);\nregisterSingleton(IStorageService, InMemoryStorageService);\nregisterSingleton(IEditorWorkerService, EditorWorkerService);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService);\nregisterSingleton(ITextModelService, StandaloneTextModelService);\nregisterSingleton(IAccessibilityService, AccessibilityService);\nregisterSingleton(IListService, ListService);\nregisterSingleton(ICommandService, StandaloneCommandService);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService);\nregisterSingleton(IContextViewService, StandaloneContextViewService);\nregisterSingleton(IOpenerService, OpenerService);\nregisterSingleton(IClipboardService, BrowserClipboardService);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService);\nregisterSingleton(IMenuService, MenuService);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n    const serviceCollection = new ServiceCollection();\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n        serviceCollection.set(id, descriptor);\n    }\n    const instantiationService = new InstantiationService(serviceCollection, true);\n    serviceCollection.set(IInstantiationService, instantiationService);\n    function get(serviceId) {\n        const r = serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        if (r instanceof SyncDescriptor) {\n            return instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n        }\n        else {\n            return r;\n        }\n    }\n    StandaloneServices.get = get;\n    let initialized = false;\n    function initialize(overrides) {\n        if (initialized) {\n            return instantiationService;\n        }\n        initialized = true;\n        // Add singletons that were registered after this module loaded\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            if (!serviceCollection.get(id)) {\n                serviceCollection.set(id, descriptor);\n            }\n        }\n        // Initialize the service collection with the overrides, but only if the\n        // service was not instantiated in the meantime.\n        for (const serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                const serviceIdentifier = createDecorator(serviceId);\n                const r = serviceCollection.get(serviceIdentifier);\n                if (r instanceof SyncDescriptor) {\n                    serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n                }\n            }\n        }\n        return instantiationService;\n    }\n    StandaloneServices.initialize = initialize;\n})(StandaloneServices || (StandaloneServices = {}));\n"],"mappings":"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"}]}