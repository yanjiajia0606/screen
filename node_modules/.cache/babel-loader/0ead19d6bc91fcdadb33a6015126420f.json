{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["nls","onUnexpectedError","Selection","URI","TextChange","compressConsecutiveTextChanges","buffer","basename","uriGetComparisonKey","resource","toString","SingleModelEditStackData","beforeVersionId","afterVersionId","beforeEOL","afterEOL","beforeCursorState","afterCursorState","changes","model","textChanges","length","necessarySize","_writeSelectionsSize","change","writeSize","b","Uint8Array","offset","writeUInt32BE","writeUInt8","_writeSelections","write","alternativeVersionId","getAlternativeVersionId","eol","getModelEOL","selections","selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","dest","count","readUInt32BE","i","push","source","readUInt8","_readSelections","changeCount","read","SingleModelEditStackElement","label","code","_data","create","isUri","uri","data","deserialize","map","join","append","serialize","Error","_applyUndo","_applyRedo","byteLength","MultiModelEditStackElement","editStackElements","type","_isOpen","_editStackElementsArr","slice","_editStackElementsMap","Map","editStackElement","key","set","_delegate","prepareUndoRedo","has","get","setModel","canAppend","undo","redo","heapSize","result","getEOL","isEditStackElement","element","EditStack","undoRedoService","_model","_undoRedoService","lastElement","getLastElement","close","open","removeElements","newElement","localize","pushElement","_getOrCreateEditStackElement","setEOL","editOperations","cursorStateComputer","inverseEditOperations","applyEdits","_computeCursorState","op","index","textChange","sort","a","oldPosition","e"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from '../core/textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\nfunction uriGetComparisonKey(resource) {\n    return resource.toString();\n}\nexport class SingleModelEditStackData {\n    constructor(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n        this.beforeVersionId = beforeVersionId;\n        this.afterVersionId = afterVersionId;\n        this.beforeEOL = beforeEOL;\n        this.afterEOL = afterEOL;\n        this.beforeCursorState = beforeCursorState;\n        this.afterCursorState = afterCursorState;\n        this.changes = changes;\n    }\n    static create(model, beforeCursorState) {\n        const alternativeVersionId = model.getAlternativeVersionId();\n        const eol = getModelEOL(model);\n        return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (textChanges.length > 0) {\n            this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n        }\n        this.afterEOL = afterEOL;\n        this.afterVersionId = afterVersionId;\n        this.afterCursorState = afterCursorState;\n    }\n    static _writeSelectionsSize(selections) {\n        return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n    static _writeSelections(b, selections, offset) {\n        buffer.writeUInt32BE(b, (selections ? selections.length : 0), offset);\n        offset += 4;\n        if (selections) {\n            for (const selection of selections) {\n                buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionColumn, offset);\n                offset += 4;\n            }\n        }\n        return offset;\n    }\n    static _readSelections(b, offset, dest) {\n        const count = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        for (let i = 0; i < count; i++) {\n            const selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const selectionStartColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n        }\n        return offset;\n    }\n    serialize() {\n        let necessarySize = (+4 // beforeVersionId\n            + 4 // afterVersionId\n            + 1 // beforeEOL\n            + 1 // afterEOL\n            + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState)\n            + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState)\n            + 4 // change count\n        );\n        for (const change of this.changes) {\n            necessarySize += change.writeSize();\n        }\n        const b = new Uint8Array(necessarySize);\n        let offset = 0;\n        buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.afterVersionId, offset);\n        offset += 4;\n        buffer.writeUInt8(b, this.beforeEOL, offset);\n        offset += 1;\n        buffer.writeUInt8(b, this.afterEOL, offset);\n        offset += 1;\n        offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n        offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n        buffer.writeUInt32BE(b, this.changes.length, offset);\n        offset += 4;\n        for (const change of this.changes) {\n            offset = change.write(b, offset);\n        }\n        return b.buffer;\n    }\n    static deserialize(source) {\n        const b = new Uint8Array(source);\n        let offset = 0;\n        const beforeVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const afterVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const beforeEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const afterEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const beforeCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n        const afterCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n        const changeCount = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const changes = [];\n        for (let i = 0; i < changeCount; i++) {\n            offset = TextChange.read(b, offset, changes);\n        }\n        return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n}\nexport class SingleModelEditStackElement {\n    constructor(label, code, model, beforeCursorState) {\n        this.label = label;\n        this.code = code;\n        this.model = model;\n        this._data = SingleModelEditStackData.create(model, beforeCursorState);\n    }\n    get type() {\n        return 0 /* UndoRedoElementType.Resource */;\n    }\n    get resource() {\n        if (URI.isUri(this.model)) {\n            return this.model;\n        }\n        return this.model.uri;\n    }\n    toString() {\n        const data = (this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data));\n        return data.changes.map(change => change.toString()).join(', ');\n    }\n    matchesResource(resource) {\n        const uri = (URI.isUri(this.model) ? this.model : this.model.uri);\n        return (uri.toString() === resource.toString());\n    }\n    setModel(model) {\n        this.model = model;\n    }\n    canAppend(model) {\n        return (this.model === model && this._data instanceof SingleModelEditStackData);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n        }\n    }\n    close() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n    }\n    open() {\n        if (!(this._data instanceof SingleModelEditStackData)) {\n            this._data = SingleModelEditStackData.deserialize(this._data);\n        }\n    }\n    undo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n    redo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n    heapSize() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        return this._data.byteLength + 168 /*heap overhead*/;\n    }\n}\nexport class MultiModelEditStackElement {\n    constructor(label, code, editStackElements) {\n        this.label = label;\n        this.code = code;\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this._isOpen = true;\n        this._editStackElementsArr = editStackElements.slice(0);\n        this._editStackElementsMap = new Map();\n        for (const editStackElement of this._editStackElementsArr) {\n            const key = uriGetComparisonKey(editStackElement.resource);\n            this._editStackElementsMap.set(key, editStackElement);\n        }\n        this._delegate = null;\n    }\n    get resources() {\n        return this._editStackElementsArr.map(editStackElement => editStackElement.resource);\n    }\n    prepareUndoRedo() {\n        if (this._delegate) {\n            return this._delegate.prepareUndoRedo(this);\n        }\n    }\n    matchesResource(resource) {\n        const key = uriGetComparisonKey(resource);\n        return (this._editStackElementsMap.has(key));\n    }\n    setModel(model) {\n        const key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            this._editStackElementsMap.get(key).setModel(model);\n        }\n    }\n    canAppend(model) {\n        if (!this._isOpen) {\n            return false;\n        }\n        const key = uriGetComparisonKey(model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.canAppend(model);\n        }\n        return false;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        const key = uriGetComparisonKey(model.uri);\n        const editStackElement = this._editStackElementsMap.get(key);\n        editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n    close() {\n        this._isOpen = false;\n    }\n    open() {\n        // cannot reopen\n    }\n    undo() {\n        this._isOpen = false;\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.undo();\n        }\n    }\n    redo() {\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.redo();\n        }\n    }\n    heapSize(resource) {\n        const key = uriGetComparisonKey(resource);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.heapSize();\n        }\n        return 0;\n    }\n    split() {\n        return this._editStackElementsArr;\n    }\n    toString() {\n        const result = [];\n        for (const editStackElement of this._editStackElementsArr) {\n            result.push(`${basename(editStackElement.resource)}: ${editStackElement}`);\n        }\n        return `{${result.join(', ')}}`;\n    }\n}\nfunction getModelEOL(model) {\n    const eol = model.getEOL();\n    if (eol === '\\n') {\n        return 0 /* EndOfLineSequence.LF */;\n    }\n    else {\n        return 1 /* EndOfLineSequence.CRLF */;\n    }\n}\nexport function isEditStackElement(element) {\n    if (!element) {\n        return false;\n    }\n    return ((element instanceof SingleModelEditStackElement) || (element instanceof MultiModelEditStackElement));\n}\nexport class EditStack {\n    constructor(model, undoRedoService) {\n        this._model = model;\n        this._undoRedoService = undoRedoService;\n    }\n    pushStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.close();\n        }\n    }\n    popStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.open();\n        }\n    }\n    clear() {\n        this._undoRedoService.removeElements(this._model.uri);\n    }\n    _getOrCreateEditStackElement(beforeCursorState) {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n            return lastElement;\n        }\n        const newElement = new SingleModelEditStackElement(nls.localize('edit', \"Typing\"), 'undoredo.textBufferEdit', this._model, beforeCursorState);\n        this._undoRedoService.pushElement(newElement);\n        return newElement;\n    }\n    pushEOL(eol) {\n        const editStackElement = this._getOrCreateEditStackElement(null);\n        this._model.setEOL(eol);\n        editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n    pushEditOperation(beforeCursorState, editOperations, cursorStateComputer) {\n        const editStackElement = this._getOrCreateEditStackElement(beforeCursorState);\n        const inverseEditOperations = this._model.applyEdits(editOperations, true);\n        const afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n        const textChanges = inverseEditOperations.map((op, index) => ({ index: index, textChange: op.textChange }));\n        textChanges.sort((a, b) => {\n            if (a.textChange.oldPosition === b.textChange.oldPosition) {\n                return a.index - b.index;\n            }\n            return a.textChange.oldPosition - b.textChange.oldPosition;\n        });\n        editStackElement.append(this._model, textChanges.map(op => op.textChange), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n        return afterCursorState;\n    }\n    static _computeCursorState(cursorStateComputer, inverseEditOperations) {\n        try {\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return null;\n        }\n    }\n}\n"],"mappings":"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"}]}