{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi4KICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCmltcG9ydCB7IGxlbmd0aEFkZCwgbGVuZ3RoWmVybywgbGVuZ3RoTGVzc1RoYW4gfSBmcm9tICcuL2xlbmd0aC5qcyc7Ci8qKgogKiBBbGxvd3MgdG8gZWZmaWNpZW50bHkgZmluZCBhIGxvbmdlc3QgY2hpbGQgYXQgYSBnaXZlbiBvZmZzZXQgaW4gYSBmaXhlZCBub2RlLgogKiBUaGUgcmVxdWVzdGVkIG9mZnNldHMgbXVzdCBpbmNyZWFzZSBtb25vdG9ub3VzbHkuCiovCmV4cG9ydCB2YXIgTm9kZVJlYWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTm9kZVJlYWRlcihub2RlKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTm9kZVJlYWRlcik7CiAgICB0aGlzLmxhc3RPZmZzZXQgPSBsZW5ndGhaZXJvOwogICAgdGhpcy5uZXh0Tm9kZXMgPSBbbm9kZV07CiAgICB0aGlzLm9mZnNldHMgPSBbbGVuZ3RoWmVyb107CiAgICB0aGlzLmlkeHMgPSBbXTsKICB9CiAgLyoqCiAgICogUmV0dXJucyB0aGUgbG9uZ2VzdCBub2RlIGF0IGBvZmZzZXRgIHRoYXQgc2F0aXNmaWVzIHRoZSBwcmVkaWNhdGUuCiAgICogQHBhcmFtIG9mZnNldCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB0aGUgbGFzdCBvZmZzZXQgdGhpcyBtZXRob2QgaGFzIGJlZW4gY2FsbGVkIHdpdGghCiAgKi8KICBfY3JlYXRlQ2xhc3MoTm9kZVJlYWRlciwgW3sKICAgIGtleTogInJlYWRMb25nZXN0Tm9kZUF0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWFkTG9uZ2VzdE5vZGVBdChvZmZzZXQsIHByZWRpY2F0ZSkgewogICAgICBpZiAobGVuZ3RoTGVzc1RoYW4ob2Zmc2V0LCB0aGlzLmxhc3RPZmZzZXQpKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG9mZnNldCcpOwogICAgICB9CiAgICAgIHRoaXMubGFzdE9mZnNldCA9IG9mZnNldDsKICAgICAgLy8gRmluZCB0aGUgbG9uZ2VzdCBub2RlIG9mIGFsbCB0aG9zZSB0aGF0IGFyZSBjbG9zZXN0IHRvIHRoZSBjdXJyZW50IG9mZnNldC4KICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICB2YXIgY3VyTm9kZSA9IGxhc3RPclVuZGVmaW5lZCh0aGlzLm5leHROb2Rlcyk7CiAgICAgICAgaWYgKCFjdXJOb2RlKSB7CiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkOwogICAgICAgIH0KICAgICAgICB2YXIgY3VyTm9kZU9mZnNldCA9IGxhc3RPclVuZGVmaW5lZCh0aGlzLm9mZnNldHMpOwogICAgICAgIGlmIChsZW5ndGhMZXNzVGhhbihvZmZzZXQsIGN1ck5vZGVPZmZzZXQpKSB7CiAgICAgICAgICAvLyBUaGUgbmV4dCBiZXN0IG5vZGUgaXMgbm90IGhlcmUgeWV0LgogICAgICAgICAgLy8gVGhlIHJlYWRlciBtdXN0IGFkdmFuY2UgYmVmb3JlIGEgY2FjaGVkIG5vZGUgaXMgaGl0LgogICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgICAgaWYgKGxlbmd0aExlc3NUaGFuKGN1ck5vZGVPZmZzZXQsIG9mZnNldCkpIHsKICAgICAgICAgIC8vIFRoZSByZWFkZXIgaXMgYWhlYWQgb2YgdGhlIGN1cnJlbnQgbm9kZS4KICAgICAgICAgIGlmIChsZW5ndGhBZGQoY3VyTm9kZU9mZnNldCwgY3VyTm9kZS5sZW5ndGgpIDw9IG9mZnNldCkgewogICAgICAgICAgICAvLyBUaGUgcmVhZGVyIGlzIGFmdGVyIHRoZSBlbmQgb2YgdGhlIGN1cnJlbnQgbm9kZS4KICAgICAgICAgICAgdGhpcy5uZXh0Tm9kZUFmdGVyQ3VycmVudCgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gVGhlIHJlYWRlciBpcyBzb21ld2hlcmUgaW4gdGhlIGN1cnJlbnQgbm9kZS4KICAgICAgICAgICAgdmFyIG5leHRDaGlsZElkeCA9IGdldE5leHRDaGlsZElkeChjdXJOb2RlKTsKICAgICAgICAgICAgaWYgKG5leHRDaGlsZElkeCAhPT0gLTEpIHsKICAgICAgICAgICAgICAvLyBHbyB0byB0aGUgZmlyc3QgY2hpbGQgYW5kIHJlcGVhdC4KICAgICAgICAgICAgICB0aGlzLm5leHROb2Rlcy5wdXNoKGN1ck5vZGUuZ2V0Q2hpbGQobmV4dENoaWxkSWR4KSk7CiAgICAgICAgICAgICAgdGhpcy5vZmZzZXRzLnB1c2goY3VyTm9kZU9mZnNldCk7CiAgICAgICAgICAgICAgdGhpcy5pZHhzLnB1c2gobmV4dENoaWxkSWR4KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBXZSBkb24ndCBoYXZlIGNoaWxkcmVuCiAgICAgICAgICAgICAgdGhpcy5uZXh0Tm9kZUFmdGVyQ3VycmVudCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIHJlYWRlck9mZnNldEJlZm9yZUNoYW5nZSA9PT0gY3VyTm9kZU9mZnNldAogICAgICAgICAgaWYgKHByZWRpY2F0ZShjdXJOb2RlKSkgewogICAgICAgICAgICB0aGlzLm5leHROb2RlQWZ0ZXJDdXJyZW50KCk7CiAgICAgICAgICAgIHJldHVybiBjdXJOb2RlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIF9uZXh0Q2hpbGRJZHggPSBnZXROZXh0Q2hpbGRJZHgoY3VyTm9kZSk7CiAgICAgICAgICAgIC8vIGxvb2sgZm9yIHNob3J0ZXIgbm9kZQogICAgICAgICAgICBpZiAoX25leHRDaGlsZElkeCA9PT0gLTEpIHsKICAgICAgICAgICAgICAvLyBUaGVyZSBpcyBubyBzaG9ydGVyIG5vZGUuCiAgICAgICAgICAgICAgdGhpcy5uZXh0Tm9kZUFmdGVyQ3VycmVudCgpOwogICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gRGVzY2VuZCBpbnRvIGZpcnN0IGNoaWxkICYgcmVwZWF0LgogICAgICAgICAgICAgIHRoaXMubmV4dE5vZGVzLnB1c2goY3VyTm9kZS5nZXRDaGlsZChfbmV4dENoaWxkSWR4KSk7CiAgICAgICAgICAgICAgdGhpcy5vZmZzZXRzLnB1c2goY3VyTm9kZU9mZnNldCk7CiAgICAgICAgICAgICAgdGhpcy5pZHhzLnB1c2goX25leHRDaGlsZElkeCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIC8vIE5hdmlnYXRlcyB0byB0aGUgbG9uZ2VzdCBub2RlIHRoYXQgY29udGludWVzIGFmdGVyIHRoZSBjdXJyZW50IG5vZGUuCiAgfSwgewogICAga2V5OiAibmV4dE5vZGVBZnRlckN1cnJlbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG5leHROb2RlQWZ0ZXJDdXJyZW50KCkgewogICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIHZhciBjdXJyZW50T2Zmc2V0ID0gbGFzdE9yVW5kZWZpbmVkKHRoaXMub2Zmc2V0cyk7CiAgICAgICAgdmFyIGN1cnJlbnROb2RlID0gbGFzdE9yVW5kZWZpbmVkKHRoaXMubmV4dE5vZGVzKTsKICAgICAgICB0aGlzLm5leHROb2Rlcy5wb3AoKTsKICAgICAgICB0aGlzLm9mZnNldHMucG9wKCk7CiAgICAgICAgaWYgKHRoaXMuaWR4cy5sZW5ndGggPT09IDApIHsKICAgICAgICAgIC8vIFdlIGp1c3QgcG9wcGVkIHRoZSByb290IG5vZGUsIHRoZXJlIGlzIG5vIG5leHQgbm9kZS4KICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICAvLyBQYXJlbnQgaXMgbm90IHVuZGVmaW5lZCwgYmVjYXVzZSBpZHhzIGlzIG5vdCBlbXB0eQogICAgICAgIHZhciBwYXJlbnQgPSBsYXN0T3JVbmRlZmluZWQodGhpcy5uZXh0Tm9kZXMpOwogICAgICAgIHZhciBuZXh0Q2hpbGRJZHggPSBnZXROZXh0Q2hpbGRJZHgocGFyZW50LCB0aGlzLmlkeHNbdGhpcy5pZHhzLmxlbmd0aCAtIDFdKTsKICAgICAgICBpZiAobmV4dENoaWxkSWR4ICE9PSAtMSkgewogICAgICAgICAgdGhpcy5uZXh0Tm9kZXMucHVzaChwYXJlbnQuZ2V0Q2hpbGQobmV4dENoaWxkSWR4KSk7CiAgICAgICAgICB0aGlzLm9mZnNldHMucHVzaChsZW5ndGhBZGQoY3VycmVudE9mZnNldCwgY3VycmVudE5vZGUubGVuZ3RoKSk7CiAgICAgICAgICB0aGlzLmlkeHNbdGhpcy5pZHhzLmxlbmd0aCAtIDFdID0gbmV4dENoaWxkSWR4OwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuaWR4cy5wb3AoKTsKICAgICAgICB9CiAgICAgICAgLy8gV2UgZnVsbHkgY29uc3VtZWQgdGhlIHBhcmVudC4KICAgICAgICAvLyBDdXJyZW50IG5vZGUgaXMgbm93IHBhcmVudCwgc28gY2FsbCBuZXh0Tm9kZUFmdGVyQ3VycmVudCBhZ2FpbgogICAgICB9CiAgICB9CiAgfV0pOwogIHJldHVybiBOb2RlUmVhZGVyOwp9KCk7CmZ1bmN0aW9uIGdldE5leHRDaGlsZElkeChub2RlKSB7CiAgdmFyIGN1cklkeCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogLTE7CiAgd2hpbGUgKHRydWUpIHsKICAgIGN1cklkeCsrOwogICAgaWYgKGN1cklkeCA+PSBub2RlLmNoaWxkcmVuTGVuZ3RoKSB7CiAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIGlmIChub2RlLmdldENoaWxkKGN1cklkeCkpIHsKICAgICAgcmV0dXJuIGN1cklkeDsKICAgIH0KICB9Cn0KZnVuY3Rpb24gbGFzdE9yVW5kZWZpbmVkKGFycikgewogIHJldHVybiBhcnIubGVuZ3RoID4gMCA/IGFyclthcnIubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7Cn0="},{"version":3,"names":["lengthAdd","lengthZero","lengthLessThan","NodeReader","node","lastOffset","nextNodes","offsets","idxs","offset","predicate","Error","curNode","lastOrUndefined","undefined","curNodeOffset","length","nextNodeAfterCurrent","nextChildIdx","getNextChildIdx","push","getChild","currentOffset","currentNode","pop","parent","curIdx","childrenLength","arr"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { lengthAdd, lengthZero, lengthLessThan } from './length.js';\n/**\n * Allows to efficiently find a longest child at a given offset in a fixed node.\n * The requested offsets must increase monotonously.\n*/\nexport class NodeReader {\n    constructor(node) {\n        this.lastOffset = lengthZero;\n        this.nextNodes = [node];\n        this.offsets = [lengthZero];\n        this.idxs = [];\n    }\n    /**\n     * Returns the longest node at `offset` that satisfies the predicate.\n     * @param offset must be greater than or equal to the last offset this method has been called with!\n    */\n    readLongestNodeAt(offset, predicate) {\n        if (lengthLessThan(offset, this.lastOffset)) {\n            throw new Error('Invalid offset');\n        }\n        this.lastOffset = offset;\n        // Find the longest node of all those that are closest to the current offset.\n        while (true) {\n            const curNode = lastOrUndefined(this.nextNodes);\n            if (!curNode) {\n                return undefined;\n            }\n            const curNodeOffset = lastOrUndefined(this.offsets);\n            if (lengthLessThan(offset, curNodeOffset)) {\n                // The next best node is not here yet.\n                // The reader must advance before a cached node is hit.\n                return undefined;\n            }\n            if (lengthLessThan(curNodeOffset, offset)) {\n                // The reader is ahead of the current node.\n                if (lengthAdd(curNodeOffset, curNode.length) <= offset) {\n                    // The reader is after the end of the current node.\n                    this.nextNodeAfterCurrent();\n                }\n                else {\n                    // The reader is somewhere in the current node.\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    if (nextChildIdx !== -1) {\n                        // Go to the first child and repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                    else {\n                        // We don't have children\n                        this.nextNodeAfterCurrent();\n                    }\n                }\n            }\n            else {\n                // readerOffsetBeforeChange === curNodeOffset\n                if (predicate(curNode)) {\n                    this.nextNodeAfterCurrent();\n                    return curNode;\n                }\n                else {\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    // look for shorter node\n                    if (nextChildIdx === -1) {\n                        // There is no shorter node.\n                        this.nextNodeAfterCurrent();\n                        return undefined;\n                    }\n                    else {\n                        // Descend into first child & repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                }\n            }\n        }\n    }\n    // Navigates to the longest node that continues after the current node.\n    nextNodeAfterCurrent() {\n        while (true) {\n            const currentOffset = lastOrUndefined(this.offsets);\n            const currentNode = lastOrUndefined(this.nextNodes);\n            this.nextNodes.pop();\n            this.offsets.pop();\n            if (this.idxs.length === 0) {\n                // We just popped the root node, there is no next node.\n                break;\n            }\n            // Parent is not undefined, because idxs is not empty\n            const parent = lastOrUndefined(this.nextNodes);\n            const nextChildIdx = getNextChildIdx(parent, this.idxs[this.idxs.length - 1]);\n            if (nextChildIdx !== -1) {\n                this.nextNodes.push(parent.getChild(nextChildIdx));\n                this.offsets.push(lengthAdd(currentOffset, currentNode.length));\n                this.idxs[this.idxs.length - 1] = nextChildIdx;\n                break;\n            }\n            else {\n                this.idxs.pop();\n            }\n            // We fully consumed the parent.\n            // Current node is now parent, so call nextNodeAfterCurrent again\n        }\n    }\n}\nfunction getNextChildIdx(node, curIdx = -1) {\n    while (true) {\n        curIdx++;\n        if (curIdx >= node.childrenLength) {\n            return -1;\n        }\n        if (node.getChild(curIdx)) {\n            return curIdx;\n        }\n    }\n}\nfunction lastOrUndefined(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n"],"mappings":"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"}]}