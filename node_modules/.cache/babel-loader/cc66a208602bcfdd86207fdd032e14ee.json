{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCommon.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCommon.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zaGlmdC5qcyI7Ci8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uCiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwpleHBvcnQgZnVuY3Rpb24gaXNGdXp6eUFjdGlvbkFycih3aGF0KSB7CiAgcmV0dXJuIEFycmF5LmlzQXJyYXkod2hhdCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzRnV6enlBY3Rpb24od2hhdCkgewogIHJldHVybiAhaXNGdXp6eUFjdGlvbkFycih3aGF0KTsKfQpleHBvcnQgZnVuY3Rpb24gaXNTdHJpbmcod2hhdCkgewogIHJldHVybiB0eXBlb2Ygd2hhdCA9PT0gJ3N0cmluZyc7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzSUFjdGlvbih3aGF0KSB7CiAgcmV0dXJuICFpc1N0cmluZyh3aGF0KTsKfQovLyBTbWFsbCBoZWxwZXIgZnVuY3Rpb25zCi8qKgogKiBJcyBhIHN0cmluZyBudWxsLCB1bmRlZmluZWQsIG9yIGVtcHR5PwogKi8KZXhwb3J0IGZ1bmN0aW9uIGVtcHR5KHMpIHsKICByZXR1cm4gcyA/IGZhbHNlIDogdHJ1ZTsKfQovKioKICogUHV0cyBhIHN0cmluZyB0byBsb3dlciBjYXNlIGlmICdpZ25vcmVDYXNlJyBpcyBzZXQuCiAqLwpleHBvcnQgZnVuY3Rpb24gZml4Q2FzZShsZXhlciwgc3RyKSB7CiAgcmV0dXJuIGxleGVyLmlnbm9yZUNhc2UgJiYgc3RyID8gc3RyLnRvTG93ZXJDYXNlKCkgOiBzdHI7Cn0KLyoqCiAqIEVuc3VyZXMgdGhlcmUgYXJlIG5vIGJhZCBjaGFyYWN0ZXJzIGluIGEgQ1NTIHRva2VuIGNsYXNzLgogKi8KZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplKHMpIHsKICByZXR1cm4gcy5yZXBsYWNlKC9bJjw+JyJfXS9nLCAnLScpOyAvLyB1c2VkIG9uIGFsbCBvdXRwdXQgdG9rZW4gQ1NTIGNsYXNzZXMKfQovLyBMb2dnaW5nCi8qKgogKiBMb2dzIGEgbWVzc2FnZS4KICovCmV4cG9ydCBmdW5jdGlvbiBsb2cobGV4ZXIsIG1zZykgewogIGNvbnNvbGUubG9nKCIiLmNvbmNhdChsZXhlci5sYW5ndWFnZUlkLCAiOiAiKS5jb25jYXQobXNnKSk7Cn0KLy8gVGhyb3dpbmcgZXJyb3JzCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFcnJvcihsZXhlciwgbXNnKSB7CiAgcmV0dXJuIG5ldyBFcnJvcigiIi5jb25jYXQobGV4ZXIubGFuZ3VhZ2VJZCwgIjogIikuY29uY2F0KG1zZykpOwp9Ci8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIHJ1bGUgZmluZGluZyBhbmQgc3Vic3RpdHV0aW9uCi8qKgogKiBzdWJzdGl0dXRlTWF0Y2hlcyBpcyB1c2VkIG9uIGxleGVyIHN0cmluZ3MgYW5kIGNhbiBzdWJzdGl0dXRlcyBwcmVkZWZpbmVkIHBhdHRlcm5zOgogKiAJCSQkICA9PiAkCiAqIAkJJCMgID0+IGlkCiAqIAkJJG4gID0+IG1hdGNoZWQgZW50cnkgbgogKiAJCUBhdHRyID0+IGNvbnRlbnRzIG9mIGxleGVyW2F0dHJdCiAqCiAqIFNlZSBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGluZm8KICovCmV4cG9ydCBmdW5jdGlvbiBzdWJzdGl0dXRlTWF0Y2hlcyhsZXhlciwgc3RyLCBpZCwgbWF0Y2hlcywgc3RhdGUpIHsKICB2YXIgcmUgPSAvXCQoKFwkKXwoIyl8KFxkXGQ/KXxbc1NdKFxkXGQ/KXxAKFx3KykpL2c7CiAgdmFyIHN0YXRlTWF0Y2hlcyA9IG51bGw7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKHJlLCBmdW5jdGlvbiAoZnVsbCwgc3ViLCBkb2xsYXIsIGhhc2gsIG4sIHMsIGF0dHIsIG9mcywgdG90YWwpIHsKICAgIGlmICghZW1wdHkoZG9sbGFyKSkgewogICAgICByZXR1cm4gJyQnOyAvLyAkJAogICAgfQoKICAgIGlmICghZW1wdHkoaGFzaCkpIHsKICAgICAgcmV0dXJuIGZpeENhc2UobGV4ZXIsIGlkKTsgLy8gZGVmYXVsdCAkIwogICAgfQoKICAgIGlmICghZW1wdHkobikgJiYgbiA8IG1hdGNoZXMubGVuZ3RoKSB7CiAgICAgIHJldHVybiBmaXhDYXNlKGxleGVyLCBtYXRjaGVzW25dKTsgLy8gJG4KICAgIH0KCiAgICBpZiAoIWVtcHR5KGF0dHIpICYmIGxleGVyICYmIHR5cGVvZiBsZXhlclthdHRyXSA9PT0gJ3N0cmluZycpIHsKICAgICAgcmV0dXJuIGxleGVyW2F0dHJdOyAvL0BhdHRyaWJ1dGUKICAgIH0KCiAgICBpZiAoc3RhdGVNYXRjaGVzID09PSBudWxsKSB7CiAgICAgIC8vIHNwbGl0IHN0YXRlIG9uIGRlbWFuZAogICAgICBzdGF0ZU1hdGNoZXMgPSBzdGF0ZS5zcGxpdCgnLicpOwogICAgICBzdGF0ZU1hdGNoZXMudW5zaGlmdChzdGF0ZSk7CiAgICB9CiAgICBpZiAoIWVtcHR5KHMpICYmIHMgPCBzdGF0ZU1hdGNoZXMubGVuZ3RoKSB7CiAgICAgIHJldHVybiBmaXhDYXNlKGxleGVyLCBzdGF0ZU1hdGNoZXNbc10pOyAvLyRTbgogICAgfQoKICAgIHJldHVybiAnJzsKICB9KTsKfQovKioKICogRmluZCB0aGUgdG9rZW5pemVyIHJ1bGVzIGZvciBhIHNwZWNpZmljIHN0YXRlIChpLmUuIG5leHQgYWN0aW9uKQogKi8KZXhwb3J0IGZ1bmN0aW9uIGZpbmRSdWxlcyhsZXhlciwgaW5TdGF0ZSkgewogIHZhciBzdGF0ZSA9IGluU3RhdGU7CiAgd2hpbGUgKHN0YXRlICYmIHN0YXRlLmxlbmd0aCA+IDApIHsKICAgIHZhciBydWxlcyA9IGxleGVyLnRva2VuaXplcltzdGF0ZV07CiAgICBpZiAocnVsZXMpIHsKICAgICAgcmV0dXJuIHJ1bGVzOwogICAgfQogICAgdmFyIGlkeCA9IHN0YXRlLmxhc3RJbmRleE9mKCcuJyk7CiAgICBpZiAoaWR4IDwgMCkgewogICAgICBzdGF0ZSA9IG51bGw7IC8vIG5vIGZ1cnRoZXIgcGFyZW50CiAgICB9IGVsc2UgewogICAgICBzdGF0ZSA9IHN0YXRlLnN1YnN0cigwLCBpZHgpOwogICAgfQogIH0KICByZXR1cm4gbnVsbDsKfQovKioKICogSXMgYSBjZXJ0YWluIHN0YXRlIGRlZmluZWQ/IEluIGNvbnRyYXN0IHRvICdmaW5kUnVsZXMnIHRoaXMgd29ya3Mgb24gYSBJTGV4ZXJNaW4uCiAqIFRoaXMgaXMgdXNlZCBkdXJpbmcgY29tcGlsYXRpb24gd2hlcmUgd2UgbWF5IGtub3cgdGhlIGRlZmluZWQgc3RhdGVzCiAqIGJ1dCBub3QgeWV0IHdoZXRoZXIgdGhlIGNvcnJlc3BvbmRpbmcgcnVsZXMgYXJlIGNvcnJlY3QuCiAqLwpleHBvcnQgZnVuY3Rpb24gc3RhdGVFeGlzdHMobGV4ZXIsIGluU3RhdGUpIHsKICB2YXIgc3RhdGUgPSBpblN0YXRlOwogIHdoaWxlIChzdGF0ZSAmJiBzdGF0ZS5sZW5ndGggPiAwKSB7CiAgICB2YXIgZXhpc3QgPSBsZXhlci5zdGF0ZU5hbWVzW3N0YXRlXTsKICAgIGlmIChleGlzdCkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHZhciBpZHggPSBzdGF0ZS5sYXN0SW5kZXhPZignLicpOwogICAgaWYgKGlkeCA8IDApIHsKICAgICAgc3RhdGUgPSBudWxsOyAvLyBubyBmdXJ0aGVyIHBhcmVudAogICAgfSBlbHNlIHsKICAgICAgc3RhdGUgPSBzdGF0ZS5zdWJzdHIoMCwgaWR4KTsKICAgIH0KICB9CiAgcmV0dXJuIGZhbHNlOwp9"},{"version":3,"names":["isFuzzyActionArr","what","Array","isArray","isFuzzyAction","isString","isIAction","empty","s","fixCase","lexer","str","ignoreCase","toLowerCase","sanitize","replace","log","msg","console","languageId","createError","Error","substituteMatches","id","matches","state","re","stateMatches","full","sub","dollar","hash","n","attr","ofs","total","length","split","unshift","findRules","inState","rules","tokenizer","idx","lastIndexOf","substr","stateExists","exist","stateNames"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCommon.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFuzzyActionArr(what) {\n    return (Array.isArray(what));\n}\nexport function isFuzzyAction(what) {\n    return !isFuzzyActionArr(what);\n}\nexport function isString(what) {\n    return (typeof what === 'string');\n}\nexport function isIAction(what) {\n    return !isString(what);\n}\n// Small helper functions\n/**\n * Is a string null, undefined, or empty?\n */\nexport function empty(s) {\n    return (s ? false : true);\n}\n/**\n * Puts a string to lower case if 'ignoreCase' is set.\n */\nexport function fixCase(lexer, str) {\n    return (lexer.ignoreCase && str ? str.toLowerCase() : str);\n}\n/**\n * Ensures there are no bad characters in a CSS token class.\n */\nexport function sanitize(s) {\n    return s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\n}\n// Logging\n/**\n * Logs a message.\n */\nexport function log(lexer, msg) {\n    console.log(`${lexer.languageId}: ${msg}`);\n}\n// Throwing errors\nexport function createError(lexer, msg) {\n    return new Error(`${lexer.languageId}: ${msg}`);\n}\n// Helper functions for rule finding and substitution\n/**\n * substituteMatches is used on lexer strings and can substitutes predefined patterns:\n * \t\t$$  => $\n * \t\t$#  => id\n * \t\t$n  => matched entry n\n * \t\t@attr => contents of lexer[attr]\n *\n * See documentation for more info\n */\nexport function substituteMatches(lexer, str, id, matches, state) {\n    const re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\n    let stateMatches = null;\n    return str.replace(re, function (full, sub, dollar, hash, n, s, attr, ofs, total) {\n        if (!empty(dollar)) {\n            return '$'; // $$\n        }\n        if (!empty(hash)) {\n            return fixCase(lexer, id); // default $#\n        }\n        if (!empty(n) && n < matches.length) {\n            return fixCase(lexer, matches[n]); // $n\n        }\n        if (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') {\n            return lexer[attr]; //@attribute\n        }\n        if (stateMatches === null) { // split state on demand\n            stateMatches = state.split('.');\n            stateMatches.unshift(state);\n        }\n        if (!empty(s) && s < stateMatches.length) {\n            return fixCase(lexer, stateMatches[s]); //$Sn\n        }\n        return '';\n    });\n}\n/**\n * Find the tokenizer rules for a specific state (i.e. next action)\n */\nexport function findRules(lexer, inState) {\n    let state = inState;\n    while (state && state.length > 0) {\n        const rules = lexer.tokenizer[state];\n        if (rules) {\n            return rules;\n        }\n        const idx = state.lastIndexOf('.');\n        if (idx < 0) {\n            state = null; // no further parent\n        }\n        else {\n            state = state.substr(0, idx);\n        }\n    }\n    return null;\n}\n/**\n * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\n * This is used during compilation where we may know the defined states\n * but not yet whether the corresponding rules are correct.\n */\nexport function stateExists(lexer, inState) {\n    let state = inState;\n    while (state && state.length > 0) {\n        const exist = lexer.stateNames[state];\n        if (exist) {\n            return true;\n        }\n        const idx = state.lastIndexOf('.');\n        if (idx < 0) {\n            state = null; // no further parent\n        }\n        else {\n            state = state.substr(0, idx);\n        }\n    }\n    return false;\n}\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAgB,CAACC,IAAI,EAAE;EACnC,OAAQC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC;AAC/B;AACA,OAAO,SAASG,aAAa,CAACH,IAAI,EAAE;EAChC,OAAO,CAACD,gBAAgB,CAACC,IAAI,CAAC;AAClC;AACA,OAAO,SAASI,QAAQ,CAACJ,IAAI,EAAE;EAC3B,OAAQ,OAAOA,IAAI,KAAK,QAAQ;AACpC;AACA,OAAO,SAASK,SAAS,CAACL,IAAI,EAAE;EAC5B,OAAO,CAACI,QAAQ,CAACJ,IAAI,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,KAAK,CAACC,CAAC,EAAE;EACrB,OAAQA,CAAC,GAAG,KAAK,GAAG,IAAI;AAC5B;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAO,CAACC,KAAK,EAAEC,GAAG,EAAE;EAChC,OAAQD,KAAK,CAACE,UAAU,IAAID,GAAG,GAAGA,GAAG,CAACE,WAAW,EAAE,GAAGF,GAAG;AAC7D;AACA;AACA;AACA;AACA,OAAO,SAASG,QAAQ,CAACN,CAAC,EAAE;EACxB,OAAOA,CAAC,CAACO,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAG,CAACN,KAAK,EAAEO,GAAG,EAAE;EAC5BC,OAAO,CAACF,GAAG,WAAIN,KAAK,CAACS,UAAU,eAAKF,GAAG,EAAG;AAC9C;AACA;AACA,OAAO,SAASG,WAAW,CAACV,KAAK,EAAEO,GAAG,EAAE;EACpC,OAAO,IAAII,KAAK,WAAIX,KAAK,CAACS,UAAU,eAAKF,GAAG,EAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,iBAAiB,CAACZ,KAAK,EAAEC,GAAG,EAAEY,EAAE,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAC9D,IAAMC,EAAE,GAAG,0CAA0C;EACrD,IAAIC,YAAY,GAAG,IAAI;EACvB,OAAOhB,GAAG,CAACI,OAAO,CAACW,EAAE,EAAE,UAAUE,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,CAAC,EAAExB,CAAC,EAAEyB,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAE;IAC9E,IAAI,CAAC5B,KAAK,CAACuB,MAAM,CAAC,EAAE;MAChB,OAAO,GAAG,CAAC,CAAC;IAChB;;IACA,IAAI,CAACvB,KAAK,CAACwB,IAAI,CAAC,EAAE;MACd,OAAOtB,OAAO,CAACC,KAAK,EAAEa,EAAE,CAAC,CAAC,CAAC;IAC/B;;IACA,IAAI,CAAChB,KAAK,CAACyB,CAAC,CAAC,IAAIA,CAAC,GAAGR,OAAO,CAACY,MAAM,EAAE;MACjC,OAAO3B,OAAO,CAACC,KAAK,EAAEc,OAAO,CAACQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC;;IACA,IAAI,CAACzB,KAAK,CAAC0B,IAAI,CAAC,IAAIvB,KAAK,IAAI,OAAQA,KAAK,CAACuB,IAAI,CAAE,KAAK,QAAQ,EAAE;MAC5D,OAAOvB,KAAK,CAACuB,IAAI,CAAC,CAAC,CAAC;IACxB;;IACA,IAAIN,YAAY,KAAK,IAAI,EAAE;MAAE;MACzBA,YAAY,GAAGF,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC;MAC/BV,YAAY,CAACW,OAAO,CAACb,KAAK,CAAC;IAC/B;IACA,IAAI,CAAClB,KAAK,CAACC,CAAC,CAAC,IAAIA,CAAC,GAAGmB,YAAY,CAACS,MAAM,EAAE;MACtC,OAAO3B,OAAO,CAACC,KAAK,EAAEiB,YAAY,CAACnB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C;;IACA,OAAO,EAAE;EACb,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA,OAAO,SAAS+B,SAAS,CAAC7B,KAAK,EAAE8B,OAAO,EAAE;EACtC,IAAIf,KAAK,GAAGe,OAAO;EACnB,OAAOf,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;IAC9B,IAAMK,KAAK,GAAG/B,KAAK,CAACgC,SAAS,CAACjB,KAAK,CAAC;IACpC,IAAIgB,KAAK,EAAE;MACP,OAAOA,KAAK;IAChB;IACA,IAAME,GAAG,GAAGlB,KAAK,CAACmB,WAAW,CAAC,GAAG,CAAC;IAClC,IAAID,GAAG,GAAG,CAAC,EAAE;MACTlB,KAAK,GAAG,IAAI,CAAC,CAAC;IAClB,CAAC,MACI;MACDA,KAAK,GAAGA,KAAK,CAACoB,MAAM,CAAC,CAAC,EAAEF,GAAG,CAAC;IAChC;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,WAAW,CAACpC,KAAK,EAAE8B,OAAO,EAAE;EACxC,IAAIf,KAAK,GAAGe,OAAO;EACnB,OAAOf,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;IAC9B,IAAMW,KAAK,GAAGrC,KAAK,CAACsC,UAAU,CAACvB,KAAK,CAAC;IACrC,IAAIsB,KAAK,EAAE;MACP,OAAO,IAAI;IACf;IACA,IAAMJ,GAAG,GAAGlB,KAAK,CAACmB,WAAW,CAAC,GAAG,CAAC;IAClC,IAAID,GAAG,GAAG,CAAC,EAAE;MACTlB,KAAK,GAAG,IAAI,CAAC,CAAC;IAClB,CAAC,MACI;MACDA,KAAK,GAAGA,KAAK,CAACoB,MAAM,CAAC,CAAC,EAAEF,GAAG,CAAC;IAChC;EACJ;EACA,OAAO,KAAK;AAChB"}]}