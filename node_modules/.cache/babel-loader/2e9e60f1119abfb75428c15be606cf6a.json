{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","IntervalTimer","timeout","Disposable","dispose","toDisposable","DisposableStore","SimpleWorkerClient","logOnceWebWorkerWarning","DefaultWorkerFactory","Range","ILanguageConfigurationService","EditorSimpleWorker","IModelService","ITextResourceConfigurationService","regExpFlags","isNonEmptyArray","ILogService","StopWatch","canceled","ILanguageFeaturesService","STOP_SYNC_MODEL_DELTA_TIME_MS","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","resource","model","getModel","isTooLargeForSyncing","EditorWorkerService","configurationService","logService","languageConfigurationService","languageFeaturesService","_modelService","_workerManager","_register","WorkerManager","_logService","linkProvider","register","language","hasAccessToAllModels","provideLinks","token","uri","links","withWorker","client","computeLinks","completionProvider","WordBasedCompletionItemProvider","options","range","computedUnicodeHighlights","original","modified","ignoreTrimWhitespace","maxComputationTime","computeDiff","edits","sw","create","computeMoreMinimalEdits","finally","trace","toString","elapsed","race","undefined","up","navigateValueSet","computeWordRanges","workerManager","_debugDisplayName","_configurationService","position","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","push","getModels","candidate","unshift","getLanguageId","wordDefRegExp","getLanguageConfiguration","getWordDefinition","word","getWordAtPosition","replace","fromPositions","lineNumber","startColumn","endColumn","insert","setEndPosition","column","textualSuggest","data","duration","suggestions","words","map","kind","label","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","stopWorkerInterval","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","timeSinceLastWorkerUsedTime","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","modelUrl","resources","forceLargeModels","resourceStr","_beginModelSync","currentTime","toRemove","elapsedTime","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","versionId","getVersionId","toDispose","add","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","EditorWorkerHost","workerClient","_workerClient","method","args","fhr","_disposed","_keepIdleModels","_workerFactory","_worker","_modelManager","Error","err","_getOrCreateWorker","getProxyObject","_getProxy","_getOrCreateModelManager","ensureSyncedResources","_withSyncedResources","computeUnicodeHighlights","leadingWord","wordDef","source","wordDefFlags"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { regExpFlags } from '../../../base/common/strings.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n                    return links && { links };\n                });\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n    }\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n        return this._workerManager.withWorker().then(client => client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime));\n    }\n    computeMoreMinimalEdits(resource, edits) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create(true);\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    navigateValueSet(resource, range, up) {\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    computeWordRanges(resource, range) {\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n    }\n};\nEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    provideCompletionItems(model, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\n            if (!config.wordBasedSuggestions) {\n                return undefined;\n            }\n            const models = [];\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\n                // only current file and only if not too large\n                if (canSyncModel(this._modelService, model.uri)) {\n                    models.push(model.uri);\n                }\n            }\n            else {\n                // either all files or files of same language\n                for (const candidate of this._modelService.getModels()) {\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\n                        continue;\n                    }\n                    if (candidate === model) {\n                        models.unshift(candidate.uri);\n                    }\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                        models.push(candidate.uri);\n                    }\n                }\n            }\n            if (models.length === 0) {\n                return undefined; // File too large, no other files\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const word = model.getWordAtPosition(position);\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\n            const client = yield this._workerManager.withWorker();\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n            if (!data) {\n                return undefined;\n            }\n            return {\n                duration: data.duration,\n                suggestions: data.words.map((word) => {\n                    return {\n                        kind: 18 /* languages.CompletionItemKind.Text */,\n                        label: word,\n                        insertText: word,\n                        range: { insert, replace }\n                    };\n                }),\n            };\n        });\n    }\n}\nclass WorkerManager extends Disposable {\n    constructor(modelService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new IntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n}\nclass EditorModelManager extends Disposable {\n    constructor(proxy, modelService, keepIdleModels) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this._proxyObj = Promise.resolve(this._instance);\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    getProxyObject() {\n        return this._proxyObj;\n    }\n}\nexport class EditorWorkerHost {\n    constructor(workerClient) {\n        this._workerClient = workerClient;\n    }\n    // foreign host request\n    fhr(method, args) {\n        return this._workerClient.fhr(method, args);\n    }\n}\nexport class EditorWorkerClient extends Disposable {\n    constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._workerFactory = new DefaultWorkerFactory(label);\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            }\n        }\n        return this._worker;\n    }\n    _getProxy() {\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            return this._getOrCreateWorker().getProxyObject();\n        });\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    _withSyncedResources(resources, forceLargeModels = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                return Promise.reject(canceled());\n            }\n            return this._getProxy().then((proxy) => {\n                this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n                return proxy;\n            });\n        });\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._withSyncedResources([uri]).then(proxy => {\n            return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n        });\n    }\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n        return this._withSyncedResources([original, modified], /* forceLargeModels */ true).then(proxy => {\n            return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\n        });\n    }\n    computeMoreMinimalEdits(resource, edits) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits);\n        });\n    }\n    computeLinks(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeLinks(resource.toString());\n        });\n    }\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const proxy = yield this._withSyncedResources(resources);\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n        });\n    }\n    computeWordRanges(resource, range) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n        });\n    }\n    navigateValueSet(resource, range, up) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = regExpFlags(wordDefRegExp);\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\n"],"mappings":"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"}]}