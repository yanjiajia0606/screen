{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMveWFuamlhamlhL0Rlc2t0b3Avd29ya3NwYWNlL2F2dWUtZGF0YS1uZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKLyoqCiAqICoqIURvIG5vdCBjb25zdHJ1Y3QgZGlyZWN0bHkhKioKICoKICogKiohT25seSBzdGF0aWMgbWV0aG9kcyBiZWNhdXNlIGl0IGdldHMgc2VyaWFsaXplZCEqKgogKgogKiBUaGlzIHJlcHJlc2VudHMgdGhlICJjYW5vbmljYWwiIHZlcnNpb24gZm9yIGFuIGV4dGVuc2lvbiBpZGVudGlmaWVyLiBFeHRlbnNpb24gaWRzCiAqIGhhdmUgdG8gYmUgY2FzZS1pbnNlbnNpdGl2ZSAoZHVlIHRvIHRoZSBtYXJrZXRwbGFjZSksIGJ1dCB3ZSBtdXN0IGVuc3VyZSBjYXNlCiAqIHByZXNlcnZhdGlvbiBiZWNhdXNlIHRoZSBleHRlbnNpb24gQVBJIGlzIGFscmVhZHkgcHVibGljIGF0IHRoaXMgdGltZS4KICoKICogRm9yIGV4YW1wbGUsIGdpdmVuIGFuIGV4dGVuc2lvbiB3aXRoIHRoZSBwdWJsaXNoZXIgYCJIZWxsbyJgIGFuZCB0aGUgbmFtZSBgIldvcmxkImAsCiAqIGl0cyBjYW5vbmljYWwgZXh0ZW5zaW9uIGlkZW50aWZpZXIgaXMgYCJIZWxsby5Xb3JsZCJgLiBUaGlzIGV4dGVuc2lvbiBjb3VsZCBiZQogKiByZWZlcmVuY2VkIGluIHNvbWUgb3RoZXIgZXh0ZW5zaW9uJ3MgZGVwZW5kZW5jaWVzIHVzaW5nIHRoZSBzdHJpbmcgYCJoZWxsby53b3JsZCJgLgogKgogKiBUbyBtYWtlIG1hdHRlcnMgbW9yZSBjb21wbGljYXRlZCwgYW4gZXh0ZW5zaW9uIGNhbiBvcHRpb25hbGx5IGhhdmUgYW4gVVVJRC4gV2hlbiB0d28KICogZXh0ZW5zaW9ucyBoYXZlIHRoZSBzYW1lIFVVSUQsIHRoZXkgYXJlIGNvbnNpZGVyZWQgZXF1YWwgZXZlbiBpZiB0aGVpciBpZGVudGlmaWVyIGlzIGRpZmZlcmVudC4KICovCmV4cG9ydCB2YXIgRXh0ZW5zaW9uSWRlbnRpZmllciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gRXh0ZW5zaW9uSWRlbnRpZmllcih2YWx1ZSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV4dGVuc2lvbklkZW50aWZpZXIpOwogICAgdGhpcy52YWx1ZSA9IHZhbHVlOwogICAgdGhpcy5fbG93ZXIgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpOwogIH0KICAvKioKICAgKiBHaXZlcyB0aGUgdmFsdWUgYnkgd2hpY2ggdG8gaW5kZXggKGZvciBlcXVhbGl0eSkuCiAgICovCiAgX2NyZWF0ZUNsYXNzKEV4dGVuc2lvbklkZW50aWZpZXIsIG51bGwsIFt7CiAgICBrZXk6ICJ0b0tleSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdG9LZXkoaWQpIHsKICAgICAgaWYgKHR5cGVvZiBpZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gaWQudG9Mb3dlckNhc2UoKTsKICAgICAgfQogICAgICByZXR1cm4gaWQuX2xvd2VyOwogICAgfQogIH1dKTsKICByZXR1cm4gRXh0ZW5zaW9uSWRlbnRpZmllcjsKfSgpOw=="},{"version":3,"names":["ExtensionIdentifier","value","_lower","toLowerCase","id"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js"],"sourcesContent":["/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaA,mBAAmB;EAC5B,6BAAYC,KAAK,EAAE;IAAA;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGD,KAAK,CAACE,WAAW,EAAE;EACrC;EACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,eAAaC,EAAE,EAAE;MACb,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;QACxB,OAAOA,EAAE,CAACD,WAAW,EAAE;MAC3B;MACA,OAAOC,EAAE,CAACF,MAAM;IACpB;EAAC;EAAA;AAAA"}]}