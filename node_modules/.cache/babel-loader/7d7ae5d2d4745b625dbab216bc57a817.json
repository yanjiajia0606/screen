{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseTokensStore.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseTokensStore.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["arrays","LineTokens","SparseTokensStore","languageIdCodec","_pieces","_isComplete","_languageIdCodec","length","pieces","isComplete","_range","range","_firstRange","getRange","_lastRange","plusRange","insertPosition","i","len","piece","endLineNumber","startLineNumber","index","removeTokens","isEmpty","splice","split","a","b","arrayInsert","lineNumber","aTokens","getLineContent","pieceIndex","_findFirstPieceWithLine","bTokens","getLineTokens","aLen","getCount","bLen","aIndex","result","resultLen","lastEndOffset","emitToken","endOffset","metadata","bIndex","bStartCharacter","getStartCharacter","bEndCharacter","getEndCharacter","bMetadata","getMetadata","bMask","aMask","getEndOffset","getStartOffset","aMergeIndex","Math","min","max","Uint32Array","eolCount","firstLineLength","lastLineLength","firstCharCode","acceptEdit","low","high","mid","floor"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseTokensStore.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { LineTokens } from './lineTokens.js';\n/**\n * Represents sparse tokens in a text model.\n */\nexport class SparseTokensStore {\n    constructor(languageIdCodec) {\n        this._pieces = [];\n        this._isComplete = false;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._pieces = [];\n        this._isComplete = false;\n    }\n    isEmpty() {\n        return (this._pieces.length === 0);\n    }\n    set(pieces, isComplete) {\n        this._pieces = pieces || [];\n        this._isComplete = isComplete;\n    }\n    setPartial(_range, pieces) {\n        // console.log(`setPartial ${_range} ${pieces.map(p => p.toString()).join(', ')}`);\n        let range = _range;\n        if (pieces.length > 0) {\n            const _firstRange = pieces[0].getRange();\n            const _lastRange = pieces[pieces.length - 1].getRange();\n            if (!_firstRange || !_lastRange) {\n                return _range;\n            }\n            range = _range.plusRange(_firstRange).plusRange(_lastRange);\n        }\n        let insertPosition = null;\n        for (let i = 0, len = this._pieces.length; i < len; i++) {\n            const piece = this._pieces[i];\n            if (piece.endLineNumber < range.startLineNumber) {\n                // this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // this piece is after the range, so mark the spot before this piece\n                // as a good insertion position and stop looping\n                insertPosition = insertPosition || { index: i };\n                break;\n            }\n            // this piece might intersect with the range\n            piece.removeTokens(range);\n            if (piece.isEmpty()) {\n                // remove the piece if it became empty\n                this._pieces.splice(i, 1);\n                i--;\n                len--;\n                continue;\n            }\n            if (piece.endLineNumber < range.startLineNumber) {\n                // after removal, this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // after removal, this piece is after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            // after removal, this piece contains the range\n            const [a, b] = piece.split(range);\n            if (a.isEmpty()) {\n                // this piece is actually after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            if (b.isEmpty()) {\n                // this piece is actually before the range\n                continue;\n            }\n            this._pieces.splice(i, 1, a, b);\n            i++;\n            len++;\n            insertPosition = insertPosition || { index: i };\n        }\n        insertPosition = insertPosition || { index: this._pieces.length };\n        if (pieces.length > 0) {\n            this._pieces = arrays.arrayInsert(this._pieces, insertPosition.index, pieces);\n        }\n        // console.log(`I HAVE ${this._pieces.length} pieces`);\n        // console.log(`${this._pieces.map(p => p.toString()).join('\\n')}`);\n        return range;\n    }\n    isComplete() {\n        return this._isComplete;\n    }\n    addSparseTokens(lineNumber, aTokens) {\n        if (aTokens.getLineContent().length === 0) {\n            // Don't do anything for empty lines\n            return aTokens;\n        }\n        const pieces = this._pieces;\n        if (pieces.length === 0) {\n            return aTokens;\n        }\n        const pieceIndex = SparseTokensStore._findFirstPieceWithLine(pieces, lineNumber);\n        const bTokens = pieces[pieceIndex].getLineTokens(lineNumber);\n        if (!bTokens) {\n            return aTokens;\n        }\n        const aLen = aTokens.getCount();\n        const bLen = bTokens.getCount();\n        let aIndex = 0;\n        const result = [];\n        let resultLen = 0;\n        let lastEndOffset = 0;\n        const emitToken = (endOffset, metadata) => {\n            if (endOffset === lastEndOffset) {\n                return;\n            }\n            lastEndOffset = endOffset;\n            result[resultLen++] = endOffset;\n            result[resultLen++] = metadata;\n        };\n        for (let bIndex = 0; bIndex < bLen; bIndex++) {\n            const bStartCharacter = bTokens.getStartCharacter(bIndex);\n            const bEndCharacter = bTokens.getEndCharacter(bIndex);\n            const bMetadata = bTokens.getMetadata(bIndex);\n            const bMask = (((bMetadata & 1 /* MetadataConsts.SEMANTIC_USE_ITALIC */) ? 2048 /* MetadataConsts.ITALIC_MASK */ : 0)\n                | ((bMetadata & 2 /* MetadataConsts.SEMANTIC_USE_BOLD */) ? 4096 /* MetadataConsts.BOLD_MASK */ : 0)\n                | ((bMetadata & 4 /* MetadataConsts.SEMANTIC_USE_UNDERLINE */) ? 8192 /* MetadataConsts.UNDERLINE_MASK */ : 0)\n                | ((bMetadata & 8 /* MetadataConsts.SEMANTIC_USE_STRIKETHROUGH */) ? 16384 /* MetadataConsts.STRIKETHROUGH_MASK */ : 0)\n                | ((bMetadata & 16 /* MetadataConsts.SEMANTIC_USE_FOREGROUND */) ? 16744448 /* MetadataConsts.FOREGROUND_MASK */ : 0)\n                | ((bMetadata & 32 /* MetadataConsts.SEMANTIC_USE_BACKGROUND */) ? 4278190080 /* MetadataConsts.BACKGROUND_MASK */ : 0)) >>> 0;\n            const aMask = (~bMask) >>> 0;\n            // push any token from `a` that is before `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) <= bStartCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n                aIndex++;\n            }\n            // push the token from `a` if it intersects the token from `b`\n            if (aIndex < aLen && aTokens.getStartOffset(aIndex) < bStartCharacter) {\n                emitToken(bStartCharacter, aTokens.getMetadata(aIndex));\n            }\n            // skip any tokens from `a` that are contained inside `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) < bEndCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                aIndex++;\n            }\n            if (aIndex < aLen) {\n                emitToken(bEndCharacter, (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                if (aTokens.getEndOffset(aIndex) === bEndCharacter) {\n                    // `a` ends exactly at the same spot as `b`!\n                    aIndex++;\n                }\n            }\n            else {\n                const aMergeIndex = Math.min(Math.max(0, aIndex - 1), aLen - 1);\n                // push the token from `b`\n                emitToken(bEndCharacter, (aTokens.getMetadata(aMergeIndex) & aMask) | (bMetadata & bMask));\n            }\n        }\n        // push the remaining tokens from `a`\n        while (aIndex < aLen) {\n            emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n            aIndex++;\n        }\n        return new LineTokens(new Uint32Array(result), aTokens.getLineContent(), this._languageIdCodec);\n    }\n    static _findFirstPieceWithLine(pieces, lineNumber) {\n        let low = 0;\n        let high = pieces.length - 1;\n        while (low < high) {\n            let mid = low + Math.floor((high - low) / 2);\n            if (pieces[mid].endLineNumber < lineNumber) {\n                low = mid + 1;\n            }\n            else if (pieces[mid].startLineNumber > lineNumber) {\n                high = mid - 1;\n            }\n            else {\n                while (mid > low && pieces[mid - 1].startLineNumber <= lineNumber && lineNumber <= pieces[mid - 1].endLineNumber) {\n                    mid--;\n                }\n                return mid;\n            }\n        }\n        return low;\n    }\n    acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        for (const piece of this._pieces) {\n            piece.acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode);\n        }\n    }\n}\n"],"mappings":"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"}]}