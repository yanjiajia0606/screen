{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isSafari","isWebkitWebView","$","addDisposableListener","DeferredPromise","Disposable","ILayoutService","ILogService","BrowserClipboardService","layoutService","logService","mapTextToType","Map","findText","resources","installWebKitWriteTextWorkaround","handler","currentWritePromise","webKitPendingClipboardWritePromise","isSettled","cancel","navigator","clipboard","write","ClipboardItem","p","catch","err","Error","name","isRejected","error","hasContainer","_register","container","text","type","set","complete","writeText","console","activeElement","document","textArea","body","appendChild","style","height","width","position","focus","select","execCommand","HTMLElement","removeChild","get","readText"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = [];\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n    readResources() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resources;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n"],"mappings":"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"}]}