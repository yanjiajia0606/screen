{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveOperations.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveOperations.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SingleCursorState","CursorColumns","Position","Range","strings","AtomicTabMoveOperations","CursorPosition","lineNumber","column","leftoverVisibleColumns","_cursorPositionBrand","undefined","MoveOperations","model","position","getLineMinColumn","delta","prevCharLength","getLineContent","newLineNumber","getLineMaxColumn","tabSize","getLineIndentColumn","minColumn","lineContent","newPosition","atomicPosition","leftPosition","config","pos","stickyTabStops","leftPositionAtomicSoftTabs","cursor","inSelectionMode","noOfColumns","hasSelection","selection","startLineNumber","startColumn","normalizedPos","normalizePosition","clipPositionColumn","p","left","move","clipRange","value","min","max","nextCharLength","getLineCount","indentSize","rightPosition","rightPositionAtomicSoftTabs","endLineNumber","endColumn","r","right","allowMoveOnEdgeLine","normalizationAffinity","currentVisibleColumn","visibleColumnFromColumn","lineCount","wasOnFirstPosition","wasOnLastPosition","wasAtEdgePosition","Math","columnFromVisibleColumn","count","allowMoveOnLastLine","vertical","linesCount","down","selectionStart","selectionStartLineNumber","selectionStartColumn","selectionStartLeftoverVisibleColumns","positionLineNumber","positionColumn","allowMoveOnFirstLine","up","getLineFirstNonWhitespaceColumn","_isBlankLine","firstNonBlankColumn","relevantColumnNumber","sticky","maxColumn","lastLineNumber","lastColumn"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorMoveOperations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SingleCursorState } from '../cursorCommon.js';\nimport { CursorColumns } from '../core/cursorColumns.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { AtomicTabMoveOperations } from './cursorAtomicMoveOperations.js';\nexport class CursorPosition {\n    constructor(lineNumber, column, leftoverVisibleColumns) {\n        this._cursorPositionBrand = undefined;\n        this.lineNumber = lineNumber;\n        this.column = column;\n        this.leftoverVisibleColumns = leftoverVisibleColumns;\n    }\n}\nexport class MoveOperations {\n    static leftPosition(model, position) {\n        if (position.column > model.getLineMinColumn(position.lineNumber)) {\n            return position.delta(undefined, -strings.prevCharLength(model.getLineContent(position.lineNumber), position.column - 1));\n        }\n        else if (position.lineNumber > 1) {\n            const newLineNumber = position.lineNumber - 1;\n            return new Position(newLineNumber, model.getLineMaxColumn(newLineNumber));\n        }\n        else {\n            return position;\n        }\n    }\n    static leftPositionAtomicSoftTabs(model, position, tabSize) {\n        if (position.column <= model.getLineIndentColumn(position.lineNumber)) {\n            const minColumn = model.getLineMinColumn(position.lineNumber);\n            const lineContent = model.getLineContent(position.lineNumber);\n            const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 0 /* Direction.Left */);\n            if (newPosition !== -1 && newPosition + 1 >= minColumn) {\n                return new Position(position.lineNumber, newPosition + 1);\n            }\n        }\n        return this.leftPosition(model, position);\n    }\n    static left(config, model, position) {\n        const pos = config.stickyTabStops\n            ? MoveOperations.leftPositionAtomicSoftTabs(model, position, config.tabSize)\n            : MoveOperations.leftPosition(model, position);\n        return new CursorPosition(pos.lineNumber, pos.column, 0);\n    }\n    /**\n     * @param noOfColumns Must be either `1`\n     * or `Math.round(viewModel.getLineContent(viewLineNumber).length / 2)` (for half lines).\n    */\n    static moveLeft(config, model, cursor, inSelectionMode, noOfColumns) {\n        let lineNumber, column;\n        if (cursor.hasSelection() && !inSelectionMode) {\n            // If the user has a selection and does not want to extend it,\n            // put the cursor at the beginning of the selection.\n            lineNumber = cursor.selection.startLineNumber;\n            column = cursor.selection.startColumn;\n        }\n        else {\n            // This has no effect if noOfColumns === 1.\n            // It is ok to do so in the half-line scenario.\n            const pos = cursor.position.delta(undefined, -(noOfColumns - 1));\n            // We clip the position before normalization, as normalization is not defined\n            // for possibly negative columns.\n            const normalizedPos = model.normalizePosition(MoveOperations.clipPositionColumn(pos, model), 0 /* PositionAffinity.Left */);\n            const p = MoveOperations.left(config, model, normalizedPos);\n            lineNumber = p.lineNumber;\n            column = p.column;\n        }\n        return cursor.move(inSelectionMode, lineNumber, column, 0);\n    }\n    /**\n     * Adjusts the column so that it is within min/max of the line.\n    */\n    static clipPositionColumn(position, model) {\n        return new Position(position.lineNumber, MoveOperations.clipRange(position.column, model.getLineMinColumn(position.lineNumber), model.getLineMaxColumn(position.lineNumber)));\n    }\n    static clipRange(value, min, max) {\n        if (value < min) {\n            return min;\n        }\n        if (value > max) {\n            return max;\n        }\n        return value;\n    }\n    static rightPosition(model, lineNumber, column) {\n        if (column < model.getLineMaxColumn(lineNumber)) {\n            column = column + strings.nextCharLength(model.getLineContent(lineNumber), column - 1);\n        }\n        else if (lineNumber < model.getLineCount()) {\n            lineNumber = lineNumber + 1;\n            column = model.getLineMinColumn(lineNumber);\n        }\n        return new Position(lineNumber, column);\n    }\n    static rightPositionAtomicSoftTabs(model, lineNumber, column, tabSize, indentSize) {\n        if (column < model.getLineIndentColumn(lineNumber)) {\n            const lineContent = model.getLineContent(lineNumber);\n            const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, column - 1, tabSize, 1 /* Direction.Right */);\n            if (newPosition !== -1) {\n                return new Position(lineNumber, newPosition + 1);\n            }\n        }\n        return this.rightPosition(model, lineNumber, column);\n    }\n    static right(config, model, position) {\n        const pos = config.stickyTabStops\n            ? MoveOperations.rightPositionAtomicSoftTabs(model, position.lineNumber, position.column, config.tabSize, config.indentSize)\n            : MoveOperations.rightPosition(model, position.lineNumber, position.column);\n        return new CursorPosition(pos.lineNumber, pos.column, 0);\n    }\n    static moveRight(config, model, cursor, inSelectionMode, noOfColumns) {\n        let lineNumber, column;\n        if (cursor.hasSelection() && !inSelectionMode) {\n            // If we are in selection mode, move right without selection cancels selection and puts cursor at the end of the selection\n            lineNumber = cursor.selection.endLineNumber;\n            column = cursor.selection.endColumn;\n        }\n        else {\n            const pos = cursor.position.delta(undefined, noOfColumns - 1);\n            const normalizedPos = model.normalizePosition(MoveOperations.clipPositionColumn(pos, model), 1 /* PositionAffinity.Right */);\n            const r = MoveOperations.right(config, model, normalizedPos);\n            lineNumber = r.lineNumber;\n            column = r.column;\n        }\n        return cursor.move(inSelectionMode, lineNumber, column, 0);\n    }\n    static vertical(config, model, lineNumber, column, leftoverVisibleColumns, newLineNumber, allowMoveOnEdgeLine, normalizationAffinity) {\n        const currentVisibleColumn = CursorColumns.visibleColumnFromColumn(model.getLineContent(lineNumber), column, config.tabSize) + leftoverVisibleColumns;\n        const lineCount = model.getLineCount();\n        const wasOnFirstPosition = (lineNumber === 1 && column === 1);\n        const wasOnLastPosition = (lineNumber === lineCount && column === model.getLineMaxColumn(lineNumber));\n        const wasAtEdgePosition = (newLineNumber < lineNumber ? wasOnFirstPosition : wasOnLastPosition);\n        lineNumber = newLineNumber;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            if (allowMoveOnEdgeLine) {\n                column = model.getLineMinColumn(lineNumber);\n            }\n            else {\n                column = Math.min(model.getLineMaxColumn(lineNumber), column);\n            }\n        }\n        else if (lineNumber > lineCount) {\n            lineNumber = lineCount;\n            if (allowMoveOnEdgeLine) {\n                column = model.getLineMaxColumn(lineNumber);\n            }\n            else {\n                column = Math.min(model.getLineMaxColumn(lineNumber), column);\n            }\n        }\n        else {\n            column = config.columnFromVisibleColumn(model, lineNumber, currentVisibleColumn);\n        }\n        if (wasAtEdgePosition) {\n            leftoverVisibleColumns = 0;\n        }\n        else {\n            leftoverVisibleColumns = currentVisibleColumn - CursorColumns.visibleColumnFromColumn(model.getLineContent(lineNumber), column, config.tabSize);\n        }\n        if (normalizationAffinity !== undefined) {\n            const position = new Position(lineNumber, column);\n            const newPosition = model.normalizePosition(position, normalizationAffinity);\n            leftoverVisibleColumns = leftoverVisibleColumns + (column - newPosition.column);\n            lineNumber = newPosition.lineNumber;\n            column = newPosition.column;\n        }\n        return new CursorPosition(lineNumber, column, leftoverVisibleColumns);\n    }\n    static down(config, model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnLastLine) {\n        return this.vertical(config, model, lineNumber, column, leftoverVisibleColumns, lineNumber + count, allowMoveOnLastLine, 4 /* PositionAffinity.RightOfInjectedText */);\n    }\n    static moveDown(config, model, cursor, inSelectionMode, linesCount) {\n        let lineNumber, column;\n        if (cursor.hasSelection() && !inSelectionMode) {\n            // If we are in selection mode, move down acts relative to the end of selection\n            lineNumber = cursor.selection.endLineNumber;\n            column = cursor.selection.endColumn;\n        }\n        else {\n            lineNumber = cursor.position.lineNumber;\n            column = cursor.position.column;\n        }\n        const r = MoveOperations.down(config, model, lineNumber, column, cursor.leftoverVisibleColumns, linesCount, true);\n        return cursor.move(inSelectionMode, r.lineNumber, r.column, r.leftoverVisibleColumns);\n    }\n    static translateDown(config, model, cursor) {\n        const selection = cursor.selection;\n        const selectionStart = MoveOperations.down(config, model, selection.selectionStartLineNumber, selection.selectionStartColumn, cursor.selectionStartLeftoverVisibleColumns, 1, false);\n        const position = MoveOperations.down(config, model, selection.positionLineNumber, selection.positionColumn, cursor.leftoverVisibleColumns, 1, false);\n        return new SingleCursorState(new Range(selectionStart.lineNumber, selectionStart.column, selectionStart.lineNumber, selectionStart.column), selectionStart.leftoverVisibleColumns, new Position(position.lineNumber, position.column), position.leftoverVisibleColumns);\n    }\n    static up(config, model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnFirstLine) {\n        return this.vertical(config, model, lineNumber, column, leftoverVisibleColumns, lineNumber - count, allowMoveOnFirstLine, 3 /* PositionAffinity.LeftOfInjectedText */);\n    }\n    static moveUp(config, model, cursor, inSelectionMode, linesCount) {\n        let lineNumber, column;\n        if (cursor.hasSelection() && !inSelectionMode) {\n            // If we are in selection mode, move up acts relative to the beginning of selection\n            lineNumber = cursor.selection.startLineNumber;\n            column = cursor.selection.startColumn;\n        }\n        else {\n            lineNumber = cursor.position.lineNumber;\n            column = cursor.position.column;\n        }\n        const r = MoveOperations.up(config, model, lineNumber, column, cursor.leftoverVisibleColumns, linesCount, true);\n        return cursor.move(inSelectionMode, r.lineNumber, r.column, r.leftoverVisibleColumns);\n    }\n    static translateUp(config, model, cursor) {\n        const selection = cursor.selection;\n        const selectionStart = MoveOperations.up(config, model, selection.selectionStartLineNumber, selection.selectionStartColumn, cursor.selectionStartLeftoverVisibleColumns, 1, false);\n        const position = MoveOperations.up(config, model, selection.positionLineNumber, selection.positionColumn, cursor.leftoverVisibleColumns, 1, false);\n        return new SingleCursorState(new Range(selectionStart.lineNumber, selectionStart.column, selectionStart.lineNumber, selectionStart.column), selectionStart.leftoverVisibleColumns, new Position(position.lineNumber, position.column), position.leftoverVisibleColumns);\n    }\n    static _isBlankLine(model, lineNumber) {\n        if (model.getLineFirstNonWhitespaceColumn(lineNumber) === 0) {\n            // empty or contains only whitespace\n            return true;\n        }\n        return false;\n    }\n    static moveToPrevBlankLine(config, model, cursor, inSelectionMode) {\n        let lineNumber = cursor.position.lineNumber;\n        // If our current line is blank, move to the previous non-blank line\n        while (lineNumber > 1 && this._isBlankLine(model, lineNumber)) {\n            lineNumber--;\n        }\n        // Find the previous blank line\n        while (lineNumber > 1 && !this._isBlankLine(model, lineNumber)) {\n            lineNumber--;\n        }\n        return cursor.move(inSelectionMode, lineNumber, model.getLineMinColumn(lineNumber), 0);\n    }\n    static moveToNextBlankLine(config, model, cursor, inSelectionMode) {\n        const lineCount = model.getLineCount();\n        let lineNumber = cursor.position.lineNumber;\n        // If our current line is blank, move to the next non-blank line\n        while (lineNumber < lineCount && this._isBlankLine(model, lineNumber)) {\n            lineNumber++;\n        }\n        // Find the next blank line\n        while (lineNumber < lineCount && !this._isBlankLine(model, lineNumber)) {\n            lineNumber++;\n        }\n        return cursor.move(inSelectionMode, lineNumber, model.getLineMinColumn(lineNumber), 0);\n    }\n    static moveToBeginningOfLine(config, model, cursor, inSelectionMode) {\n        const lineNumber = cursor.position.lineNumber;\n        const minColumn = model.getLineMinColumn(lineNumber);\n        const firstNonBlankColumn = model.getLineFirstNonWhitespaceColumn(lineNumber) || minColumn;\n        let column;\n        const relevantColumnNumber = cursor.position.column;\n        if (relevantColumnNumber === firstNonBlankColumn) {\n            column = minColumn;\n        }\n        else {\n            column = firstNonBlankColumn;\n        }\n        return cursor.move(inSelectionMode, lineNumber, column, 0);\n    }\n    static moveToEndOfLine(config, model, cursor, inSelectionMode, sticky) {\n        const lineNumber = cursor.position.lineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return cursor.move(inSelectionMode, lineNumber, maxColumn, sticky ? 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */ - maxColumn : 0);\n    }\n    static moveToBeginningOfBuffer(config, model, cursor, inSelectionMode) {\n        return cursor.move(inSelectionMode, 1, 1, 0);\n    }\n    static moveToEndOfBuffer(config, model, cursor, inSelectionMode) {\n        const lastLineNumber = model.getLineCount();\n        const lastColumn = model.getLineMaxColumn(lastLineNumber);\n        return cursor.move(inSelectionMode, lastLineNumber, lastColumn, 0);\n    }\n}\n"],"mappings":"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"}]}