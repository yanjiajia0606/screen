{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RunOnceScheduler","Emitter","DisposableStore","IMenuService","isIMenuItem","MenuItemAction","MenuRegistry","SubmenuItemAction","ICommandService","IContextKeyService","toAction","IStorageService","removeFastWithoutKeepingOrder","localize","MenuService","_commandService","storageService","_hiddenStates","PersistedMenuHideState","id","contextKeyService","options","Menu","assign","emitEventsForSubmenuChanges","eventDebounceDelay","_storageService","_disposables","_onDidChange","onDidChange","event","_ignoreChangeEvent","raw","get","_key","_data","JSON","parse","err","create","add","onDidChangeValue","e","console","log","fire","dispose","menu","commandId","_a","_b","includes","hidden","entries","idx","indexOf","push","_persist","stringify","store","_id","_options","_contextKeyService","_menuService","_menuGroups","_contextKeys","Set","_build","rebuildMenuSoon","onDidChangeMenu","has","schedule","lazyListener","startLazyListener","fireChangeSoon","onDidChangeContext","affectsSome","onFirstListenerAdd","onLastListenerRemove","clear","bind","menuItems","getMenuItems","group","sort","_compareMenuItems","item","groupName","_collectContextKeys","_fillInKbExprKeys","when","command","precondition","toggled","toggledExpression","condition","submenu","forEach","result","allToggleActions","items","toggleActions","activeActions","contextMatchesRules","action","isMenuItem","menuHide","createMenuHide","alt","actions","undefined","exp","set","keys","a","b","aGroup","bGroup","value","localeCompare","aPrio","order","bPrio","_compareTitles","title","aStr","original","bStr","states","hide","label","run","updateHidden","toggle","checked","isHidden","newValue"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IMenuService, isIMenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, storageService) {\n        this._commandService = _commandService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new Menu(id, this._hiddenStates, Object.assign({ emitEventsForSubmenuChanges: false, eventDebounceDelay: 50 }, options), this._commandService, contextKeyService, this);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        try {\n            const raw = _storageService.get(PersistedMenuHideState._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(e => {\n            if (e.key !== PersistedMenuHideState._key) {\n                return;\n            }\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        return (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet Menu = class Menu {\n    constructor(_id, _hiddenStates, _options, _commandService, _contextKeyService, _menuService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._options = _options;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this._disposables = new DisposableStore();\n        this._menuGroups = [];\n        this._contextKeys = new Set();\n        this._build();\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._build();\n            this._onDidChange.fire(this);\n        }, _options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(_id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const startLazyListener = () => {\n            const fireChangeSoon = new RunOnceScheduler(() => this._onDidChange.fire(this), _options.eventDebounceDelay);\n            lazyListener.add(fireChangeSoon);\n            lazyListener.add(_contextKeyService.onDidChangeContext(e => {\n                if (e.affectsSome(this._contextKeys)) {\n                    fireChangeSoon.schedule();\n                }\n            }));\n            lazyListener.add(_hiddenStates.onDidChange(() => {\n                fireChangeSoon.schedule();\n            }));\n        };\n        this._onDidChange = new Emitter({\n            // start/stop context key listener\n            onFirstListenerAdd: startLazyListener,\n            onLastListenerRemove: lazyListener.clear.bind(lazyListener)\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n    _build() {\n        // reset\n        this._menuGroups.length = 0;\n        this._contextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(Menu._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        Menu._fillInKbExprKeys(item.when, this._contextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                Menu._fillInKbExprKeys(toggledExpression, this._contextKeys);\n            }\n        }\n        else if (this._options.emitEventsForSubmenuChanges) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    getActions(options) {\n        const result = [];\n        const allToggleActions = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const toggleActions = [];\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    let action;\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        const menuHide = createMenuHide(this._id, item.command, this._hiddenStates);\n                        action = new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService);\n                    }\n                    else {\n                        action = new SubmenuItemAction(item, this._menuService, this._contextKeyService, options);\n                        if (action.actions.length === 0) {\n                            action.dispose();\n                            action = undefined;\n                        }\n                    }\n                    if (action) {\n                        activeActions.push(action);\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n            if (toggleActions.length > 0) {\n                allToggleActions.push(toggleActions);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return Menu._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenu = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService),\n    __param(5, IMenuService)\n], Menu);\nfunction createMenuHide(menu, command, states) {\n    const id = `${menu.id}/${command.id}`;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, command.id, true); }\n    });\n    const toggle = toAction({\n        id,\n        label: title,\n        get checked() { return !states.isHidden(menu, command.id); },\n        run() {\n            const newValue = !states.isHidden(menu, command.id);\n            states.updateHidden(menu, command.id, newValue);\n        }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\n"],"mappings":"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"}]}