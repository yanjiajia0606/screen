{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rangeMap.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rangeMap.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Range","groupIntersect","range","groups","result","r","start","end","intersection","intersect","isEmpty","push","size","shift","much","consolidate","previousGroup","group","concat","reduce","g","RangeMap","_size","index","deleteCount","items","diff","length","before","after","Number","POSITIVE_INFINITY","map","middle","item","i","t","len","position","count","newSize","Math","floor","min","indexAt","groupCount","newCount"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rangeMap.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/range.js';\n/**\n * Returns the intersection between a ranged group and a range.\n * Returns `[]` if the intersection is empty.\n */\nexport function groupIntersect(range, groups) {\n    const result = [];\n    for (const r of groups) {\n        if (range.start >= r.range.end) {\n            continue;\n        }\n        if (range.end < r.range.start) {\n            break;\n        }\n        const intersection = Range.intersect(range, r.range);\n        if (Range.isEmpty(intersection)) {\n            continue;\n        }\n        result.push({\n            range: intersection,\n            size: r.size\n        });\n    }\n    return result;\n}\n/**\n * Shifts a range by that `much`.\n */\nexport function shift({ start, end }, much) {\n    return { start: start + much, end: end + much };\n}\n/**\n * Consolidates a collection of ranged groups.\n *\n * Consolidation is the process of merging consecutive ranged groups\n * that share the same `size`.\n */\nexport function consolidate(groups) {\n    const result = [];\n    let previousGroup = null;\n    for (const group of groups) {\n        const start = group.range.start;\n        const end = group.range.end;\n        const size = group.size;\n        if (previousGroup && size === previousGroup.size) {\n            previousGroup.range.end = end;\n            continue;\n        }\n        previousGroup = { range: { start, end }, size };\n        result.push(previousGroup);\n    }\n    return result;\n}\n/**\n * Concatenates several collections of ranged groups into a single\n * collection.\n */\nfunction concat(...groups) {\n    return consolidate(groups.reduce((r, g) => r.concat(g), []));\n}\nexport class RangeMap {\n    constructor() {\n        this.groups = [];\n        this._size = 0;\n    }\n    splice(index, deleteCount, items = []) {\n        const diff = items.length - deleteCount;\n        const before = groupIntersect({ start: 0, end: index }, this.groups);\n        const after = groupIntersect({ start: index + deleteCount, end: Number.POSITIVE_INFINITY }, this.groups)\n            .map(g => ({ range: shift(g.range, diff), size: g.size }));\n        const middle = items.map((item, i) => ({\n            range: { start: index + i, end: index + i + 1 },\n            size: item.size\n        }));\n        this.groups = concat(before, middle, after);\n        this._size = this.groups.reduce((t, g) => t + (g.size * (g.range.end - g.range.start)), 0);\n    }\n    /**\n     * Returns the number of items in the range map.\n     */\n    get count() {\n        const len = this.groups.length;\n        if (!len) {\n            return 0;\n        }\n        return this.groups[len - 1].range.end;\n    }\n    /**\n     * Returns the sum of the sizes of all items in the range map.\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Returns the index of the item at the given position.\n     */\n    indexAt(position) {\n        if (position < 0) {\n            return -1;\n        }\n        let index = 0;\n        let size = 0;\n        for (const group of this.groups) {\n            const count = group.range.end - group.range.start;\n            const newSize = size + (count * group.size);\n            if (position < newSize) {\n                return index + Math.floor((position - size) / group.size);\n            }\n            index += count;\n            size = newSize;\n        }\n        return index;\n    }\n    /**\n     * Returns the index of the item right after the item at the\n     * index of the given position.\n     */\n    indexAfter(position) {\n        return Math.min(this.indexAt(position) + 1, this.count);\n    }\n    /**\n     * Returns the start position of the item at the given index.\n     */\n    positionAt(index) {\n        if (index < 0) {\n            return -1;\n        }\n        let position = 0;\n        let count = 0;\n        for (const group of this.groups) {\n            const groupCount = group.range.end - group.range.start;\n            const newCount = count + groupCount;\n            if (index < newCount) {\n                return position + ((index - count) * group.size);\n            }\n            position += groupCount * group.size;\n            count = newCount;\n        }\n        return -1;\n    }\n}\n"],"mappings":"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"}]}