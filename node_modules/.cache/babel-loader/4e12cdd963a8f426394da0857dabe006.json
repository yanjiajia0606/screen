{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isFalsyOrEmpty","isNonEmptyArray","DebounceEmitter","Iterable","ResourceMap","Schemas","URI","MarkerSeverity","DoubleResourceMap","_byResource","_byOwner","Map","resource","owner","value","ownerMap","get","set","resourceMap","removedA","removedB","delete","Error","key","_a","_b","_c","_d","values","empty","isUri","map","concat","MarkerStats","service","errors","infos","warnings","unknowns","_data","_service","_subscription","onMarkerChanged","_update","dispose","resources","oldStats","_substract","newStats","_resourceStats","_add","result","scheme","inMemory","walkThrough","walkThroughSnippet","vscodeSourceControl","read","severity","Warning","Info","op","MarkerService","_onMarkerChanged","delay","merge","_merge","event","_stats","changeOne","markerData","removed","fire","markers","data","marker","_toMarker","push","changes","existing","first","groups","array","length","filter","Object","create","severities","take","_accept","newLen","iterable","code","message","source","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","undefined","all","item","Array","from","keys"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nclass DoubleResourceMap {\n    constructor() {\n        this._byResource = new ResourceMap();\n        this._byOwner = new Map();\n    }\n    set(resource, owner, value) {\n        let ownerMap = this._byResource.get(resource);\n        if (!ownerMap) {\n            ownerMap = new Map();\n            this._byResource.set(resource, ownerMap);\n        }\n        ownerMap.set(owner, value);\n        let resourceMap = this._byOwner.get(owner);\n        if (!resourceMap) {\n            resourceMap = new ResourceMap();\n            this._byOwner.set(owner, resourceMap);\n        }\n        resourceMap.set(resource, value);\n    }\n    get(resource, owner) {\n        const ownerMap = this._byResource.get(resource);\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n    }\n    delete(resource, owner) {\n        let removedA = false;\n        let removedB = false;\n        const ownerMap = this._byResource.get(resource);\n        if (ownerMap) {\n            removedA = ownerMap.delete(owner);\n        }\n        const resourceMap = this._byOwner.get(owner);\n        if (resourceMap) {\n            removedB = resourceMap.delete(resource);\n        }\n        if (removedA !== removedB) {\n            throw new Error('illegal state');\n        }\n        return removedA && removedB;\n    }\n    values(key) {\n        var _a, _b, _c, _d;\n        if (typeof key === 'string') {\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n        }\n        if (URI.isUri(key)) {\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n        }\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n    }\n}\nclass MarkerStats {\n    constructor(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = new ResourceMap();\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    dispose() {\n        this._subscription.dispose();\n    }\n    _update(resources) {\n        for (const resource of resources) {\n            const oldStats = this._data.get(resource);\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            const newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data.set(resource, newStats);\n        }\n    }\n    _resourceStats(resource) {\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet || resource.scheme === Schemas.vscodeSourceControl) {\n            return result;\n        }\n        for (const { severity } of this._service.read({ resource })) {\n            if (severity === MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    }\n    _substract(op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    }\n    _add(op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    }\n}\nexport class MarkerService {\n    constructor() {\n        this._onMarkerChanged = new DebounceEmitter({\n            delay: 0,\n            merge: MarkerService._merge\n        });\n        this.onMarkerChanged = this._onMarkerChanged.event;\n        this._data = new DoubleResourceMap();\n        this._stats = new MarkerStats(this);\n    }\n    dispose() {\n        this._stats.dispose();\n        this._onMarkerChanged.dispose();\n    }\n    remove(owner, resources) {\n        for (const resource of resources || []) {\n            this.changeOne(owner, resource, []);\n        }\n    }\n    changeOne(owner, resource, markerData) {\n        if (isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            const removed = this._data.delete(resource, owner);\n            if (removed) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            const markers = [];\n            for (const data of markerData) {\n                const marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            this._data.set(resource, owner, markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    }\n    static _toMarker(owner, resource, data) {\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource,\n            owner,\n            code,\n            severity,\n            message,\n            source,\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            relatedInformation,\n            tags,\n        };\n    }\n    changeAll(owner, data) {\n        const changes = [];\n        // remove old marker\n        const existing = this._data.values(owner);\n        if (existing) {\n            for (const data of existing) {\n                const first = Iterable.first(data);\n                if (first) {\n                    changes.push(first.resource);\n                    this._data.delete(first.resource, owner);\n                }\n            }\n        }\n        // add new markers\n        if (isNonEmptyArray(data)) {\n            // group by resource\n            const groups = new ResourceMap();\n            for (const { resource, marker: markerData } of data) {\n                const marker = MarkerService._toMarker(owner, resource, markerData);\n                if (!marker) {\n                    // filter bad markers\n                    continue;\n                }\n                const array = groups.get(resource);\n                if (!array) {\n                    groups.set(resource, [marker]);\n                    changes.push(resource);\n                }\n                else {\n                    array.push(marker);\n                }\n            }\n            // insert all\n            for (const [resource, value] of groups) {\n                this._data.set(resource, owner, value);\n            }\n        }\n        if (changes.length > 0) {\n            this._onMarkerChanged.fire(changes);\n        }\n    }\n    read(filter = Object.create(null)) {\n        let { owner, resource, severities, take } = filter;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            const data = this._data.get(resource, owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                const result = [];\n                for (const marker of data) {\n                    if (MarkerService._accept(marker, severities)) {\n                        const newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            const result = [];\n            for (const markers of this._data.values()) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n            const result = [];\n            for (const markers of iterable) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    static _accept(marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n    // --- event debounce logic\n    static _merge(all) {\n        const set = new ResourceMap();\n        for (const array of all) {\n            for (const item of array) {\n                set.set(item, true);\n            }\n        }\n        return Array.from(set.keys());\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,eAAe,QAAQ,gCAAgC;AAChF,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,OAAO,QAAQ,iCAAiC;AACzD,SAASC,GAAG,QAAQ,6BAA6B;AACjD,SAASC,cAAc,QAAQ,cAAc;AAAC,IACxCC,iBAAiB;EACnB,6BAAc;IAAA;IACV,IAAI,CAACC,WAAW,GAAG,IAAIL,WAAW,EAAE;IACpC,IAAI,CAACM,QAAQ,GAAG,IAAIC,GAAG,EAAE;EAC7B;EAAC;IAAA;IAAA,OACD,aAAIC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAE;MACxB,IAAIC,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACO,GAAG,CAACJ,QAAQ,CAAC;MAC7C,IAAI,CAACG,QAAQ,EAAE;QACXA,QAAQ,GAAG,IAAIJ,GAAG,EAAE;QACpB,IAAI,CAACF,WAAW,CAACQ,GAAG,CAACL,QAAQ,EAAEG,QAAQ,CAAC;MAC5C;MACAA,QAAQ,CAACE,GAAG,CAACJ,KAAK,EAAEC,KAAK,CAAC;MAC1B,IAAII,WAAW,GAAG,IAAI,CAACR,QAAQ,CAACM,GAAG,CAACH,KAAK,CAAC;MAC1C,IAAI,CAACK,WAAW,EAAE;QACdA,WAAW,GAAG,IAAId,WAAW,EAAE;QAC/B,IAAI,CAACM,QAAQ,CAACO,GAAG,CAACJ,KAAK,EAAEK,WAAW,CAAC;MACzC;MACAA,WAAW,CAACD,GAAG,CAACL,QAAQ,EAAEE,KAAK,CAAC;IACpC;EAAC;IAAA;IAAA,OACD,aAAIF,QAAQ,EAAEC,KAAK,EAAE;MACjB,IAAME,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACO,GAAG,CAACJ,QAAQ,CAAC;MAC/C,OAAOG,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,GAAG,CAACH,KAAK,CAAC;IAClF;EAAC;IAAA;IAAA,OACD,iBAAOD,QAAQ,EAAEC,KAAK,EAAE;MACpB,IAAIM,QAAQ,GAAG,KAAK;MACpB,IAAIC,QAAQ,GAAG,KAAK;MACpB,IAAML,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACO,GAAG,CAACJ,QAAQ,CAAC;MAC/C,IAAIG,QAAQ,EAAE;QACVI,QAAQ,GAAGJ,QAAQ,CAACM,MAAM,CAACR,KAAK,CAAC;MACrC;MACA,IAAMK,WAAW,GAAG,IAAI,CAACR,QAAQ,CAACM,GAAG,CAACH,KAAK,CAAC;MAC5C,IAAIK,WAAW,EAAE;QACbE,QAAQ,GAAGF,WAAW,CAACG,MAAM,CAACT,QAAQ,CAAC;MAC3C;MACA,IAAIO,QAAQ,KAAKC,QAAQ,EAAE;QACvB,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;MACpC;MACA,OAAOH,QAAQ,IAAIC,QAAQ;IAC/B;EAAC;IAAA;IAAA,OACD,gBAAOG,GAAG,EAAE;MACR,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MAClB,IAAI,OAAOJ,GAAG,KAAK,QAAQ,EAAE;QACzB,OAAO,CAACE,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAACd,QAAQ,CAACM,GAAG,CAACO,GAAG,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,MAAM,EAAE,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGtB,QAAQ,CAAC0B,KAAK,EAAE;MAClJ;MACA,IAAIvB,GAAG,CAACwB,KAAK,CAACP,GAAG,CAAC,EAAE;QAChB,OAAO,CAACI,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAACjB,WAAW,CAACO,GAAG,CAACO,GAAG,CAAC,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,MAAM,EAAE,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGxB,QAAQ,CAAC0B,KAAK,EAAE;MACrJ;MACA,OAAO1B,QAAQ,CAAC4B,GAAG,CAAC5B,QAAQ,CAAC6B,MAAM,OAAf7B,QAAQ,qBAAW,IAAI,CAACO,QAAQ,CAACkB,MAAM,EAAE,EAAC,EAAE,UAAAG,GAAG;QAAA,OAAIA,GAAG,CAAC,CAAC,CAAC;MAAA,EAAC;IAClF;EAAC;EAAA;AAAA;AAAA,IAECE,WAAW;EACb,qBAAYC,OAAO,EAAE;IAAA;IACjB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,KAAK,GAAG,IAAInC,WAAW,EAAE;IAC9B,IAAI,CAACoC,QAAQ,GAAGN,OAAO;IACvB,IAAI,CAACO,aAAa,GAAGP,OAAO,CAACQ,eAAe,CAAC,IAAI,CAACC,OAAO,EAAE,IAAI,CAAC;EACpE;EAAC;IAAA;IAAA,OACD,mBAAU;MACN,IAAI,CAACF,aAAa,CAACG,OAAO,EAAE;IAChC;EAAC;IAAA;IAAA,OACD,iBAAQC,SAAS,EAAE;MAAA,2CACQA,SAAS;QAAA;MAAA;QAAhC,oDAAkC;UAAA,IAAvBjC,QAAQ;UACf,IAAMkC,QAAQ,GAAG,IAAI,CAACP,KAAK,CAACvB,GAAG,CAACJ,QAAQ,CAAC;UACzC,IAAIkC,QAAQ,EAAE;YACV,IAAI,CAACC,UAAU,CAACD,QAAQ,CAAC;UAC7B;UACA,IAAME,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACrC,QAAQ,CAAC;UAC9C,IAAI,CAACsC,IAAI,CAACF,QAAQ,CAAC;UACnB,IAAI,CAACT,KAAK,CAACtB,GAAG,CAACL,QAAQ,EAAEoC,QAAQ,CAAC;QACtC;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;EAAC;IAAA;IAAA,OACD,wBAAepC,QAAQ,EAAE;MACrB,IAAMuC,MAAM,GAAG;QAAEhB,MAAM,EAAE,CAAC;QAAEE,QAAQ,EAAE,CAAC;QAAED,KAAK,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAE,CAAC;MAChE;MACA,IAAI1B,QAAQ,CAACwC,MAAM,KAAK/C,OAAO,CAACgD,QAAQ,IAAIzC,QAAQ,CAACwC,MAAM,KAAK/C,OAAO,CAACiD,WAAW,IAAI1C,QAAQ,CAACwC,MAAM,KAAK/C,OAAO,CAACkD,kBAAkB,IAAI3C,QAAQ,CAACwC,MAAM,KAAK/C,OAAO,CAACmD,mBAAmB,EAAE;QACtL,OAAOL,MAAM;MACjB;MAAC,4CAC0B,IAAI,CAACX,QAAQ,CAACiB,IAAI,CAAC;UAAE7C,QAAQ,EAARA;QAAS,CAAC,CAAC;QAAA;MAAA;QAA3D,uDAA6D;UAAA,IAAhD8C,QAAQ,gBAARA,QAAQ;UACjB,IAAIA,QAAQ,KAAKnD,cAAc,CAACe,KAAK,EAAE;YACnC6B,MAAM,CAAChB,MAAM,IAAI,CAAC;UACtB,CAAC,MACI,IAAIuB,QAAQ,KAAKnD,cAAc,CAACoD,OAAO,EAAE;YAC1CR,MAAM,CAACd,QAAQ,IAAI,CAAC;UACxB,CAAC,MACI,IAAIqB,QAAQ,KAAKnD,cAAc,CAACqD,IAAI,EAAE;YACvCT,MAAM,CAACf,KAAK,IAAI,CAAC;UACrB,CAAC,MACI;YACDe,MAAM,CAACb,QAAQ,IAAI,CAAC;UACxB;QACJ;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAOa,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,oBAAWU,EAAE,EAAE;MACX,IAAI,CAAC1B,MAAM,IAAI0B,EAAE,CAAC1B,MAAM;MACxB,IAAI,CAACE,QAAQ,IAAIwB,EAAE,CAACxB,QAAQ;MAC5B,IAAI,CAACD,KAAK,IAAIyB,EAAE,CAACzB,KAAK;MACtB,IAAI,CAACE,QAAQ,IAAIuB,EAAE,CAACvB,QAAQ;IAChC;EAAC;IAAA;IAAA,OACD,cAAKuB,EAAE,EAAE;MACL,IAAI,CAAC1B,MAAM,IAAI0B,EAAE,CAAC1B,MAAM;MACxB,IAAI,CAACE,QAAQ,IAAIwB,EAAE,CAACxB,QAAQ;MAC5B,IAAI,CAACD,KAAK,IAAIyB,EAAE,CAACzB,KAAK;MACtB,IAAI,CAACE,QAAQ,IAAIuB,EAAE,CAACvB,QAAQ;IAChC;EAAC;EAAA;AAAA;AAEL,WAAawB,aAAa;EACtB,yBAAc;IAAA;IACV,IAAI,CAACC,gBAAgB,GAAG,IAAI7D,eAAe,CAAC;MACxC8D,KAAK,EAAE,CAAC;MACRC,KAAK,EAAEH,aAAa,CAACI;IACzB,CAAC,CAAC;IACF,IAAI,CAACxB,eAAe,GAAG,IAAI,CAACqB,gBAAgB,CAACI,KAAK;IAClD,IAAI,CAAC5B,KAAK,GAAG,IAAI/B,iBAAiB,EAAE;IACpC,IAAI,CAAC4D,MAAM,GAAG,IAAInC,WAAW,CAAC,IAAI,CAAC;EACvC;EAAC;IAAA;IAAA,OACD,mBAAU;MACN,IAAI,CAACmC,MAAM,CAACxB,OAAO,EAAE;MACrB,IAAI,CAACmB,gBAAgB,CAACnB,OAAO,EAAE;IACnC;EAAC;IAAA;IAAA,OACD,gBAAO/B,KAAK,EAAEgC,SAAS,EAAE;MAAA,4CACEA,SAAS,IAAI,EAAE;QAAA;MAAA;QAAtC,uDAAwC;UAAA,IAA7BjC,QAAQ;UACf,IAAI,CAACyD,SAAS,CAACxD,KAAK,EAAED,QAAQ,EAAE,EAAE,CAAC;QACvC;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;EAAC;IAAA;IAAA,OACD,mBAAUC,KAAK,EAAED,QAAQ,EAAE0D,UAAU,EAAE;MACnC,IAAItE,cAAc,CAACsE,UAAU,CAAC,EAAE;QAC5B;QACA,IAAMC,OAAO,GAAG,IAAI,CAAChC,KAAK,CAAClB,MAAM,CAACT,QAAQ,EAAEC,KAAK,CAAC;QAClD,IAAI0D,OAAO,EAAE;UACT,IAAI,CAACR,gBAAgB,CAACS,IAAI,CAAC,CAAC5D,QAAQ,CAAC,CAAC;QAC1C;MACJ,CAAC,MACI;QACD;QACA,IAAM6D,OAAO,GAAG,EAAE;QAAC,4CACAH,UAAU;UAAA;QAAA;UAA7B,uDAA+B;YAAA,IAApBI,IAAI;YACX,IAAMC,MAAM,GAAGb,aAAa,CAACc,SAAS,CAAC/D,KAAK,EAAED,QAAQ,EAAE8D,IAAI,CAAC;YAC7D,IAAIC,MAAM,EAAE;cACRF,OAAO,CAACI,IAAI,CAACF,MAAM,CAAC;YACxB;UACJ;QAAC;UAAA;QAAA;UAAA;QAAA;QACD,IAAI,CAACpC,KAAK,CAACtB,GAAG,CAACL,QAAQ,EAAEC,KAAK,EAAE4D,OAAO,CAAC;QACxC,IAAI,CAACV,gBAAgB,CAACS,IAAI,CAAC,CAAC5D,QAAQ,CAAC,CAAC;MAC1C;IACJ;EAAC;IAAA;IAAA,OA0BD,mBAAUC,KAAK,EAAE6D,IAAI,EAAE;MACnB,IAAMI,OAAO,GAAG,EAAE;MAClB;MACA,IAAMC,QAAQ,GAAG,IAAI,CAACxC,KAAK,CAACX,MAAM,CAACf,KAAK,CAAC;MACzC,IAAIkE,QAAQ,EAAE;QAAA,4CACSA,QAAQ;UAAA;QAAA;UAA3B,uDAA6B;YAAA,IAAlBL,KAAI;YACX,IAAMM,KAAK,GAAG7E,QAAQ,CAAC6E,KAAK,CAACN,KAAI,CAAC;YAClC,IAAIM,KAAK,EAAE;cACPF,OAAO,CAACD,IAAI,CAACG,KAAK,CAACpE,QAAQ,CAAC;cAC5B,IAAI,CAAC2B,KAAK,CAAClB,MAAM,CAAC2D,KAAK,CAACpE,QAAQ,EAAEC,KAAK,CAAC;YAC5C;UACJ;QAAC;UAAA;QAAA;UAAA;QAAA;MACL;MACA;MACA,IAAIZ,eAAe,CAACyE,IAAI,CAAC,EAAE;QACvB;QACA,IAAMO,MAAM,GAAG,IAAI7E,WAAW,EAAE;QAAC,4CACcsE,IAAI;UAAA;QAAA;UAAnD,uDAAqD;YAAA;cAAxC9D,QAAQ,gBAARA,QAAQ;cAAU0D,UAAU,gBAAlBK,MAAM;YACzB,IAAMA,MAAM,GAAGb,aAAa,CAACc,SAAS,CAAC/D,KAAK,EAAED,QAAQ,EAAE0D,UAAU,CAAC;YACnE,IAAI,CAACK,MAAM,EAAE;cACT;cACA;YACJ;YACA,IAAMO,KAAK,GAAGD,MAAM,CAACjE,GAAG,CAACJ,QAAQ,CAAC;YAClC,IAAI,CAACsE,KAAK,EAAE;cACRD,MAAM,CAAChE,GAAG,CAACL,QAAQ,EAAE,CAAC+D,MAAM,CAAC,CAAC;cAC9BG,OAAO,CAACD,IAAI,CAACjE,QAAQ,CAAC;YAC1B,CAAC,MACI;cACDsE,KAAK,CAACL,IAAI,CAACF,MAAM,CAAC;YACtB;UACJ;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;QAAA,4CACgCM,MAAM;UAAA;QAAA;UAAtC,uDAAwC;YAAA;cAA5BrE,SAAQ;cAAEE,KAAK;YACvB,IAAI,CAACyB,KAAK,CAACtB,GAAG,CAACL,SAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAC;UAC1C;QAAC;UAAA;QAAA;UAAA;QAAA;MACL;MACA,IAAIgE,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;QACpB,IAAI,CAACpB,gBAAgB,CAACS,IAAI,CAACM,OAAO,CAAC;MACvC;IACJ;EAAC;IAAA;IAAA,OACD,gBAAmC;MAAA,IAA9BM,MAAM,uEAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC7B,IAAMzE,KAAK,GAAiCuE,MAAM,CAA5CvE,KAAK;QAAED,QAAQ,GAAuBwE,MAAM,CAArCxE,QAAQ;QAAE2E,UAAU,GAAWH,MAAM,CAA3BG,UAAU;QAAEC,IAAI,GAAKJ,MAAM,CAAfI,IAAI;MACvC,IAAI,CAACA,IAAI,IAAIA,IAAI,GAAG,CAAC,EAAE;QACnBA,IAAI,GAAG,CAAC,CAAC;MACb;MACA,IAAI3E,KAAK,IAAID,QAAQ,EAAE;QACnB;QACA,IAAM8D,IAAI,GAAG,IAAI,CAACnC,KAAK,CAACvB,GAAG,CAACJ,QAAQ,EAAEC,KAAK,CAAC;QAC5C,IAAI,CAAC6D,IAAI,EAAE;UACP,OAAO,EAAE;QACb,CAAC,MACI;UACD,IAAMvB,MAAM,GAAG,EAAE;UAAC,4CACGuB,IAAI;YAAA;UAAA;YAAzB,uDAA2B;cAAA,IAAhBC,MAAM;cACb,IAAIb,aAAa,CAAC2B,OAAO,CAACd,MAAM,EAAEY,UAAU,CAAC,EAAE;gBAC3C,IAAMG,MAAM,GAAGvC,MAAM,CAAC0B,IAAI,CAACF,MAAM,CAAC;gBAClC,IAAIa,IAAI,GAAG,CAAC,IAAIE,MAAM,KAAKF,IAAI,EAAE;kBAC7B;gBACJ;cACJ;YACJ;UAAC;YAAA;UAAA;YAAA;UAAA;UACD,OAAOrC,MAAM;QACjB;MACJ,CAAC,MACI,IAAI,CAACtC,KAAK,IAAI,CAACD,QAAQ,EAAE;QAC1B;QACA,IAAMuC,OAAM,GAAG,EAAE;QAAC,4CACI,IAAI,CAACZ,KAAK,CAACX,MAAM,EAAE;UAAA;QAAA;UAAzC,uDAA2C;YAAA,IAAhC6C,OAAO;YAAA,6CACKA,OAAO;cAAA;YAAA;cAA1B,0DAA4B;gBAAA,IAAjBC,MAAI;gBACX,IAAIZ,aAAa,CAAC2B,OAAO,CAACf,MAAI,EAAEa,UAAU,CAAC,EAAE;kBACzC,IAAMG,OAAM,GAAGvC,OAAM,CAAC0B,IAAI,CAACH,MAAI,CAAC;kBAChC,IAAIc,IAAI,GAAG,CAAC,IAAIE,OAAM,KAAKF,IAAI,EAAE;oBAC7B,OAAOrC,OAAM;kBACjB;gBACJ;cACJ;YAAC;cAAA;YAAA;cAAA;YAAA;UACL;QAAC;UAAA;QAAA;UAAA;QAAA;QACD,OAAOA,OAAM;MACjB,CAAC,MACI;QACD;QACA,IAAMwC,QAAQ,GAAG,IAAI,CAACpD,KAAK,CAACX,MAAM,CAAChB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAGA,QAAQ,GAAGC,KAAK,CAAC;QAC/F,IAAMsC,QAAM,GAAG,EAAE;QAAC,6CACIwC,QAAQ;UAAA;QAAA;UAA9B,0DAAgC;YAAA,IAArBlB,QAAO;YAAA,6CACKA,QAAO;cAAA;YAAA;cAA1B,0DAA4B;gBAAA,IAAjBC,MAAI;gBACX,IAAIZ,aAAa,CAAC2B,OAAO,CAACf,MAAI,EAAEa,UAAU,CAAC,EAAE;kBACzC,IAAMG,QAAM,GAAGvC,QAAM,CAAC0B,IAAI,CAACH,MAAI,CAAC;kBAChC,IAAIc,IAAI,GAAG,CAAC,IAAIE,QAAM,KAAKF,IAAI,EAAE;oBAC7B,OAAOrC,QAAM;kBACjB;gBACJ;cACJ;YAAC;cAAA;YAAA;cAAA;YAAA;UACL;QAAC;UAAA;QAAA;UAAA;QAAA;QACD,OAAOA,QAAM;MACjB;IACJ;EAAC;IAAA;IAAA,OAzHD,mBAAiBtC,KAAK,EAAED,QAAQ,EAAE8D,IAAI,EAAE;MACpC,IAAMkB,IAAI,GAAmHlB,IAAI,CAA3HkB,IAAI;QAAElC,QAAQ,GAAyGgB,IAAI,CAArHhB,QAAQ;QAAEmC,OAAO,GAAgGnB,IAAI,CAA3GmB,OAAO;QAAEC,MAAM,GAAwFpB,IAAI,CAAlGoB,MAAM;QAAEC,eAAe,GAAuErB,IAAI,CAA1FqB,eAAe;QAAEC,WAAW,GAA0DtB,IAAI,CAAzEsB,WAAW;QAAEC,aAAa,GAA2CvB,IAAI,CAA5DuB,aAAa;QAAEC,SAAS,GAAgCxB,IAAI,CAA7CwB,SAAS;QAAEC,kBAAkB,GAAYzB,IAAI,CAAlCyB,kBAAkB;QAAEC,IAAI,GAAM1B,IAAI,CAAd0B,IAAI;MACvH,IAAI,CAACP,OAAO,EAAE;QACV,OAAOQ,SAAS;MACpB;MACA;MACAN,eAAe,GAAGA,eAAe,GAAG,CAAC,GAAGA,eAAe,GAAG,CAAC;MAC3DC,WAAW,GAAGA,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG,CAAC;MAC/CC,aAAa,GAAGA,aAAa,IAAIF,eAAe,GAAGE,aAAa,GAAGF,eAAe;MAClFG,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAGF,WAAW;MACnD,OAAO;QACHpF,QAAQ,EAARA,QAAQ;QACRC,KAAK,EAALA,KAAK;QACL+E,IAAI,EAAJA,IAAI;QACJlC,QAAQ,EAARA,QAAQ;QACRmC,OAAO,EAAPA,OAAO;QACPC,MAAM,EAANA,MAAM;QACNC,eAAe,EAAfA,eAAe;QACfC,WAAW,EAAXA,WAAW;QACXC,aAAa,EAAbA,aAAa;QACbC,SAAS,EAATA,SAAS;QACTC,kBAAkB,EAAlBA,kBAAkB;QAClBC,IAAI,EAAJA;MACJ,CAAC;IACL;EAAC;IAAA;IAAA,OAkGD,iBAAezB,MAAM,EAAEY,UAAU,EAAE;MAC/B,OAAOA,UAAU,KAAKc,SAAS,IAAI,CAACd,UAAU,GAAGZ,MAAM,CAACjB,QAAQ,MAAMiB,MAAM,CAACjB,QAAQ;IACzF;IACA;EAAA;IAAA;IAAA,OACA,gBAAc4C,GAAG,EAAE;MACf,IAAMrF,GAAG,GAAG,IAAIb,WAAW,EAAE;MAAC,6CACVkG,GAAG;QAAA;MAAA;QAAvB,0DAAyB;UAAA,IAAdpB,KAAK;UAAA,6CACOA,KAAK;YAAA;UAAA;YAAxB,0DAA0B;cAAA,IAAfqB,IAAI;cACXtF,GAAG,CAACA,GAAG,CAACsF,IAAI,EAAE,IAAI,CAAC;YACvB;UAAC;YAAA;UAAA;YAAA;UAAA;QACL;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAOC,KAAK,CAACC,IAAI,CAACxF,GAAG,CAACyF,IAAI,EAAE,CAAC;IACjC;EAAC;EAAA;AAAA"}]}