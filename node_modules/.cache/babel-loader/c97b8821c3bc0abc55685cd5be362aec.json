{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/viewModelEventDispatcher.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/viewModelEventDispatcher.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Emitter","Disposable","ViewModelEventDispatcher","_onEvent","_register","onEvent","event","_eventHandlers","_viewEventQueue","_isConsumingViewEventQueue","_collector","_collectorCnt","_outgoingEvents","e","_addOutgoingEvent","_emitOutgoingEvents","i","len","length","mergeResult","kind","attemptToMerge","push","shift","isNoOp","fire","eventHandler","console","warn","splice","ViewModelEventsCollector","outgoingEvents","viewEvents","outgoingEvent","_emitMany","eventsCollector","beginEmitViewEvents","emitViewEvent","endEmitViewEvents","events","concat","_consumeViewEventQueue","_doConsumeQueue","eventHandlers","slice","handleEvents","ContentSizeChangedEvent","oldContentWidth","oldContentHeight","contentWidth","contentHeight","_oldContentWidth","_oldContentHeight","contentWidthChanged","contentHeightChanged","other","FocusChangedEvent","oldHasFocus","hasFocus","ScrollChangedEvent","oldScrollWidth","oldScrollLeft","oldScrollHeight","oldScrollTop","scrollWidth","scrollLeft","scrollHeight","scrollTop","_oldScrollWidth","_oldScrollLeft","_oldScrollHeight","_oldScrollTop","scrollWidthChanged","scrollLeftChanged","scrollHeightChanged","scrollTopChanged","ViewZonesChangedEvent","HiddenAreasChangedEvent","CursorStateChangedEvent","oldSelections","selections","oldModelVersionId","modelVersionId","source","reason","reachedMaxCursorCount","_selectionsAreEqual","a","b","aLen","bLen","equalsSelection","ReadOnlyEditAttemptEvent","ModelDecorationsChangedEvent","ModelLanguageChangedEvent","ModelLanguageConfigurationChangedEvent","ModelContentChangedEvent","ModelOptionsChangedEvent","ModelTokensChangedEvent"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/common/viewModelEventDispatcher.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nexport class ViewModelEventDispatcher extends Disposable {\n    constructor() {\n        super();\n        this._onEvent = this._register(new Emitter());\n        this.onEvent = this._onEvent.event;\n        this._eventHandlers = [];\n        this._viewEventQueue = null;\n        this._isConsumingViewEventQueue = false;\n        this._collector = null;\n        this._collectorCnt = 0;\n        this._outgoingEvents = [];\n    }\n    emitOutgoingEvent(e) {\n        this._addOutgoingEvent(e);\n        this._emitOutgoingEvents();\n    }\n    _addOutgoingEvent(e) {\n        for (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\n            const mergeResult = (this._outgoingEvents[i].kind === e.kind ? this._outgoingEvents[i].attemptToMerge(e) : null);\n            if (mergeResult) {\n                this._outgoingEvents[i] = mergeResult;\n                return;\n            }\n        }\n        // not merged\n        this._outgoingEvents.push(e);\n    }\n    _emitOutgoingEvents() {\n        while (this._outgoingEvents.length > 0) {\n            if (this._collector || this._isConsumingViewEventQueue) {\n                // right now collecting or emitting view events, so let's postpone emitting\n                return;\n            }\n            const event = this._outgoingEvents.shift();\n            if (event.isNoOp()) {\n                continue;\n            }\n            this._onEvent.fire(event);\n        }\n    }\n    addViewEventHandler(eventHandler) {\n        for (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n            }\n        }\n        this._eventHandlers.push(eventHandler);\n    }\n    removeViewEventHandler(eventHandler) {\n        for (let i = 0; i < this._eventHandlers.length; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                this._eventHandlers.splice(i, 1);\n                break;\n            }\n        }\n    }\n    beginEmitViewEvents() {\n        this._collectorCnt++;\n        if (this._collectorCnt === 1) {\n            this._collector = new ViewModelEventsCollector();\n        }\n        return this._collector;\n    }\n    endEmitViewEvents() {\n        this._collectorCnt--;\n        if (this._collectorCnt === 0) {\n            const outgoingEvents = this._collector.outgoingEvents;\n            const viewEvents = this._collector.viewEvents;\n            this._collector = null;\n            for (const outgoingEvent of outgoingEvents) {\n                this._addOutgoingEvent(outgoingEvent);\n            }\n            if (viewEvents.length > 0) {\n                this._emitMany(viewEvents);\n            }\n        }\n        this._emitOutgoingEvents();\n    }\n    emitSingleViewEvent(event) {\n        try {\n            const eventsCollector = this.beginEmitViewEvents();\n            eventsCollector.emitViewEvent(event);\n        }\n        finally {\n            this.endEmitViewEvents();\n        }\n    }\n    _emitMany(events) {\n        if (this._viewEventQueue) {\n            this._viewEventQueue = this._viewEventQueue.concat(events);\n        }\n        else {\n            this._viewEventQueue = events;\n        }\n        if (!this._isConsumingViewEventQueue) {\n            this._consumeViewEventQueue();\n        }\n    }\n    _consumeViewEventQueue() {\n        try {\n            this._isConsumingViewEventQueue = true;\n            this._doConsumeQueue();\n        }\n        finally {\n            this._isConsumingViewEventQueue = false;\n        }\n    }\n    _doConsumeQueue() {\n        while (this._viewEventQueue) {\n            // Empty event queue, as events might come in while sending these off\n            const events = this._viewEventQueue;\n            this._viewEventQueue = null;\n            // Use a clone of the event handlers list, as they might remove themselves\n            const eventHandlers = this._eventHandlers.slice(0);\n            for (const eventHandler of eventHandlers) {\n                eventHandler.handleEvents(events);\n            }\n        }\n    }\n}\nexport class ViewModelEventsCollector {\n    constructor() {\n        this.viewEvents = [];\n        this.outgoingEvents = [];\n    }\n    emitViewEvent(event) {\n        this.viewEvents.push(event);\n    }\n    emitOutgoingEvent(e) {\n        this.outgoingEvents.push(e);\n    }\n}\nexport class ContentSizeChangedEvent {\n    constructor(oldContentWidth, oldContentHeight, contentWidth, contentHeight) {\n        this.kind = 0 /* OutgoingViewModelEventKind.ContentSizeChanged */;\n        this._oldContentWidth = oldContentWidth;\n        this._oldContentHeight = oldContentHeight;\n        this.contentWidth = contentWidth;\n        this.contentHeight = contentHeight;\n        this.contentWidthChanged = (this._oldContentWidth !== this.contentWidth);\n        this.contentHeightChanged = (this._oldContentHeight !== this.contentHeight);\n    }\n    isNoOp() {\n        return (!this.contentWidthChanged && !this.contentHeightChanged);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new ContentSizeChangedEvent(this._oldContentWidth, this._oldContentHeight, other.contentWidth, other.contentHeight);\n    }\n}\nexport class FocusChangedEvent {\n    constructor(oldHasFocus, hasFocus) {\n        this.kind = 1 /* OutgoingViewModelEventKind.FocusChanged */;\n        this.oldHasFocus = oldHasFocus;\n        this.hasFocus = hasFocus;\n    }\n    isNoOp() {\n        return (this.oldHasFocus === this.hasFocus);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\n    }\n}\nexport class ScrollChangedEvent {\n    constructor(oldScrollWidth, oldScrollLeft, oldScrollHeight, oldScrollTop, scrollWidth, scrollLeft, scrollHeight, scrollTop) {\n        this.kind = 2 /* OutgoingViewModelEventKind.ScrollChanged */;\n        this._oldScrollWidth = oldScrollWidth;\n        this._oldScrollLeft = oldScrollLeft;\n        this._oldScrollHeight = oldScrollHeight;\n        this._oldScrollTop = oldScrollTop;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n        this.scrollWidthChanged = (this._oldScrollWidth !== this.scrollWidth);\n        this.scrollLeftChanged = (this._oldScrollLeft !== this.scrollLeft);\n        this.scrollHeightChanged = (this._oldScrollHeight !== this.scrollHeight);\n        this.scrollTopChanged = (this._oldScrollTop !== this.scrollTop);\n    }\n    isNoOp() {\n        return (!this.scrollWidthChanged && !this.scrollLeftChanged && !this.scrollHeightChanged && !this.scrollTopChanged);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new ScrollChangedEvent(this._oldScrollWidth, this._oldScrollLeft, this._oldScrollHeight, this._oldScrollTop, other.scrollWidth, other.scrollLeft, other.scrollHeight, other.scrollTop);\n    }\n}\nexport class ViewZonesChangedEvent {\n    constructor() {\n        this.kind = 3 /* OutgoingViewModelEventKind.ViewZonesChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class HiddenAreasChangedEvent {\n    constructor() {\n        this.kind = 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class CursorStateChangedEvent {\n    constructor(oldSelections, selections, oldModelVersionId, modelVersionId, source, reason, reachedMaxCursorCount) {\n        this.kind = 6 /* OutgoingViewModelEventKind.CursorStateChanged */;\n        this.oldSelections = oldSelections;\n        this.selections = selections;\n        this.oldModelVersionId = oldModelVersionId;\n        this.modelVersionId = modelVersionId;\n        this.source = source;\n        this.reason = reason;\n        this.reachedMaxCursorCount = reachedMaxCursorCount;\n    }\n    static _selectionsAreEqual(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        const aLen = a.length;\n        const bLen = b.length;\n        if (aLen !== bLen) {\n            return false;\n        }\n        for (let i = 0; i < aLen; i++) {\n            if (!a[i].equalsSelection(b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isNoOp() {\n        return (CursorStateChangedEvent._selectionsAreEqual(this.oldSelections, this.selections)\n            && this.oldModelVersionId === this.modelVersionId);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new CursorStateChangedEvent(this.oldSelections, other.selections, this.oldModelVersionId, other.modelVersionId, other.source, other.reason, this.reachedMaxCursorCount || other.reachedMaxCursorCount);\n    }\n}\nexport class ReadOnlyEditAttemptEvent {\n    constructor() {\n        this.kind = 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class ModelDecorationsChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelLanguageChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelLanguageConfigurationChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelContentChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 10 /* OutgoingViewModelEventKind.ModelContentChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelOptionsChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelTokensChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 12 /* OutgoingViewModelEventKind.ModelTokensChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\n"],"mappings":"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"}]}