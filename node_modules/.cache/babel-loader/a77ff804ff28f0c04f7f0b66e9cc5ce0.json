{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["nls","browser","createFastDomNode","platform","strings","applyFontInfo","CopyOptions","TextAreaInput","TextAreaWrapper","PagedScreenReaderStrategy","TextAreaState","_debugComposition","PartFingerprints","ViewPart","LineNumbersOverlay","Margin","EditorOptions","getMapForWordSeparators","Position","Range","Selection","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","TokenizationRegistry","Color","VisibleTextAreaData","_context","modelLineNumber","distanceToModelLineStart","widthOfHiddenLineTextBefore","distanceToModelLineEnd","_visibleTextAreaBrand","undefined","startPosition","endPosition","visibleTextareaStart","visibleTextareaEnd","_previousPresentation","visibleRangeProvider","startModelPosition","endModelPosition","viewModel","model","getLineMaxColumn","coordinatesConverter","convertModelPositionToViewPosition","lineNumber","visibleRangeForPosition","tokenPresentation","foreground","italic","bold","underline","strikethrough","canUseZeroSizeTextarea","isFirefox","TextAreaHandler","context","viewController","_primaryCursorPosition","_primaryCursorVisibleRange","_viewController","_visibleRangeProvider","_scrollLeft","_scrollTop","options","configuration","layoutInfo","get","_setAccessibilityOptions","_contentLeft","contentLeft","_contentWidth","contentWidth","_contentHeight","height","_fontInfo","_lineHeight","_emptySelectionClipboard","_copyWithSyntaxHighlighting","_visibleTextArea","_selections","_modelSelections","_lastRenderPosition","textArea","document","createElement","write","setClassName","setAttribute","_getAriaLabel","String","localize","textAreaCover","setPosition","simpleModel","getLineCount","getValueInRange","range","eol","textAreaInputHost","getDataToCopy","rawTextToCopy","getPlainTextToCopy","isWindows","newLineCharacter","getEOL","isFromEmptySelection","length","isEmpty","multicursorText","Array","isArray","text","join","html","mode","forceCopyWithSyntaxHighlighting","richText","getRichTextToCopy","getScreenReaderContent","currentState","_accessibilitySupport","selection","isMacintosh","position","getStartPosition","textBefore","_getWordBeforePosition","_getCharacterBeforePosition","isSafari","placeholderText","EMPTY","isAndroid","_getAndroidWordAtPosition","wordAtPosition","positionOffsetInWord","fromEditorSelection","_accessibilityPageSize","deduceModelPosition","viewAnchorPosition","deltaOffset","lineFeedCnt","deduceModelPositionRelativeToViewPosition","textAreaWrapper","_register","domNode","_textAreaInput","OS","onKeyDown","e","emitKeyDown","onKeyUp","emitKeyUp","onPaste","pasteOnNewLine","metadata","paste","onCut","cut","onType","replacePrevCharCnt","replaceNextCharCnt","positionDelta","console","log","compositionType","type","onSelectionChangeRequest","modelSelection","setSelection","onCompositionStart","ta","textBeforeSelection","value","substring","Math","min","selectionStart","selectionEnd","lineFeedOffset1","lastIndexOf","lineTextBeforeSelection","tabOffset1","desiredVisibleBeforeCharCount","visibleBeforeCharCount","column","hiddenLineTextBefore","widthOfHiddenTextBefore","measureText","textAfterSelection","max","lineFeedOffset2","indexOf","lineTextAfterSelection","tabOffset2","desiredVisibleAfterCharCount","getEndPosition","visibleAfterCharCount","revealRange","fromPositions","startLineNumber","prepareRender","_render","compositionStart","onCompositionUpdate","onCompositionEnd","compositionEnd","onFocus","setHasFocus","onBlur","ANDROID_WORD_SEPARATORS","lineContent","getLineContent","wordSeparators","goingLeft","startColumn","goingRight","endColumn","distance","charCode","charCodeAt","charClass","charBefore","charAt","isHighSurrogate","accessibilitySupport","isLinux","accessibilityPageSize","defaultValue","hasChanged","removeAttribute","writeScreenReaderContent","selections","slice","modelSelections","scrollLeft","scrollTop","isFocused","focusTextArea","activeDescendant","role","ctx","_a","positionLineNumber","positionColumn","visibleStart","visibleEnd","left","top","viewLayout","getVerticalOffsetForLineNumber","lineCount","_newlinecount","substr","width","delta","viewLineData","getViewLineData","startTokenIndex","tokens","findTokenIndexAtOffset","endTokenIndex","textareaSpansSingleToken","presentation","definePresentation","getPresentation","_doRender","lastRenderPosition","useCover","color","getColorMap","_renderAtTopLeft","result","startIndex","renderData","tac","setTop","setLeft","setWidth","setHeight","setColor","Format","CSS","formatHex","setFontStyle","setFontWeight","setTextDecoration","OUTER_CLASS_NAME","renderType","CLASS_NAME","fontInfo","container","style","regularDomNode","whiteSpace","append","appendChild","body","res","offsetWidth","removeChild"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { CopyOptions, TextAreaInput, TextAreaWrapper } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState, _debugComposition } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { Color } from '../../../base/common/color.js';\nclass VisibleTextAreaData {\n    constructor(_context, modelLineNumber, distanceToModelLineStart, widthOfHiddenLineTextBefore, distanceToModelLineEnd) {\n        this._context = _context;\n        this.modelLineNumber = modelLineNumber;\n        this.distanceToModelLineStart = distanceToModelLineStart;\n        this.widthOfHiddenLineTextBefore = widthOfHiddenLineTextBefore;\n        this.distanceToModelLineEnd = distanceToModelLineEnd;\n        this._visibleTextAreaBrand = undefined;\n        this.startPosition = null;\n        this.endPosition = null;\n        this.visibleTextareaStart = null;\n        this.visibleTextareaEnd = null;\n        /**\n         * When doing composition, the currently composed text might be split up into\n         * multiple tokens, then merged again into a single token, etc. Here we attempt\n         * to keep the presentation of the <textarea> stable by using the previous used\n         * style if multiple tokens come into play. This avoids flickering.\n         */\n        this._previousPresentation = null;\n    }\n    prepareRender(visibleRangeProvider) {\n        const startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n        const endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n        this.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n        this.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n        if (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n            this.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n            this.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n        }\n        else {\n            // TODO: what if the view positions are not on the same line?\n            this.visibleTextareaStart = null;\n            this.visibleTextareaEnd = null;\n        }\n    }\n    definePresentation(tokenPresentation) {\n        if (!this._previousPresentation) {\n            // To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n            if (tokenPresentation) {\n                this._previousPresentation = tokenPresentation;\n            }\n            else {\n                this._previousPresentation = {\n                    foreground: 1 /* ColorId.DefaultForeground */,\n                    italic: false,\n                    bold: false,\n                    underline: false,\n                    strikethrough: false,\n                };\n            }\n        }\n        return this._previousPresentation;\n    }\n}\nconst canUseZeroSizeTextarea = (browser.isFirefox);\nexport class TextAreaHandler extends ViewPart {\n    constructor(context, viewController, visibleRangeProvider) {\n        super(context);\n        // --- end view API\n        this._primaryCursorPosition = new Position(1, 1);\n        this._primaryCursorVisibleRange = null;\n        this._viewController = viewController;\n        this._visibleRangeProvider = visibleRangeProvider;\n        this._scrollLeft = 0;\n        this._scrollTop = 0;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(33 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(21 /* EditorOption.copyWithSyntaxHighlighting */);\n        this._visibleTextArea = null;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._modelSelections = [new Selection(1, 1, 1, 1)];\n        this._lastRenderPosition = null;\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\n        this.textArea = createFastDomNode(document.createElement('textarea'));\n        PartFingerprints.write(this.textArea, 6 /* PartFingerprint.TextArea */);\n        this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this.textArea.setAttribute('wrap', 'off');\n        this.textArea.setAttribute('autocorrect', 'off');\n        this.textArea.setAttribute('autocapitalize', 'off');\n        this.textArea.setAttribute('autocomplete', 'off');\n        this.textArea.setAttribute('spellcheck', 'false');\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('tabindex', String(options.get(114 /* EditorOption.tabIndex */)));\n        this.textArea.setAttribute('role', 'textbox');\n        this.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n        this.textArea.setAttribute('aria-multiline', 'true');\n        this.textArea.setAttribute('aria-haspopup', 'false');\n        this.textArea.setAttribute('aria-autocomplete', 'both');\n        if (options.get(30 /* EditorOption.domReadOnly */) && options.get(83 /* EditorOption.readOnly */)) {\n            this.textArea.setAttribute('readonly', 'true');\n        }\n        this.textAreaCover = createFastDomNode(document.createElement('div'));\n        this.textAreaCover.setPosition('absolute');\n        const simpleModel = {\n            getLineCount: () => {\n                return this._context.viewModel.getLineCount();\n            },\n            getLineMaxColumn: (lineNumber) => {\n                return this._context.viewModel.getLineMaxColumn(lineNumber);\n            },\n            getValueInRange: (range, eol) => {\n                return this._context.viewModel.getValueInRange(range, eol);\n            }\n        };\n        const textAreaInputHost = {\n            getDataToCopy: () => {\n                const rawTextToCopy = this._context.viewModel.getPlainTextToCopy(this._modelSelections, this._emptySelectionClipboard, platform.isWindows);\n                const newLineCharacter = this._context.viewModel.model.getEOL();\n                const isFromEmptySelection = (this._emptySelectionClipboard && this._modelSelections.length === 1 && this._modelSelections[0].isEmpty());\n                const multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n                const text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n                let html = undefined;\n                let mode = null;\n                if (CopyOptions.forceCopyWithSyntaxHighlighting || (this._copyWithSyntaxHighlighting && text.length < 65536)) {\n                    const richText = this._context.viewModel.getRichTextToCopy(this._modelSelections, this._emptySelectionClipboard);\n                    if (richText) {\n                        html = richText.html;\n                        mode = richText.mode;\n                    }\n                }\n                return {\n                    isFromEmptySelection,\n                    multicursorText,\n                    text,\n                    html,\n                    mode\n                };\n            },\n            getScreenReaderContent: (currentState) => {\n                if (this._accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n                    // We know for a fact that a screen reader is not attached\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n                    const selection = this._selections[0];\n                    if (platform.isMacintosh && selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        let textBefore = this._getWordBeforePosition(position);\n                        if (textBefore.length === 0) {\n                            textBefore = this._getCharacterBeforePosition(position);\n                        }\n                        if (textBefore.length > 0) {\n                            return new TextAreaState(textBefore, textBefore.length, textBefore.length, position, position);\n                        }\n                    }\n                    // on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n                    // if the textarea has no content selected. So if there is an editor selection, ensure something\n                    // is selected in the textarea.\n                    if (browser.isSafari && !selection.isEmpty()) {\n                        const placeholderText = 'vscode-placeholder';\n                        return new TextAreaState(placeholderText, 0, placeholderText.length, null, null);\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                if (browser.isAndroid) {\n                    // when tapping in the editor on a word, Android enters composition mode.\n                    // in the `compositionstart` event we cannot clear the textarea, because\n                    // it then forgets to ever send a `compositionend`.\n                    // we therefore only write the current word in the textarea\n                    const selection = this._selections[0];\n                    if (selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        const [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n                        if (wordAtPosition.length > 0) {\n                            return new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, position, position);\n                        }\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                return PagedScreenReaderStrategy.fromEditorSelection(currentState, simpleModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === 0 /* AccessibilitySupport.Unknown */);\n            },\n            deduceModelPosition: (viewAnchorPosition, deltaOffset, lineFeedCnt) => {\n                return this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n            }\n        };\n        const textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n        this._textAreaInput = this._register(new TextAreaInput(textAreaInputHost, textAreaWrapper, platform.OS, browser));\n        this._register(this._textAreaInput.onKeyDown((e) => {\n            this._viewController.emitKeyDown(e);\n        }));\n        this._register(this._textAreaInput.onKeyUp((e) => {\n            this._viewController.emitKeyUp(e);\n        }));\n        this._register(this._textAreaInput.onPaste((e) => {\n            let pasteOnNewLine = false;\n            let multicursorText = null;\n            let mode = null;\n            if (e.metadata) {\n                pasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n                mode = e.metadata.mode;\n            }\n            this._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n        }));\n        this._register(this._textAreaInput.onCut(() => {\n            this._viewController.cut();\n        }));\n        this._register(this._textAreaInput.onType((e) => {\n            if (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n                // must be handled through the new command\n                if (_debugComposition) {\n                    console.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n                }\n                this._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n            }\n            else {\n                if (_debugComposition) {\n                    console.log(` => type: <<${e.text}>>`);\n                }\n                this._viewController.type(e.text);\n            }\n        }));\n        this._register(this._textAreaInput.onSelectionChangeRequest((modelSelection) => {\n            this._viewController.setSelection(modelSelection);\n        }));\n        this._register(this._textAreaInput.onCompositionStart((e) => {\n            // The textarea might contain some content when composition starts.\n            //\n            // When we make the textarea visible, it always has a height of 1 line,\n            // so we don't need to worry too much about content on lines above or below\n            // the selection.\n            //\n            // However, the text on the current line needs to be made visible because\n            // some IME methods allow to move to other glyphs on the current line\n            // (by pressing arrow keys).\n            //\n            // (1) The textarea might contain only some parts of the current line,\n            // like the word before the selection. Also, the content inside the textarea\n            // can grow or shrink as composition occurs. We therefore anchor the textarea\n            // in terms of distance to a certain line start and line end.\n            //\n            // (2) Also, we should not make \\t characters visible, because their rendering\n            // inside the <textarea> will not align nicely with our rendering. We therefore\n            // will hide (if necessary) some of the leading text on the current line.\n            const ta = this.textArea.domNode;\n            const modelSelection = this._modelSelections[0];\n            const { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n                // Find the text that is on the current line before the selection\n                const textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n                const lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n                // We now search to see if we should hide some part of it (if it contains \\t)\n                const tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n                const desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n                const startModelPosition = modelSelection.getStartPosition();\n                const visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n                const distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n                const hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n                const widthOfHiddenTextBefore = measureText(hiddenLineTextBefore, this._fontInfo);\n                return { distanceToModelLineStart, widthOfHiddenTextBefore };\n            })();\n            const { distanceToModelLineEnd } = (() => {\n                // Find the text that is on the current line after the selection\n                const textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n                const lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n                const tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n                const desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n                const endModelPosition = modelSelection.getEndPosition();\n                const visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n                const distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n                return { distanceToModelLineEnd };\n            })();\n            // Scroll to reveal the location in the editor where composition occurs\n            this._context.viewModel.revealRange('keyboard', true, Range.fromPositions(this._selections[0].getStartPosition()), 0 /* viewEvents.VerticalRevealType.Simple */, 1 /* ScrollType.Immediate */);\n            this._visibleTextArea = new VisibleTextAreaData(this._context, modelSelection.startLineNumber, distanceToModelLineStart, widthOfHiddenTextBefore, distanceToModelLineEnd);\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n            // Show the textarea\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n            this._viewController.compositionStart();\n            this._context.viewModel.onCompositionStart();\n        }));\n        this._register(this._textAreaInput.onCompositionUpdate((e) => {\n            if (!this._visibleTextArea) {\n                return;\n            }\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n        }));\n        this._register(this._textAreaInput.onCompositionEnd(() => {\n            this._visibleTextArea = null;\n            this._render();\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n            this._viewController.compositionEnd();\n            this._context.viewModel.onCompositionEnd();\n        }));\n        this._register(this._textAreaInput.onFocus(() => {\n            this._context.viewModel.setHasFocus(true);\n        }));\n        this._register(this._textAreaInput.onBlur(() => {\n            this._context.viewModel.setHasFocus(false);\n        }));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _getAndroidWordAtPosition(position) {\n        const ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS);\n        let goingLeft = true;\n        let startColumn = position.column;\n        let goingRight = true;\n        let endColumn = position.column;\n        let distance = 0;\n        while (distance < 50 && (goingLeft || goingRight)) {\n            if (goingLeft && startColumn <= 1) {\n                goingLeft = false;\n            }\n            if (goingLeft) {\n                const charCode = lineContent.charCodeAt(startColumn - 2);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingLeft = false;\n                }\n                else {\n                    startColumn--;\n                }\n            }\n            if (goingRight && endColumn > lineContent.length) {\n                goingRight = false;\n            }\n            if (goingRight) {\n                const charCode = lineContent.charCodeAt(endColumn - 1);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingRight = false;\n                }\n                else {\n                    endColumn++;\n                }\n            }\n            distance++;\n        }\n        return [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n    }\n    _getWordBeforePosition(position) {\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(119 /* EditorOption.wordSeparators */));\n        let column = position.column;\n        let distance = 0;\n        while (column > 1) {\n            const charCode = lineContent.charCodeAt(column - 2);\n            const charClass = wordSeparators.get(charCode);\n            if (charClass !== 0 /* WordCharacterClass.Regular */ || distance > 50) {\n                return lineContent.substring(column - 1, position.column - 1);\n            }\n            distance++;\n            column--;\n        }\n        return lineContent.substring(0, position.column - 1);\n    }\n    _getCharacterBeforePosition(position) {\n        if (position.column > 1) {\n            const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n            const charBefore = lineContent.charAt(position.column - 2);\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n                return charBefore;\n            }\n        }\n        return '';\n    }\n    _getAriaLabel(options) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n            return nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press {0} for options.\", platform.isLinux ? 'Shift+Alt+F1' : 'Alt+F1');\n        }\n        return options.get(4 /* EditorOption.ariaLabel */);\n    }\n    _setAccessibilityOptions(options) {\n        this._accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        const accessibilityPageSize = options.get(3 /* EditorOption.accessibilityPageSize */);\n        if (this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n            // If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n            this._accessibilityPageSize = 500;\n        }\n        else {\n            this._accessibilityPageSize = accessibilityPageSize;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(33 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(21 /* EditorOption.copyWithSyntaxHighlighting */);\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('tabindex', String(options.get(114 /* EditorOption.tabIndex */)));\n        if (e.hasChanged(30 /* EditorOption.domReadOnly */) || e.hasChanged(83 /* EditorOption.readOnly */)) {\n            if (options.get(30 /* EditorOption.domReadOnly */) && options.get(83 /* EditorOption.readOnly */)) {\n                this.textArea.setAttribute('readonly', 'true');\n            }\n            else {\n                this.textArea.removeAttribute('readonly');\n            }\n        }\n        if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n            this._textAreaInput.writeScreenReaderContent('strategy changed');\n        }\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        this._modelSelections = e.modelSelections.slice(0);\n        this._textAreaInput.writeScreenReaderContent('selection changed');\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollLeft = e.scrollLeft;\n        this._scrollTop = e.scrollTop;\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin view API\n    isFocused() {\n        return this._textAreaInput.isFocused();\n    }\n    focusTextArea() {\n        this._textAreaInput.focusTextArea();\n    }\n    getLastRenderData() {\n        return this._lastRenderPosition;\n    }\n    setAriaOptions(options) {\n        if (options.activeDescendant) {\n            this.textArea.setAttribute('aria-haspopup', 'true');\n            this.textArea.setAttribute('aria-autocomplete', 'list');\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n        }\n        else {\n            this.textArea.setAttribute('aria-haspopup', 'false');\n            this.textArea.setAttribute('aria-autocomplete', 'both');\n            this.textArea.removeAttribute('aria-activedescendant');\n        }\n        if (options.role) {\n            this.textArea.setAttribute('role', options.role);\n        }\n    }\n    prepareRender(ctx) {\n        var _a;\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n        (_a = this._visibleTextArea) === null || _a === void 0 ? void 0 : _a.prepareRender(ctx);\n    }\n    render(ctx) {\n        this._textAreaInput.writeScreenReaderContent('render');\n        this._render();\n    }\n    _render() {\n        if (this._visibleTextArea) {\n            // The text area is visible for composition reasons\n            const visibleStart = this._visibleTextArea.visibleTextareaStart;\n            const visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n            const startPosition = this._visibleTextArea.startPosition;\n            const endPosition = this._visibleTextArea.endPosition;\n            if (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n                const top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n                const lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n                let scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n                let left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n                // See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n                // Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n                // This could be caused by rounding errors that might only show up with certain font families.\n                // In other words, a pixel might be lost when doing something like\n                //      `Math.round(end) - Math.round(start)`\n                // vs\n                //      `Math.round(end - start)`\n                let width = visibleEnd.left - visibleStart.left + 1;\n                if (left < this._contentLeft) {\n                    // the textarea would be rendered on top of the margin,\n                    // so reduce its width. We use the same technique as\n                    // for hiding text before\n                    const delta = (this._contentLeft - left);\n                    left += delta;\n                    scrollLeft += delta;\n                    width -= delta;\n                }\n                if (width > this._contentWidth) {\n                    // the textarea would be wider than the content width,\n                    // so reduce its width.\n                    width = this._contentWidth;\n                }\n                // Try to render the textarea with the color/font style to match the text under it\n                const viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n                const startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n                const endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n                const textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n                const presentation = this._visibleTextArea.definePresentation((textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null));\n                this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n                this.textArea.domNode.scrollLeft = scrollLeft;\n                this._doRender({\n                    lastRenderPosition: null,\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: this._lineHeight,\n                    useCover: false,\n                    color: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n                    italic: presentation.italic,\n                    bold: presentation.bold,\n                    underline: presentation.underline,\n                    strikethrough: presentation.strikethrough\n                });\n            }\n            return;\n        }\n        if (!this._primaryCursorVisibleRange) {\n            // The primary cursor is outside the viewport => place textarea to the top left\n            this._renderAtTopLeft();\n            return;\n        }\n        const left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        const top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n        if (top < 0 || top > this._contentHeight) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n        if (platform.isMacintosh) {\n            // For the popup emoji input, we will make the text area as high as the line height\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n            this._doRender({\n                lastRenderPosition: this._primaryCursorPosition,\n                top: top,\n                left: left,\n                width: (canUseZeroSizeTextarea ? 0 : 1),\n                height: this._lineHeight,\n                useCover: false\n            });\n            // In case the textarea contains a word, we're going to try to align the textarea's cursor\n            // with our cursor by scrolling the textarea as much as possible\n            this.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n            const lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n            this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n            return;\n        }\n        this._doRender({\n            lastRenderPosition: this._primaryCursorPosition,\n            top: top,\n            left: left,\n            width: (canUseZeroSizeTextarea ? 0 : 1),\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: false\n        });\n    }\n    _newlinecount(text) {\n        let result = 0;\n        let startIndex = -1;\n        do {\n            startIndex = text.indexOf('\\n', startIndex + 1);\n            if (startIndex === -1) {\n                break;\n            }\n            result++;\n        } while (true);\n        return result;\n    }\n    _renderAtTopLeft() {\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n        this._doRender({\n            lastRenderPosition: null,\n            top: 0,\n            left: 0,\n            width: (canUseZeroSizeTextarea ? 0 : 1),\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: true\n        });\n    }\n    _doRender(renderData) {\n        this._lastRenderPosition = renderData.lastRenderPosition;\n        const ta = this.textArea;\n        const tac = this.textAreaCover;\n        applyFontInfo(ta, this._fontInfo);\n        ta.setTop(renderData.top);\n        ta.setLeft(renderData.left);\n        ta.setWidth(renderData.width);\n        ta.setHeight(renderData.height);\n        ta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n        ta.setFontStyle(renderData.italic ? 'italic' : '');\n        if (renderData.bold) {\n            // fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n            ta.setFontWeight('bold');\n        }\n        ta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n        tac.setTop(renderData.useCover ? renderData.top : 0);\n        tac.setLeft(renderData.useCover ? renderData.left : 0);\n        tac.setWidth(renderData.useCover ? renderData.width : 0);\n        tac.setHeight(renderData.useCover ? renderData.height : 0);\n        const options = this._context.configuration.options;\n        if (options.get(52 /* EditorOption.glyphMargin */)) {\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n        }\n        else {\n            if (options.get(62 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */) {\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n            }\n            else {\n                tac.setClassName('monaco-editor-background textAreaCover');\n            }\n        }\n    }\n}\nfunction measureText(text, fontInfo) {\n    if (text.length === 0) {\n        return 0;\n    }\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.top = '-50000px';\n    container.style.width = '50000px';\n    const regularDomNode = document.createElement('span');\n    applyFontInfo(regularDomNode, fontInfo);\n    regularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n    regularDomNode.append(text);\n    container.appendChild(regularDomNode);\n    document.body.appendChild(container);\n    const res = regularDomNode.offsetWidth;\n    document.body.removeChild(container);\n    return res;\n}\n"],"mappings":"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"}]}