{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["strings","Position","Range","_debugComposition","TextAreaState","value","selectionStart","selectionEnd","selectionStartPosition","selectionEndPosition","length","reason","textArea","select","console","log","toString","setValue","setSelectionRange","offset","str","substring","_finishDeduceEditorPosition","str1","indexOf","String","fromCharCode","str2","anchor","deltaText","signum","lineFeedCnt","lastLineFeedIndex","getValue","getSelectionStart","getSelectionEnd","previousState","currentState","couldBeEmojiInput","text","replacePrevCharCnt","replaceNextCharCnt","positionDelta","prefixLength","Math","min","commonPrefixLength","suffixLength","commonSuffixLength","previousValue","currentValue","previousSelectionStart","previousSelectionEnd","currentSelectionStart","currentSelectionEnd","replacePreviousCharacters","EMPTY","PagedScreenReaderStrategy","lineNumber","linesPerPage","floor","page","startLineNumber","endLineNumber","model","selection","trimLongText","selectionStartPage","_getPageOfLine","selectionStartPageRange","_getRangeForPage","selectionEndPage","selectionEndPageRange","pretextRange","intersectRanges","startColumn","pretext","getValueInRange","lastLine","getLineCount","lastLineMaxColumn","getLineMaxColumn","posttextRange","endColumn","posttext","selectionRange1","selectionRange2","LIMIT_CHARS"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nexport const _debugComposition = false;\nexport class TextAreaState {\n    constructor(value, selectionStart, selectionEnd, selectionStartPosition, selectionEndPosition) {\n        this.value = value;\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n        this.selectionStartPosition = selectionStartPosition;\n        this.selectionEndPosition = selectionEndPosition;\n    }\n    toString() {\n        return `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n    }\n    static readFromTextArea(textArea) {\n        return new TextAreaState(textArea.getValue(), textArea.getSelectionStart(), textArea.getSelectionEnd(), null, null);\n    }\n    collapseSelection() {\n        return new TextAreaState(this.value, this.value.length, this.value.length, null, null);\n    }\n    writeToTextArea(reason, textArea, select) {\n        if (_debugComposition) {\n            console.log(`writeToTextArea ${reason}: ${this.toString()}`);\n        }\n        textArea.setValue(reason, this.value);\n        if (select) {\n            textArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n        }\n    }\n    deduceEditorPosition(offset) {\n        if (offset <= this.selectionStart) {\n            const str = this.value.substring(offset, this.selectionStart);\n            return this._finishDeduceEditorPosition(this.selectionStartPosition, str, -1);\n        }\n        if (offset >= this.selectionEnd) {\n            const str = this.value.substring(this.selectionEnd, offset);\n            return this._finishDeduceEditorPosition(this.selectionEndPosition, str, 1);\n        }\n        const str1 = this.value.substring(this.selectionStart, offset);\n        if (str1.indexOf(String.fromCharCode(8230)) === -1) {\n            return this._finishDeduceEditorPosition(this.selectionStartPosition, str1, 1);\n        }\n        const str2 = this.value.substring(offset, this.selectionEnd);\n        return this._finishDeduceEditorPosition(this.selectionEndPosition, str2, -1);\n    }\n    _finishDeduceEditorPosition(anchor, deltaText, signum) {\n        let lineFeedCnt = 0;\n        let lastLineFeedIndex = -1;\n        while ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n            lineFeedCnt++;\n        }\n        return [anchor, signum * deltaText.length, lineFeedCnt];\n    }\n    static deduceInput(previousState, currentState, couldBeEmojiInput) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionStart, currentState.selectionStart);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd, currentState.value.length - currentState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        if (currentSelectionStart === currentSelectionEnd) {\n            // no current selection\n            const replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n            if (_debugComposition) {\n                console.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n            }\n            return {\n                text: currentValue,\n                replacePrevCharCnt: replacePreviousCharacters,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        // there is a current selection => composition case\n        const replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n        return {\n            text: currentValue,\n            replacePrevCharCnt: replacePreviousCharacters,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n    }\n    static deduceAndroidCompositionInput(previousState, currentState) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceAndroidCompositionInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        if (previousState.value === currentState.value) {\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: currentState.selectionEnd - previousState.selectionEnd\n            };\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        return {\n            text: currentValue,\n            replacePrevCharCnt: previousSelectionEnd,\n            replaceNextCharCnt: previousValue.length - previousSelectionEnd,\n            positionDelta: currentSelectionEnd - currentValue.length\n        };\n    }\n}\nTextAreaState.EMPTY = new TextAreaState('', 0, 0, null, null);\nexport class PagedScreenReaderStrategy {\n    static _getPageOfLine(lineNumber, linesPerPage) {\n        return Math.floor((lineNumber - 1) / linesPerPage);\n    }\n    static _getRangeForPage(page, linesPerPage) {\n        const offset = page * linesPerPage;\n        const startLineNumber = offset + 1;\n        const endLineNumber = offset + linesPerPage;\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n    }\n    static fromEditorSelection(previousState, model, selection, linesPerPage, trimLongText) {\n        const selectionStartPage = PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber, linesPerPage);\n        const selectionStartPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionStartPage, linesPerPage);\n        const selectionEndPage = PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber, linesPerPage);\n        const selectionEndPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionEndPage, linesPerPage);\n        const pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn));\n        let pretext = model.getValueInRange(pretextRange, 1 /* EndOfLinePreference.LF */);\n        const lastLine = model.getLineCount();\n        const lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n        const posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn));\n        let posttext = model.getValueInRange(posttextRange, 1 /* EndOfLinePreference.LF */);\n        let text;\n        if (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n            // take full selection\n            text = model.getValueInRange(selection, 1 /* EndOfLinePreference.LF */);\n        }\n        else {\n            const selectionRange1 = selectionStartPageRange.intersectRanges(selection);\n            const selectionRange2 = selectionEndPageRange.intersectRanges(selection);\n            text = (model.getValueInRange(selectionRange1, 1 /* EndOfLinePreference.LF */)\n                + String.fromCharCode(8230)\n                + model.getValueInRange(selectionRange2, 1 /* EndOfLinePreference.LF */));\n        }\n        // Chromium handles very poorly text even of a few thousand chars\n        // Cut text to avoid stalling the entire UI\n        if (trimLongText) {\n            const LIMIT_CHARS = 500;\n            if (pretext.length > LIMIT_CHARS) {\n                pretext = pretext.substring(pretext.length - LIMIT_CHARS, pretext.length);\n            }\n            if (posttext.length > LIMIT_CHARS) {\n                posttext = posttext.substring(0, LIMIT_CHARS);\n            }\n            if (text.length > 2 * LIMIT_CHARS) {\n                text = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n            }\n        }\n        return new TextAreaState(pretext + text + posttext, pretext.length, pretext.length + text.length, new Position(selection.startLineNumber, selection.startColumn), new Position(selection.endLineNumber, selection.endColumn));\n    }\n}\n"],"mappings":"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"}]}