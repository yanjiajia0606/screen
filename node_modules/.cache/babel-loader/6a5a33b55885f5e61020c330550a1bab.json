{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js!/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/babel.config.js","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createStyleSheet","PagedList","DefaultStyleController","isSelectionRangeChangeEvent","isSelectionSingleChangeEvent","List","TypeNavigationMode","Table","TreeFindMode","AsyncDataTree","CompressibleAsyncDataTree","DataTree","CompressibleObjectTree","ObjectTree","Emitter","Event","combinedDisposable","Disposable","DisposableStore","dispose","toDisposable","localize","IConfigurationService","Extensions","ConfigurationExtensions","ContextKeyExpr","IContextKeyService","RawContextKey","InputFocusedContextKey","IContextViewService","createDecorator","IInstantiationService","IKeybindingService","Registry","attachListStyler","computeStyles","defaultListStyles","IThemeService","IListService","ListService","_themeService","disposables","lists","_lastFocusedWidget","undefined","_hasCreatedStyleController","widget","_a","_b","getHTMLElement","classList","remove","add","extraContextKeys","styleController","some","l","Error","registeredList","push","document","activeElement","setLastFocusedList","onDidFocus","splice","indexOf","onDidDispose","filter","RawWorkbenchListFocusContextKey","WorkbenchListSupportsMultiSelectContextKey","WorkbenchListFocusContextKey","and","not","WorkbenchListHasSelectionOrFocus","WorkbenchListDoubleSelection","WorkbenchListMultiSelection","WorkbenchListSelectionNavigation","WorkbenchListSupportsFind","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementHasParent","WorkbenchTreeElementCanExpand","WorkbenchTreeElementHasChild","WorkbenchTreeFindOpen","WorkbenchListTypeNavigationModeKey","WorkbenchListAutomaticKeyboardNavigationLegacyKey","createScopedContextKeyService","contextKeyService","result","createScoped","bindTo","multiSelectModifierSettingKey","openModeSettingKey","horizontalScrollingKey","defaultFindModeSettingKey","keyboardNavigationSettingKey","treeIndentKey","treeRenderIndentGuidesKey","listSmoothScrolling","mouseWheelScrollSensitivityKey","fastScrollSensitivityKey","treeExpandMode","useAltAsMultipleSelectionModifier","configurationService","getValue","MultipleSelectionController","registerListeners","_register","onDidChangeConfiguration","e","affectsConfiguration","event","browserEvent","altKey","toWorkbenchListOptions","accessor","options","get","keybindingService","assign","keyboardNavigationDelegate","mightProducePrintableCharacter","smoothScrolling","Boolean","mouseWheelScrollSensitivity","fastScrollSensitivity","multipleSelectionController","keyboardNavigationEventFilter","createKeyboardNavigationEventFilter","WorkbenchList","user","container","delegate","renderers","listService","themeService","instantiationService","horizontalScrolling","invokeFunction","workbenchListOptions","workbenchListOptionsDisposable","keyboardSupport","getColorTheme","listSupportsMultiSelect","set","multipleSelectionSupport","listSelectionNavigation","selectionNavigation","listHasSelectionOrFocus","listDoubleSelection","listMultiSelection","_useAltAsMultipleSelectionModifier","register","overrideStyles","updateStyles","onDidChangeSelection","selection","getSelection","focus","getFocus","bufferChangeEvents","onDidChangeFocus","keys","updateOptions","navigator","ListResourceNavigator","styles","_styler","WorkbenchPagedList","WorkbenchTable","columns","TableResourceNavigator","ResourceNavigator","_onDidOpen","onDidOpen","KeyboardEvent","onSelectionFromKeyboard","onPointer","element","onMouseDblClick","openOnSingleClick","elements","selectionKeyboardEvent","preserveFocus","pinned","sideBySide","_open","getSelectedElement","isDoubleClick","detail","isMiddleClick","button","ctrlKey","metaKey","onTwistie","contains","offsetX","fire","editorOptions","revealIfVisible","getSelectedElements","TreeResourceNavigator","inChord","toKeybinding","isModifierKey","softDispatch","enterChord","WorkbenchObjectTree","workbenchTreeDataPreamble","treeOptions","getTypeNavigationMode","disposable","internals","WorkbenchTreeInternals","WorkbenchCompressibleObjectTree","updateStyleOverrides","WorkbenchDataTree","dataSource","WorkbenchAsyncDataTree","WorkbenchCompressibleAsyncDataTree","virtualDelegate","compressionDelegate","getDefaultTreeFindMode","value","Highlight","Filter","deprecatedValue","contextViewService","modeString","getContextKeyValue","Automatic","Trigger","modeBoolean","additionalScrollHeight","indent","renderIndentGuides","defaultFindMode","hideTwistiesOfChildlessElements","expandOnlyOnTwistieClick","contextViewProvider","tree","listSupportFindWidget","findWidgetEnabled","hasSelectionOrFocus","hasDoubleSelection","hasMultiSelection","treeElementCanCollapse","treeElementHasParent","treeElementCanExpand","treeElementHasChild","treeFindOpen","updateCollapseContextKeys","node","getNode","collapsible","collapsed","getParentElement","getFirstElementChild","interestingContextKeys","Set","onDidChangeCollapseState","onDidChangeModel","onDidChangeFindOpenState","enabled","newOptions","onDidChangeContext","affectsSome","typeNavigationMode","styler","None","configurationRegistry","as","Configuration","registerConfiguration","id","order","title","type","properties","enum","markdownEnumDescriptions","default","description","comment","minimum","maximum","markdownDescription","enumDescriptions","deprecated","deprecationMessage"],"sources":["/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createStyleSheet } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List, TypeNavigationMode } from '../../../base/browser/ui/list/listWidget.js';\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\nimport { TreeFindMode } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { CompressibleObjectTree, ObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable, DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { attachListStyler, computeStyles, defaultListStyles } from '../../theme/common/styler.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nexport const IListService = createDecorator('listService');\nlet ListService = class ListService {\n    constructor(_themeService) {\n        this._themeService = _themeService;\n        this.disposables = new DisposableStore();\n        this.lists = [];\n        this._lastFocusedWidget = undefined;\n        this._hasCreatedStyleController = false;\n    }\n    get lastFocusedList() {\n        return this._lastFocusedWidget;\n    }\n    setLastFocusedList(widget) {\n        var _a, _b;\n        if (widget === this._lastFocusedWidget) {\n            return;\n        }\n        (_a = this._lastFocusedWidget) === null || _a === void 0 ? void 0 : _a.getHTMLElement().classList.remove('last-focused');\n        this._lastFocusedWidget = widget;\n        (_b = this._lastFocusedWidget) === null || _b === void 0 ? void 0 : _b.getHTMLElement().classList.add('last-focused');\n    }\n    register(widget, extraContextKeys) {\n        if (!this._hasCreatedStyleController) {\n            this._hasCreatedStyleController = true;\n            // create a shared default tree style sheet for performance reasons\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\n            this.disposables.add(attachListStyler(styleController, this._themeService));\n        }\n        if (this.lists.some(l => l.widget === widget)) {\n            throw new Error('Cannot register the same widget multiple times');\n        }\n        // Keep in our lists list\n        const registeredList = { widget, extraContextKeys };\n        this.lists.push(registeredList);\n        // Check for currently being focused\n        if (widget.getHTMLElement() === document.activeElement) {\n            this.setLastFocusedList(widget);\n        }\n        return combinedDisposable(widget.onDidFocus(() => this.setLastFocusedList(widget)), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\n            this.lists = this.lists.filter(l => l !== registeredList);\n            if (this._lastFocusedWidget === widget) {\n                this.setLastFocusedList(undefined);\n            }\n        }));\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n};\nListService = __decorate([\n    __param(0, IThemeService)\n], ListService);\nexport { ListService };\nexport const RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey));\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport const WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\nexport const WorkbenchListSupportsFind = new RawContextKey('listSupportsFind', true);\nexport const WorkbenchTreeElementCanCollapse = new RawContextKey('treeElementCanCollapse', false);\nexport const WorkbenchTreeElementHasParent = new RawContextKey('treeElementHasParent', false);\nexport const WorkbenchTreeElementCanExpand = new RawContextKey('treeElementCanExpand', false);\nexport const WorkbenchTreeElementHasChild = new RawContextKey('treeElementHasChild', false);\nexport const WorkbenchTreeFindOpen = new RawContextKey('treeFindOpen', false);\nconst WorkbenchListTypeNavigationModeKey = 'listTypeNavigationMode';\n/**\n * @deprecated in favor of WorkbenchListTypeNavigationModeKey\n */\nconst WorkbenchListAutomaticKeyboardNavigationLegacyKey = 'listAutomaticKeyboardNavigation';\nfunction createScopedContextKeyService(contextKeyService, widget) {\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\n    RawWorkbenchListFocusContextKey.bindTo(result);\n    return result;\n}\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nconst openModeSettingKey = 'workbench.list.openMode';\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nconst defaultFindModeSettingKey = 'workbench.list.defaultFindMode';\n/** @deprecated in favor of workbench.list.defaultFindMode */\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nconst treeIndentKey = 'workbench.tree.indent';\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\nconst mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\nconst fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\nconst treeExpandMode = 'workbench.tree.expandMode';\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\nclass MultipleSelectionController extends Disposable {\n    constructor(configurationService) {\n        super();\n        this.configurationService = configurationService;\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\n            }\n        }));\n    }\n    isSelectionSingleChangeEvent(event) {\n        if (this.useAltAsMultipleSelectionModifier) {\n            return event.browserEvent.altKey;\n        }\n        return isSelectionSingleChangeEvent(event);\n    }\n    isSelectionRangeChangeEvent(event) {\n        return isSelectionRangeChangeEvent(event);\n    }\n}\nfunction toWorkbenchListOptions(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const keybindingService = accessor.get(IKeybindingService);\n    const disposables = new DisposableStore();\n    const result = Object.assign(Object.assign({}, options), { keyboardNavigationDelegate: { mightProducePrintableCharacter(e) { return keybindingService.mightProducePrintableCharacter(e); } }, smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey), fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey), multipleSelectionController: (_a = options.multipleSelectionController) !== null && _a !== void 0 ? _a : disposables.add(new MultipleSelectionController(configurationService)), keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(keybindingService) });\n    return [result, disposables];\n}\nlet WorkbenchList = class WorkbenchList extends List {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n};\nWorkbenchList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IThemeService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchList);\nexport { WorkbenchList };\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables = new DisposableStore();\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.horizontalScrolling = options.horizontalScrolling;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.overrideStyles) {\n            this.disposables.add(attachListStyler(this, themeService, options.overrideStyles));\n        }\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchPagedList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IThemeService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchPagedList);\nexport { WorkbenchPagedList };\nlet WorkbenchTable = class WorkbenchTable extends Table {\n    constructor(user, container, delegate, columns, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, columns, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new TableResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchTable = __decorate([\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService),\n    __param(10, IInstantiationService)\n], WorkbenchTable);\nexport { WorkbenchTable };\nclass ResourceNavigator extends Disposable {\n    constructor(widget, options) {\n        var _a;\n        super();\n        this.widget = widget;\n        this._onDidOpen = this._register(new Emitter());\n        this.onDidOpen = this._onDidOpen.event;\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => e.browserEvent instanceof KeyboardEvent)(e => this.onSelectionFromKeyboard(e)));\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\n        if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\n            this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n            this._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(() => {\n                this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n            }));\n        }\n        else {\n            this.openOnSingleClick = (_a = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _a !== void 0 ? _a : true;\n        }\n    }\n    onSelectionFromKeyboard(event) {\n        if (event.elements.length !== 1) {\n            return;\n        }\n        const selectionKeyboardEvent = event.browserEvent;\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n        const sideBySide = false;\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n    onPointer(element, browserEvent) {\n        if (!this.openOnSingleClick) {\n            return;\n        }\n        const isDoubleClick = browserEvent.detail === 2;\n        if (isDoubleClick) {\n            return;\n        }\n        const isMiddleClick = browserEvent.button === 1;\n        const preserveFocus = true;\n        const pinned = isMiddleClick;\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    onMouseDblClick(element, browserEvent) {\n        if (!browserEvent) {\n            return;\n        }\n        // copied from AbstractTree\n        const target = browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16);\n        if (onTwistie) {\n            return;\n        }\n        const preserveFocus = false;\n        const pinned = true;\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n        if (!element) {\n            return;\n        }\n        this._onDidOpen.fire({\n            editorOptions: {\n                preserveFocus,\n                pinned,\n                revealIfVisible: true\n            },\n            sideBySide,\n            element,\n            browserEvent\n        });\n    }\n}\nclass ListResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n        this.widget = widget;\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TableResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TreeResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        var _a;\n        return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\n    }\n}\nfunction createKeyboardNavigationEventFilter(keybindingService) {\n    let inChord = false;\n    return event => {\n        if (event.toKeybinding().isModifierKey()) {\n            return false;\n        }\n        if (inChord) {\n            inChord = false;\n            return false;\n        }\n        const result = keybindingService.softDispatch(event, event.target);\n        if (result === null || result === void 0 ? void 0 : result.enterChord) {\n            inChord = true;\n            return false;\n        }\n        inChord = false;\n        return !result;\n    };\n}\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService)\n], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService)\n], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IThemeService),\n    __param(10, IConfigurationService)\n], WorkbenchDataTree);\nexport { WorkbenchDataTree };\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    get onDidOpen() { return this.internals.onDidOpen; }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchAsyncDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IThemeService),\n    __param(10, IConfigurationService)\n], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleAsyncDataTree = __decorate([\n    __param(7, IInstantiationService),\n    __param(8, IContextKeyService),\n    __param(9, IListService),\n    __param(10, IThemeService),\n    __param(11, IConfigurationService)\n], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\nfunction getDefaultTreeFindMode(configurationService) {\n    const value = configurationService.getValue(defaultFindModeSettingKey);\n    if (value === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (value === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    const deprecatedValue = configurationService.getValue(keyboardNavigationSettingKey);\n    if (deprecatedValue === 'simple' || deprecatedValue === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (deprecatedValue === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    return undefined;\n}\nfunction workbenchTreeDataPreamble(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const contextViewService = accessor.get(IContextViewService);\n    const contextKeyService = accessor.get(IContextKeyService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const getTypeNavigationMode = () => {\n        // give priority to the context key value to specify a value\n        const modeString = contextKeyService.getContextKeyValue(WorkbenchListTypeNavigationModeKey);\n        if (modeString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (modeString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        // also check the deprecated context key to set the mode to 'trigger'\n        const modeBoolean = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        if (modeBoolean === false) {\n            return TypeNavigationMode.Trigger;\n        }\n        return undefined;\n    };\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    const [workbenchListOptions, disposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n    const additionalScrollHeight = options.additionalScrollHeight;\n    return {\n        getTypeNavigationMode,\n        disposable,\n        options: Object.assign(Object.assign({ \n            // ...options, // TODO@Joao why is this not splatted here?\n            keyboardSupport: false }, workbenchListOptions), { indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined, renderIndentGuides: configurationService.getValue(treeRenderIndentGuidesKey), smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), defaultFindMode: getDefaultTreeFindMode(configurationService), horizontalScrolling,\n            additionalScrollHeight, hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements, expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : (configurationService.getValue(treeExpandMode) === 'doubleClick'), contextViewProvider: contextViewService })\n    };\n}\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\n    constructor(tree, options, getTypeNavigationMode, overrideStyles, contextKeyService, listService, themeService, configurationService) {\n        var _a;\n        this.tree = tree;\n        this.themeService = themeService;\n        this.disposables = [];\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listSupportFindWidget = WorkbenchListSupportsFind.bindTo(this.contextKeyService);\n        this.listSupportFindWidget.set((_a = options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true);\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.treeElementCanCollapse = WorkbenchTreeElementCanCollapse.bindTo(this.contextKeyService);\n        this.treeElementHasParent = WorkbenchTreeElementHasParent.bindTo(this.contextKeyService);\n        this.treeElementCanExpand = WorkbenchTreeElementCanExpand.bindTo(this.contextKeyService);\n        this.treeElementHasChild = WorkbenchTreeElementHasChild.bindTo(this.contextKeyService);\n        this.treeFindOpen = WorkbenchTreeFindOpen.bindTo(this.contextKeyService);\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.updateStyleOverrides(overrideStyles);\n        const updateCollapseContextKeys = () => {\n            const focus = tree.getFocus()[0];\n            if (!focus) {\n                return;\n            }\n            const node = tree.getNode(focus);\n            this.treeElementCanCollapse.set(node.collapsible && !node.collapsed);\n            this.treeElementHasParent.set(!!tree.getParentElement(focus));\n            this.treeElementCanExpand.set(node.collapsible && node.collapsed);\n            this.treeElementHasChild.set(!!tree.getFirstElementChild(focus));\n        };\n        const interestingContextKeys = new Set();\n        interestingContextKeys.add(WorkbenchListTypeNavigationModeKey);\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.hasMultiSelection.set(selection.length > 1);\n                this.hasDoubleSelection.set(selection.length === 2);\n            });\n        }), tree.onDidChangeFocus(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n            updateCollapseContextKeys();\n        }), tree.onDidChangeCollapseState(updateCollapseContextKeys), tree.onDidChangeModel(updateCollapseContextKeys), tree.onDidChangeFindOpenState(enabled => this.treeFindOpen.set(enabled)), configurationService.onDidChangeConfiguration(e => {\n            let newOptions = {};\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            if (e.affectsConfiguration(treeIndentKey)) {\n                const indent = configurationService.getValue(treeIndentKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { indent });\n            }\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey)) {\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { renderIndentGuides });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                newOptions = Object.assign(Object.assign({}, newOptions), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(defaultFindModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                tree.updateOptions({ defaultFindMode: getDefaultTreeFindMode(configurationService) });\n            }\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                newOptions = Object.assign(Object.assign({}, newOptions), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n                newOptions = Object.assign(Object.assign({}, newOptions), { expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { fastScrollSensitivity });\n            }\n            if (Object.keys(newOptions).length > 0) {\n                tree.updateOptions(newOptions);\n            }\n        }), this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(interestingContextKeys)) {\n                tree.updateOptions({ typeNavigationMode: getTypeNavigationMode() });\n            }\n        }));\n        this.navigator = new TreeResourceNavigator(tree, Object.assign({ configurationService }, options));\n        this.disposables.push(this.navigator);\n    }\n    get onDidOpen() { return this.navigator.onDidOpen; }\n    updateOptions(options) {\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyleOverrides(overrideStyles) {\n        dispose(this.styler);\n        this.styler = overrideStyles ? attachListStyler(this.tree, this.themeService, overrideStyles) : Disposable.None;\n    }\n    dispose() {\n        this.disposables = dispose(this.disposables);\n        dispose(this.styler);\n        this.styler = undefined;\n    }\n};\nWorkbenchTreeInternals = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, IListService),\n    __param(6, IThemeService),\n    __param(7, IConfigurationService)\n], WorkbenchTreeInternals);\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n    id: 'workbench',\n    order: 7,\n    title: localize('workbenchConfigurationTitle', \"Workbench\"),\n    type: 'object',\n    properties: {\n        [multiSelectModifierSettingKey]: {\n            type: 'string',\n            enum: ['ctrlCmd', 'alt'],\n            markdownEnumDescriptions: [\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n            ],\n            default: 'ctrlCmd',\n            description: localize({\n                key: 'multiSelectModifier',\n                comment: [\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n                ]\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n        },\n        [openModeSettingKey]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize({\n                key: 'openModeModifier',\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n        },\n        [horizontalScrollingKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n        },\n        [treeIndentKey]: {\n            type: 'number',\n            default: 8,\n            minimum: 4,\n            maximum: 40,\n            description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\n        },\n        [treeRenderIndentGuidesKey]: {\n            type: 'string',\n            enum: ['none', 'onHover', 'always'],\n            default: 'onHover',\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n        },\n        [listSmoothScrolling]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\n        },\n        [mouseWheelScrollSensitivityKey]: {\n            type: 'number',\n            default: 1,\n            markdownDescription: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\")\n        },\n        [fastScrollSensitivityKey]: {\n            type: 'number',\n            default: 5,\n            description: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing `Alt`.\")\n        },\n        [defaultFindModeSettingKey]: {\n            type: 'string',\n            enum: ['highlight', 'filter'],\n            enumDescriptions: [\n                localize('defaultFindModeSettingKey.highlight', \"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('defaultFindModeSettingKey.filter', \"Filter elements when searching.\")\n            ],\n            default: 'highlight',\n            description: localize('defaultFindModeSettingKey', \"Controls the default find mode for lists and trees in the workbench.\")\n        },\n        [keyboardNavigationSettingKey]: {\n            type: 'string',\n            enum: ['simple', 'highlight', 'filter'],\n            enumDescriptions: [\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\n            ],\n            default: 'highlight',\n            description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\"),\n            deprecated: true,\n            deprecationMessage: localize('keyboardNavigationSettingKeyDeprecated', \"Please use 'workbench.list.defaultFindMode' instead.\")\n        },\n        [treeExpandMode]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\"),\n        }\n    }\n});\n"],"mappings":"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"}]}