{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/list/components.vue?vue&type=style&index=0&id=4b122d60&prod&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/list/components.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb21wb25lbnRzIHsKICAmX2NvbnRlbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgfQogICZfbGVmdCwKICAmX3JpZ2h0IHsKICAgIHdpZHRoOiAxMDAlOwogIH0KfQo="},{"version":3,"sources":["components.vue"],"names":[],"mappings":";AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"components.vue","sourceRoot":"src/page/list","sourcesContent":["<template>\n  <div>\n    <avue-crud ref=\"crud\"\n               :option=\"option\"\n               v-model=\"form\"\n               @row-save=\"rowSave\"\n               @row-update=\"rowUpdate\"\n               @row-del=\"rowDel\"\n               :before-open=\"beforeOpen\"\n               @selection-change=\"selectionChange\"\n               :data=\"data\">\n      <template slot-scope=\"{size,type,row,index}\"\n                slot=\"menu\">\n        <el-button :size=\"size\"\n                   icon=\"el-icon-edit\"\n                   :type=\"type\"\n                   @click=\"handleView(row,index)\">预览</el-button>\n      </template>\n      <template slot-scope=\"{}\"\n                slot=\"contentForm\">\n        <monaco-editor v-model=\"form.content\"\n                       :language=\"options.language\"\n                       :height=\"options.height\"\n                       :options=\"options\"></monaco-editor>\n        <br />\n        <el-button v-if=\"!view\"\n                   type=\"primary\"\n                   size=\"small\"\n                   icon=\"el-icon-check\"\n                   @click=\"handleOption\">运行</el-button>\n      </template>\n      <template slot-scope=\"{}\"\n                slot=\"viewForm\">\n        <avue-echart-vue :option=\"vueOption\"\n                         width=\"100%\"\n                         height=\"100%\"></avue-echart-vue>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"预览组件\"\n               :visible.sync=\"box\"\n               width=\"60%\">\n      <avue-echart-vue :option=\"vueOption\"\n                       width=\"100%\"\n                       height=\"100%\"></avue-echart-vue>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport AvueEchartVue from '@/echart/packages/vue';\nimport MonacoEditor from '@/page/components/monaco-editor'\nimport { getList, getObj, addObj, delObj, updateObj } from '@/api/components'\nexport default {\n  components: {\n    AvueEchartVue,\n    MonacoEditor\n  },\n  props: {\n    menu: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      box: false,\n      options: {\n        height: 300,\n        language: 'javascript',\n        fontSize: 12\n      },\n      content: '',\n      index: -1,\n      form: {},\n      vueOption: {},\n      data: [],\n      option: {\n        tip: false,\n        header: true,\n        menu: true,\n        selection: true,\n        dialogWidth: '70%',\n        labelWidth: 100,\n        index: true,\n        align: 'center',\n        headerAlign: 'center',\n        column: [\n          {\n            label: '组件名称',\n            prop: 'name',\n            row: true,\n            rules: [{\n              required: true,\n              message: \"请输入组件名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: '组件数据',\n            prop: 'content',\n            span: 24,\n            hide: true,\n          },\n          {\n            label: '组件预览',\n            prop: 'view',\n            span: 24,\n            hide: true,\n          }\n        ]\n      }\n    }\n  },\n  created () {\n    if (this.menu === false) {\n      this.option.header = false\n      this.option.menu = false\n    }\n    this.getList()\n  },\n  methods: {\n    selectionChange (val) {\n      this.$emit('change', val[0])\n    },\n    vaildData (id) {\n      return [0, 1, 2].includes(id)\n    },\n    beforeOpen (done, type) {\n      if (type == 'edit') {\n        getObj(this.form.id).then(res => {\n          const data = res.data.data;\n          this.form = data\n          this.handleOption()\n          done()\n        })\n      } else {\n        this.form.content = ''\n        this.handleOption()\n        done()\n      }\n\n    },\n    rowDel (row, index) {\n      if (this.vaildData(index) && this.$website.isDemo) {\n        this.$message.error(this.$website.isDemoTip)\n        return false;\n      }\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        delObj(row.id).then(() => {\n          this.$message.success('删除成功');\n          this.getList()\n        })\n      })\n    },\n    handleOption () {\n      this.vueOption = this.deepClone(this.form)\n    },\n    rowUpdate (row, index, done) {\n      if (this.vaildData(index) && this.$website.isDemo) {\n        done();\n        this.$message.error(this.$website.isDemoTip)\n        return false;\n      }\n      updateObj(row).then(() => {\n        done();\n        this.$message.success('修改成功');\n        this.getList()\n\n      })\n    },\n    rowSave (row, done) {\n      addObj(row).then(() => {\n        this.$message.success('新增成功');\n        this.getList()\n        done();\n      })\n    },\n    handleView (row, index) {\n      getObj(row.id).then(res => {\n        const data = res.data.data;\n        this.vueOption = this.deepClone({\n          content: data.content\n        })\n        this.box = true\n      })\n    },\n    getList () {\n      getList({\n        current: 1,\n        size: 100,\n      }).then(res => {\n        const data = res.data.data;\n        this.data = data.records;\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.components {\n  &_content {\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n  }\n  &_left,\n  &_right {\n    width: 100%;\n  }\n}\n</style>"]}]}