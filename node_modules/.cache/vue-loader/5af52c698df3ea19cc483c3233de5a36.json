{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/components/apiPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/components/apiPanel.vue","mtime":1671182834263},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGdldEFwaVNjb3VyY2UsIGdldEFwaUdyb3VwIH0gZnJvbSAnQC9hcGkvdjInCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRiOiAnJywKICAgICAgZGljOiBbXSwKICAgICAgYXBpRGljOiBbXSwKICAgICAgcGF0aHM6IHt9LAogICAgICBhcGlTcmM6ICcnLAogICAgICBhcGlJdGVtOiB7CiAgICAgICAgbWV0aG9kOiAnJywKICAgICAgICBwYXJhbXM6IHt9LAogICAgICAgIGJvZHk6IHt9LAogICAgICAgIHB1YmxpY1BhcmFtczoge30sCiAgICAgIH0sCiAgICAgIC8vIGFwaU9iamVjdDogewogICAgICAvLyAgIGFwaVNyYzogJycsCiAgICAgIC8vICAgbWV0aG9kOiAnJywKICAgICAgLy8gfSwKICAgICAgLy8gICBhcGlPYmplY3Q6ICIiLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIGFwaVBhcmFtcygpIHsKICAgIC8vICAgaWYgKHRoaXMucGF0aHNbdGhpcy5hcGlTcmNdKSB7CiAgICAvLyAgICAgaWYgKHRoaXMucGF0aHNbdGhpcy5hcGlTcmNdLmdldCkgewogICAgLy8gICAgICAgdGhpcy5tZXRob2QgPSAnR0VUJwogICAgLy8gICAgIH0gZWxzZSBpZiAodGhpcy5wYXRoc1t0aGlzLmFwaVNyY10ucG9zdCkgewogICAgLy8gICAgICAgdGhpcy5tZXRob2QgPSAnUE9TVCcKICAgIC8vICAgICB9CiAgICAvLyAgICAgdGhpcy4kZW1pdCgnZ2V0QXBpJywgewogICAgLy8gICAgICAgLy8gdXJsOiAnL2F2dWUnICsgdGhpcy5hcGlTcmMsCiAgICAvLyAgICAgICB1cmw6ICcvcGllJywKICAgIC8vICAgICAgIG1ldGhvZDogdGhpcy5tZXRob2QudG9Mb3dlckNhc2UoKSwKICAgIC8vICAgICB9KQogICAgLy8gICAgIHJldHVybiB0aGlzLnBhdGhzW3RoaXMuYXBpU3JjXS5nZXQgfHwgdGhpcy5wYXRoc1t0aGlzLmFwaVNyY10ucG9zdAogICAgLy8gICB9CiAgICAvLyAgIHJldHVybiB7fQogICAgLy8gfSwKICAgIC8vIG1ldGhvZCgpIHsKICAgIC8vICAgaWYgKHRoaXMucGF0aHNbdGhpcy5hcGlTcmNdKSB7CiAgICAvLyAgICAgaWYgKHRoaXMucGF0aHNbdGhpcy5hcGlTcmNdLmdldCkgewogICAgLy8gICAgICAgcmV0dXJuICdHRVQnCiAgICAvLyAgICAgfSBlbHNlIGlmICh0aGlzLnBhdGhzW3RoaXMuYXBpU3JjXS5wb3N0KSB7CiAgICAvLyAgICAgICByZXR1cm4gJ1BPU1QnCiAgICAvLyAgICAgfSBlbHNlIHsKICAgIC8vICAgICAgIHJldHVybiAnJwogICAgLy8gICAgIH0KICAgIC8vICAgfQogICAgLy8gfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEdyb3VwKCkgewogICAgICAvLyBnZXRBcGlHcm91cCgpLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzCiAgICAgIC8vICAgaWYgKGRhdGEubGVuZ3RoKSB7CiAgICAgIC8vICAgICB0aGlzLmRpYyA9IGRhdGEubWFwKChpdGVtKSA9PiB7CiAgICAgIC8vICAgICAgIGlmIChpdGVtLm5hbWUgPT0gJ+a8j+a0nuaooeWdlycpIHsKICAgICAgLy8gICAgICAgICByZXR1cm4gewogICAgICAvLyAgICAgICAgICAgbGFiZWw6IGl0ZW0ubmFtZSwKICAgICAgLy8gICAgICAgICAgIHZhbHVlOiBpdGVtLm5hbWUsCiAgICAgIC8vICAgICAgICAgICBpdGVtLAogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgfSBlbHNlIHsKICAgICAgLy8gICAgICAgICByZXR1cm4ge30KICAgICAgLy8gICAgICAgfQogICAgICAvLyAgICAgfSkKICAgICAgLy8gICAgIHRoaXMuZGIgPSB0aGlzLmRpY1swXS52YWx1ZQogICAgICAvLyAgIH0KICAgICAgLy8gfSkKICAgIH0sCiAgICBnZXRBcGlMaXN0KGRiID0gdGhpcy5kYikgewogICAgICB0aGlzLmFwaURpYy5wdXNoKHsKICAgICAgICBsYWJlbDogJ+S6i+S7tuetiee6p+WIhuW4gycsCiAgICAgICAgdmFsdWU6ICcvYXBpL2Nkb3MtYW5hbHlzaXMvU2VjRXZlbnRMYXJnZVNjcmVlbi9nZXRFdmVudENvdW50UGllJywKICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgIHBhcmFtczoge30sCiAgICAgICAgYm9keToge30sCiAgICAgICAgcHVibGljUGFyYW1zOiB7fSwKICAgICAgfSkKICAgICAgLy8gZ2V0QXBpU2NvdXJjZShkYikudGhlbigocmVzKSA9PiB7CiAgICAgIC8vICAgY29uc3QgeyBwYXRocyB9ID0gcmVzLmRhdGEKICAgICAgLy8gICB0aGlzLnBhdGhzID0gcGF0aHMKICAgICAgLy8gICBmb3IgKGxldCB1cmwgaW4gcGF0aHMpIHsKICAgICAgLy8gICAgIGlmIChwYXRoc1t1cmxdLmdldCkgewogICAgICAvLyAgICAgICBjb25zdCBvYmogPSBwYXRoc1t1cmxdLmdldAogICAgICAvLyAgICAgICB0aGlzLmFwaURpYy5wdXNoKHsKICAgICAgLy8gICAgICAgICBsYWJlbDogb2JqLnRhZ3NbMF0sCiAgICAgIC8vICAgICAgICAgdmFsdWU6IHVybCwKICAgICAgLy8gICAgICAgfSkKICAgICAgLy8gICAgIH0KICAgICAgLy8gICAgIC8vICAgdGhpcy5hcGlEaWMucHVzaCh7CiAgICAgIC8vICAgICAvLyAgICAgbGFiZWw6IHBhdGhzW2ldLnRhZ3NbMF0sCiAgICAgIC8vICAgICAvLyAgICAgdmFsdWU6IGksCiAgICAgIC8vICAgICAvLyAgIH0pOwogICAgICAvLyAgIH0KICAgICAgLy8gfSkKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRBcGlMaXN0KCkKICB9LAogIHdhdGNoOiB7CiAgICBhcGlTcmM6IHsKICAgICAgaGFuZGxlcigpIHsKICAgICAgICAvLyBpZiAodGhpcy5wYXRoc1t0aGlzLmFwaVNyY10pIHsKICAgICAgICAvLyAgIGlmICh0aGlzLnBhdGhzW3RoaXMuYXBpU3JjXS5nZXQpIHsKICAgICAgICAvLyAgICAgdGhpcy5tZXRob2QgPSAnR0VUJwogICAgICAgIC8vICAgfSBlbHNlIGlmICh0aGlzLnBhdGhzW3RoaXMuYXBpU3JjXS5wb3N0KSB7CiAgICAgICAgLy8gICAgIHRoaXMubWV0aG9kID0gJ1BPU1QnCiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gICB0aGlzLiRlbWl0KCd1cGRhdGVhcGknLCB7CiAgICAgICAgLy8gICAgIHVybDogJy9hcGknICsgdGhpcy5hcGlTcmMsCiAgICAgICAgLy8gICAgIG1ldGhvZDogdGhpcy5tZXRob2QudG9Mb3dlckNhc2UoKSwKICAgICAgICAvLyAgIH0pCiAgICAgICAgLy8gICB0aGlzLmFwaVBhcmFtcyA9CiAgICAgICAgLy8gICAgIHRoaXMucGF0aHNbdGhpcy5hcGlTcmNdLmdldCB8fCB0aGlzLnBhdGhzW3RoaXMuYXBpU3JjXS5wb3N0CiAgICAgICAgLy8gfSBlbHNlIHsKICAgICAgICAvLyAgIHRoaXMuYXBpUGFyYW1zID0ge30KICAgICAgICAvLyB9CiAgICAgICAgY29uc3QgYXBpRGF0YSA9IHRoaXMuYXBpRGljLmZpbmQoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09IHRoaXMuYXBpU3JjKQogICAgICAgIGlmIChhcGlEYXRhKSB7CiAgICAgICAgICB0aGlzLmFwaUl0ZW0gPSBPYmplY3QuYXNzaWduKHRoaXMuYXBpSXRlbSwgYXBpRGF0YSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5hcGlJdGVtID0gewogICAgICAgICAgICBtZXRob2Q6ICcnLAogICAgICAgICAgICBwYXJhbXM6IHt9LAogICAgICAgICAgICBib2R5OiB7fSwKICAgICAgICAgICAgcHVibGljUGFyYW1zOiB7fSwKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlYXBpJywgewogICAgICAgICAgdXJsOiB0aGlzLmFwaVNyYywKICAgICAgICAgIG1ldGhvZDogdGhpcy5hcGlJdGVtLm1ldGhvZC50b0xvd2VyQ2FzZSgpLAogICAgICAgIH0pCiAgICAgICAgLy8gdGhpcy5hcGlJdGVtID0gYXBpRGF0YQogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["apiPanel.vue"],"names":[],"mappings":";AAkfile":"apiPanel.vue","sourceRoot":"src/page/components","sourcesContent":["<!--\n * @Author: 闫佳佳 18332162809@163.com\n * @Date: 2022-11-01 17:57:55\n * @LastEditors: 闫佳佳 18332162809@163.com\n * @LastEditTime: 2022-12-16 17:27:12\n * @FilePath: /avue-data/src/page/components/apiPanel.vue\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n-->\n<template>\n  <div>\n    <!-- <el-form-item label=\"数据模块\">\n      <avue-select :dic=\"dic\" v-model=\"db\"></avue-select>\n    </el-form-item> -->\n    <el-form-item label=\"接口列表\">\n      <avue-select :dic=\"apiDic\" v-model=\"apiSrc\"></avue-select>\n    </el-form-item>\n    <el-form-item label=\"接口地址\" v-show=\"apiSrc\"\n      ><span class=\"no-warp\">{{ apiSrc }}</span>\n    </el-form-item>\n    <el-form-item label=\"请求方式\" v-show=\"apiSrc\">\n      <span class=\"no-warp post-method\">{{ apiItem.method }}</span>\n    </el-form-item>\n    <!-- <el-form-item label=\"接口描述\" v-show=\"apiSrc\">\n      {{ apiParams.description }}\n      <span>({{ apiParams.summary }})</span>\n    </el-form-item> -->\n\n    <el-form-item label=\"请求参数\" v-show=\"apiSrc\">\n      <!-- <span class=\"no-warp\">{{ this.apiVal }}</span> -->\n    </el-form-item>\n  </div>\n</template>\n\n<script>\nimport { getApiScource, getApiGroup } from '@/api/v2'\n\nexport default {\n  data() {\n    return {\n      db: '',\n      dic: [],\n      apiDic: [],\n      paths: {},\n      apiSrc: '',\n      apiItem: {\n        method: '',\n        params: {},\n        body: {},\n        publicParams: {},\n      },\n      // apiObject: {\n      //   apiSrc: '',\n      //   method: '',\n      // },\n      //   apiObject: \"\",\n    }\n  },\n  computed: {\n    // apiParams() {\n    //   if (this.paths[this.apiSrc]) {\n    //     if (this.paths[this.apiSrc].get) {\n    //       this.method = 'GET'\n    //     } else if (this.paths[this.apiSrc].post) {\n    //       this.method = 'POST'\n    //     }\n    //     this.$emit('getApi', {\n    //       // url: '/avue' + this.apiSrc,\n    //       url: '/pie',\n    //       method: this.method.toLowerCase(),\n    //     })\n    //     return this.paths[this.apiSrc].get || this.paths[this.apiSrc].post\n    //   }\n    //   return {}\n    // },\n    // method() {\n    //   if (this.paths[this.apiSrc]) {\n    //     if (this.paths[this.apiSrc].get) {\n    //       return 'GET'\n    //     } else if (this.paths[this.apiSrc].post) {\n    //       return 'POST'\n    //     } else {\n    //       return ''\n    //     }\n    //   }\n    // },\n  },\n  methods: {\n    getGroup() {\n      // getApiGroup().then((res) => {\n      //   const { data } = res\n      //   if (data.length) {\n      //     this.dic = data.map((item) => {\n      //       if (item.name == '漏洞模块') {\n      //         return {\n      //           label: item.name,\n      //           value: item.name,\n      //           item,\n      //         }\n      //       } else {\n      //         return {}\n      //       }\n      //     })\n      //     this.db = this.dic[0].value\n      //   }\n      // })\n    },\n    getApiList(db = this.db) {\n      this.apiDic.push({\n        label: '事件等级分布',\n        value: '/api/cdos-analysis/SecEventLargeScreen/getEventCountPie',\n        method: 'GET',\n        params: {},\n        body: {},\n        publicParams: {},\n      })\n      // getApiScource(db).then((res) => {\n      //   const { paths } = res.data\n      //   this.paths = paths\n      //   for (let url in paths) {\n      //     if (paths[url].get) {\n      //       const obj = paths[url].get\n      //       this.apiDic.push({\n      //         label: obj.tags[0],\n      //         value: url,\n      //       })\n      //     }\n      //     //   this.apiDic.push({\n      //     //     label: paths[i].tags[0],\n      //     //     value: i,\n      //     //   });\n      //   }\n      // })\n    },\n  },\n  created() {\n    this.getApiList()\n  },\n  watch: {\n    apiSrc: {\n      handler() {\n        // if (this.paths[this.apiSrc]) {\n        //   if (this.paths[this.apiSrc].get) {\n        //     this.method = 'GET'\n        //   } else if (this.paths[this.apiSrc].post) {\n        //     this.method = 'POST'\n        //   }\n        //   this.$emit('updateapi', {\n        //     url: '/api' + this.apiSrc,\n        //     method: this.method.toLowerCase(),\n        //   })\n        //   this.apiParams =\n        //     this.paths[this.apiSrc].get || this.paths[this.apiSrc].post\n        // } else {\n        //   this.apiParams = {}\n        // }\n        const apiData = this.apiDic.find((item) => item.value === this.apiSrc)\n        if (apiData) {\n          this.apiItem = Object.assign(this.apiItem, apiData)\n        } else {\n          this.apiItem = {\n            method: '',\n            params: {},\n            body: {},\n            publicParams: {},\n          }\n        }\n        this.$emit('updateapi', {\n          url: this.apiSrc,\n          method: this.apiItem.method.toLowerCase(),\n        })\n        // this.apiItem = apiData\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.no-warp {\n  white-space: nowrap;\n}\n.post-method {\n  padding: 0 5px;\n  background: #0088ff;\n  margin-right: 5px;\n  color: #fff;\n}\n</style>\n"]}]}