{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/flop/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/flop/index.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBjcmVhdGUgZnJvbSAiLi4vLi4vY3JlYXRlIjsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlKHsKICBuYW1lOiAiZmxvcCIsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBhY3RpdmU6IDAsCiAgICAgIHN0YXR1c0RJQzogWyIuIiwgIiwiXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0FycmF5ICgpIHsKICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5kYXRhQ2hhcnQpOwogICAgfSwKICAgIGRlY2ltYWxzICgpIHsKICAgICAgcmV0dXJuIHRoaXMub3B0aW9uLmRlY2ltYWxzIHx8IDAKICAgIH0sCiAgICBsaXN0RGF0YSAoKSB7CiAgICAgIGlmICh0aGlzLmlzQXJyYXkpIHsKICAgICAgICByZXR1cm4gdGhpcy5kYXRhQ2hhcnQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIFt0aGlzLmRhdGFDaGFydF07CiAgICAgIH0KICAgIH0sCiAgICBpc1dob2xlICgpIHsKICAgICAgcmV0dXJuIHRoaXMudmFpbGREYXRhKHRoaXMub3B0aW9uLndob2xlLCBmYWxzZSk7CiAgICB9LAogICAgdHlwZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLm9wdGlvbi50eXBlOwogICAgfSwKICAgIGlzQm9yZGVyICgpIHsKICAgICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gJ2JvcmRlcic7CiAgICB9LAogICAgaXNJbWcgKCkgewogICAgICByZXR1cm4gdGhpcy50eXBlID09PSAnaW1nJzsKICAgIH0sCiAgICBzcGFuICgpIHsKICAgICAgcmV0dXJuIHRoaXMub3B0aW9uLnNwYW4gfHwgMTsKICAgIH0sCiAgICBwcmVmaXhTdHlsZSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGlzcGxheTogdGhpcy5vcHRpb24ucHJlZml4SW5saW5lID8gJ2lubGluZS1ibG9jaycgOiAnYmxvY2snLAogICAgICAgIHRleHRBbGlnbjogdGhpcy5vcHRpb24ucHJlZml4VGV4dEFsaWduLAogICAgICAgIG1hcmdpbkJvdHRvbTogdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5wcmVmaXhTcGxpdHkpLAogICAgICAgIG1hcmdpblJpZ2h0OiB0aGlzLnNldFB4KHRoaXMub3B0aW9uLnByZWZpeFNwbGl0eCksCiAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnByZWZpeENvbG9yIHx8ICIjZmZmIiwKICAgICAgICBmb250U2l6ZTogdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5wcmVmaXhGb250U2l6ZSB8fCAyNCkKICAgICAgfTsKICAgIH0sCiAgICBzdWZmaXhTdHlsZSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGlzcGxheTogdGhpcy5vcHRpb24uc3VmZml4SW5saW5lID8gJ2lubGluZS1ibG9jaycgOiAnYmxvY2snLAogICAgICAgIHRleHRBbGlnbjogdGhpcy5vcHRpb24uc3VmZml4VGV4dEFsaWduLAogICAgICAgIG1hcmdpblRvcDogdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5zdWZmaXhTcGxpdHkpLAogICAgICAgIG1hcmdpbkxlZnQ6IHRoaXMuc2V0UHgodGhpcy5vcHRpb24uc3VmZml4U3BsaXR4KSwKICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24uc3VmZml4Q29sb3IgfHwgIiNmZmYiLAogICAgICAgIGZvbnRTaXplOiB0aGlzLnNldFB4KHRoaXMub3B0aW9uLnN1ZmZpeEZvbnRTaXplIHx8IDI0KQogICAgICB9OwogICAgfSwKICAgIHN0eWxlUGFyZW50U2l6ZSAoKSB7CiAgICAgIGxldCBvYmogPSB7CiAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsCiAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsCiAgICAgICAgd2lkdGg6ICgxMDAgLyB0aGlzLnNwYW4pIC0gMSArICclJwogICAgICB9CiAgICAgIGlmICh0aGlzLm9wdGlvbi5zcGxpdHgpIHsKICAgICAgICBvYmoucGFkZGluZ1JpZ2h0ID0gdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5zcGxpdHgpCiAgICAgIH0KICAgICAgaWYgKHRoaXMub3B0aW9uLnNwbGl0eSkgewogICAgICAgIG9iai5wYWRkaW5nQm90dG9tID0gdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5zcGxpdHkpCiAgICAgIH0KICAgICAgcmV0dXJuIG9iagogICAgfSwKICAgIHN0eWxlUGFyZW50TmFtZSAoKSB7CiAgICAgIGxldCBvYmogPSB7fTsKICAgICAgaWYgKCF0aGlzLmlzSW1nICYmICF0aGlzLmlzQm9yZGVyKSB7CiAgICAgICAgb2JqID0gT2JqZWN0LmFzc2lnbihvYmosIHsKICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke3RoaXMub3B0aW9uLmJhY2tncm91bmRJbWFnZX0pYCwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5vcHRpb24uYmFja2dyb3VuZENvbG9yCiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMub3B0aW9uLnBhZGRpbmcpIHsKICAgICAgICBvYmoucGFkZGluZyA9IHRoaXMuc2V0UHgodGhpcy5vcHRpb24ucGFkZGluZykKICAgICAgfQogICAgICByZXR1cm4gb2JqCiAgICB9LAogICAgc3R5bGVOYW1lICgpIHsKICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oCiAgICAgICAgKCgpID0+IHsKICAgICAgICAgIGxldCBvYmogPSB7fQogICAgICAgICAgaWYgKHRoaXMub3B0aW9uLnNwbGl0eCkgewogICAgICAgICAgICBvYmoubWFyZ2luUmlnaHQgPSB0aGlzLnNldFB4KHRoaXMub3B0aW9uLnNwbGl0eCkKICAgICAgICAgIH0KICAgICAgICAgIGlmICh0aGlzLm9wdGlvbi5zcGxpdHkpIHsKICAgICAgICAgICAgb2JqLm1hcmdpbkJvdHRvbSA9IHRoaXMuc2V0UHgodGhpcy5vcHRpb24uc3BsaXR5KQogICAgICAgICAgfQogICAgICAgICAgaWYgKHRoaXMub3B0aW9uLmJhY2tncm91bmRJbWFnZSkgewogICAgICAgICAgICBvYmogPSBPYmplY3QuYXNzaWduKG9iaiwgewogICAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybCgke3RoaXMub3B0aW9uLmJhY2tncm91bmRJbWFnZX0pYCwKICAgICAgICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogIjEwMCUgMTAwJSIKICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBvYmo7CiAgICAgICAgfSkoKSwKICAgICAgICB7CiAgICAgICAgICB0ZXh0QWxpZ246IHRoaXMub3B0aW9uLnRleHRBbGlnbiwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5vcHRpb24uYmFja2dyb3VuZENvbG9yLAogICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLmNvbG9yIHx8ICIjZmZmIiwKICAgICAgICAgIGZvbnRTaXplOiB0aGlzLnNldFB4KHRoaXMub3B0aW9uLmZvbnRTaXplIHx8IDY0KSwKICAgICAgICAgIGZvbnRXZWlnaHQ6IHRoaXMub3B0aW9uLmZvbnRXZWlnaHQKICAgICAgICB9LAogICAgICAgICgoKSA9PiB7CiAgICAgICAgICBpZiAodGhpcy50eXBlID09PSAiaW1nIikgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIGJvcmRlckltYWdlU291cmNlOiBgdXJsKCR7dGhpcy5vcHRpb24uYmFja2dyb3VuZEJvcmRlcn0pYAogICAgICAgICAgICB9OwogICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT09ICJib3JkZXIiKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IHRoaXMub3B0aW9uLmJvcmRlckNvbG9yIHx8ICIjZmZmIiwKICAgICAgICAgICAgICBib3JkZXJTdHlsZTogInNvbGlkIiwKICAgICAgICAgICAgICBib3JkZXJXaWR0aDogdGhpcy5zZXRQeCh0aGlzLm9wdGlvbi5ib3JkZXJXaWR0aCkKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICB9KSgpCiAgICAgICk7CiAgICB9CiAgfSwKICBwcm9wczogewogICAgb3B0aW9uOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7IH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2xpY2sgKGl0ZW0sIGluZGV4KSB7CiAgICAgIHRoaXMuYWN0aXZlID0gaW5kZXg7CiAgICAgIHRoaXMudXBkYXRlQ2xpY2soewogICAgICAgIHZhbHVlOiBpdGVtLnByZWZpeFRleHQKICAgICAgfSk7CiAgICAgIHRoaXMuY2xpY2tGb3JtYXR0ZXIgJiYgdGhpcy5jbGlja0Zvcm1hdHRlcih7CiAgICAgICAgdHlwZTogaW5kZXgsCiAgICAgICAgaXRlbTogaXRlbSwKICAgICAgICB2YWx1ZTogaXRlbS5wcmVmaXhUZXh0LAogICAgICAgIGRhdGE6IHRoaXMuZGF0YUNoYXJ0CiAgICAgIH0sIHRoaXMuZ2V0SXRlbVJlZnMoKSk7CiAgICAgIGlmIChpdGVtLmhyZWYpIHdpbmRvdy5vcGVuKGl0ZW0uaHJlZiwgaXRlbS50YXJnZXQpCiAgICB9LAogICAgZ2V0RW1wU3R5bGUgKGluZGV4KSB7CiAgICAgIGxldCByZXN1bHQgPSB7fQogICAgICBpZiAoaW5kZXggPT0gdGhpcy5hY3RpdmUpIHsKICAgICAgICByZXN1bHQgPSB7CiAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24uZW1wQ29sb3IKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdAogICAgfSwKICAgIGdldFZhbEJ5QXJyYXkgKGl0ZW0sIHByb3ApIHsKICAgICAgcmV0dXJuIHRoaXMuaXNBcnJheSA/IGl0ZW1bcHJvcF0gOiB0aGlzLm9wdGlvbltwcm9wXTsKICAgIH0KICB9Cn0pOwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAifile":"index.vue","sourceRoot":"src/echart/packages/flop","sourcesContent":["<template>\n  <div :class=\"[b(),className]\"\n       :style=\"styleSizeName\">\n    <div :style=\"styleChartName\">\n      <template v-for=\"(item,index) in listData\">\n        <div :key=\"index\"\n             v-if=\"item.display!==false\"\n             :style=\"styleParentSize\">\n          <el-tooltip :disabled=\"!item.formatter\"\n                      placement=\"top-start\"\n                      :style=\"[styleParentName,{\n               backgroundColor: item.backgroundColor || option.backgroundColor,\n           },getEmpStyle(index)]\">\n            <div slot=\"content\"\n                 v-html=\"item.formatter && item.formatter()\"></div>\n            <div :class=\"b('item',{'none':(statusDIC.includes(item) || type===''),'whole':isWhole,'img':isWhole&&(isImg || isBorder)})\"\n                 :style=\"!isWhole?'':styleName\"\n                 @click=\"handleClick(item,index)\">\n              <div :style=\"[prefixStyle,getEmpStyle(index)]\"\n                   v-if=\"getValByArray(item,'prefixText')\">{{getValByArray(item,'prefixText')}}</div>\n              <avue-count-up v-if=\"isWhole\"\n                             :decimals=\"decimals\"\n                             :end=\"item.data || item.value\"></avue-count-up>\n              <div :class=\"[b('count'),b(`count-${option.textAlign}`)]\"\n                   :style=\"styleSizeName\"\n                   v-else>\n                <div :class=\"b('item',{'none':(statusDIC.includes(item) || type===''),'img':isImg})\"\n                     v-for=\"(item,index) in (item.data || item.value)+''.split(',')\"\n                     :key=\"index\"\n                     @click=\"handleClick(item,index)\"\n                     :style=\"styleName\">\n                  <div v-if=\"statusDIC.includes(item)\">{{item}}</div>\n                  <avue-count-up :decimals=\"decimals\"\n                                 v-else\n                                 :end=\"item\"></avue-count-up>\n                </div>\n              </div>\n              <div :style=\"[suffixStyle,getEmpStyle(index)]\"\n                   v-if=\"getValByArray(item,'suffixText')\">{{getValByArray(item,'suffixText')}}</div>\n            </div>\n          </el-tooltip>\n        </div>\n      </template>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport create from \"../../create\";\nexport default create({\n  name: \"flop\",\n  data () {\n    return {\n      active: 0,\n      statusDIC: [\".\", \",\"]\n    };\n  },\n  computed: {\n    isArray () {\n      return Array.isArray(this.dataChart);\n    },\n    decimals () {\n      return this.option.decimals || 0\n    },\n    listData () {\n      if (this.isArray) {\n        return this.dataChart;\n      } else {\n        return [this.dataChart];\n      }\n    },\n    isWhole () {\n      return this.vaildData(this.option.whole, false);\n    },\n    type () {\n      return this.option.type;\n    },\n    isBorder () {\n      return this.type === 'border';\n    },\n    isImg () {\n      return this.type === 'img';\n    },\n    span () {\n      return this.option.span || 1;\n    },\n    prefixStyle () {\n      return {\n        display: this.option.prefixInline ? 'inline-block' : 'block',\n        textAlign: this.option.prefixTextAlign,\n        marginBottom: this.setPx(this.option.prefixSplity),\n        marginRight: this.setPx(this.option.prefixSplitx),\n        color: this.option.prefixColor || \"#fff\",\n        fontSize: this.setPx(this.option.prefixFontSize || 24)\n      };\n    },\n    suffixStyle () {\n      return {\n        display: this.option.suffixInline ? 'inline-block' : 'block',\n        textAlign: this.option.suffixTextAlign,\n        marginTop: this.setPx(this.option.suffixSplity),\n        marginLeft: this.setPx(this.option.suffixSplitx),\n        color: this.option.suffixColor || \"#fff\",\n        fontSize: this.setPx(this.option.suffixFontSize || 24)\n      };\n    },\n    styleParentSize () {\n      let obj = {\n        boxSizing: 'border-box',\n        display: 'inline-block',\n        width: (100 / this.span) - 1 + '%'\n      }\n      if (this.option.splitx) {\n        obj.paddingRight = this.setPx(this.option.splitx)\n      }\n      if (this.option.splity) {\n        obj.paddingBottom = this.setPx(this.option.splity)\n      }\n      return obj\n    },\n    styleParentName () {\n      let obj = {};\n      if (!this.isImg && !this.isBorder) {\n        obj = Object.assign(obj, {\n          backgroundImage: `url(${this.option.backgroundImage})`,\n          backgroundColor: this.option.backgroundColor\n        });\n      }\n      if (this.option.padding) {\n        obj.padding = this.setPx(this.option.padding)\n      }\n      return obj\n    },\n    styleName () {\n      return Object.assign(\n        (() => {\n          let obj = {}\n          if (this.option.splitx) {\n            obj.marginRight = this.setPx(this.option.splitx)\n          }\n          if (this.option.splity) {\n            obj.marginBottom = this.setPx(this.option.splity)\n          }\n          if (this.option.backgroundImage) {\n            obj = Object.assign(obj, {\n              backgroundImage: `url(${this.option.backgroundImage})`,\n              backgroundSize: \"100% 100%\"\n            })\n          }\n          return obj;\n        })(),\n        {\n          textAlign: this.option.textAlign,\n          backgroundColor: this.option.backgroundColor,\n          color: this.option.color || \"#fff\",\n          fontSize: this.setPx(this.option.fontSize || 64),\n          fontWeight: this.option.fontWeight\n        },\n        (() => {\n          if (this.type === \"img\") {\n            return {\n              borderImageSource: `url(${this.option.backgroundBorder})`\n            };\n          } else if (this.type === \"border\") {\n            return {\n              borderColor: this.option.borderColor || \"#fff\",\n              borderStyle: \"solid\",\n              borderWidth: this.setPx(this.option.borderWidth)\n            };\n          }\n        })()\n      );\n    }\n  },\n  props: {\n    option: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  created () { },\n  methods: {\n    handleClick (item, index) {\n      this.active = index;\n      this.updateClick({\n        value: item.prefixText\n      });\n      this.clickFormatter && this.clickFormatter({\n        type: index,\n        item: item,\n        value: item.prefixText,\n        data: this.dataChart\n      }, this.getItemRefs());\n      if (item.href) window.open(item.href, item.target)\n    },\n    getEmpStyle (index) {\n      let result = {}\n      if (index == this.active) {\n        result = {\n          color: this.option.empColor\n        }\n      }\n      return result\n    },\n    getValByArray (item, prop) {\n      return this.isArray ? item[prop] : this.option[prop];\n    }\n  }\n});\n</script>"]}]}