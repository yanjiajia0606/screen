{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/result.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/result.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBNb25hY29FZGl0b3IgZnJvbSAnQC9wYWdlL2NvbXBvbmVudHMvZWRpdG9yJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBNb25hY29FZGl0b3IgfSwKICBpbmplY3Q6IFsiY29udGFpbiJdLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvdzogZmFsc2UsCiAgICAgIGpzb246IHt9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvcGVuICgpIHsKICAgICAgdGhpcy5qc29uID0gewogICAgICAgIGRldGFpbDogdGhpcy5jb250YWluLmNvbmZpZywKICAgICAgICBjb21wb25lbnQ6IHRoaXMuY29udGFpbi5uYXYKICAgICAgfQogICAgfSwKICAgIGltcG9ydERhdGEgKCkgewogICAgICB0cnkgewogICAgICAgIGxldCBqc29uID0gSlNPTi5wYXJzZSh0aGlzLmpzb24pCiAgICAgICAgdGhpcy5jb250YWluLmNvbmZpZyA9IGpzb24uZGV0YWlsCiAgICAgICAgdGhpcy5jb250YWluLm5hdiA9IGpzb24uY29tcG9uZW50CiAgICAgICAgdGhpcy5zaG93ID0gZmFsc2U7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlbDmja7lr7zlhaXmiJDlip8nKQogICAgICB9IGNhdGNoIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflr7zlhaXmlbDmja7plJnor68nKQogICAgICB9CiAgICB9LAogICAgZXhwb3J0RGF0YSAoKSB7CiAgICAgIHZhciB6aXAgPSBuZXcgd2luZG93LkpTWmlwKCk7CiAgICAgIHppcC5maWxlKCJkYXRhLnR4dCIsIHRoaXMuanNvbik7CiAgICAgIHppcC5nZW5lcmF0ZUFzeW5jKHsgdHlwZTogImJhc2U2NCIgfSkKICAgICAgICAudGhlbigoY29udGVudCkgPT4gewogICAgICAgICAgdGhpcy5kb3duRmlsZSgiZGF0YTphcHBsaWNhdGlvbi96aXA7YmFzZTY0LCIgKyBjb250ZW50LCAnZGF0YS56aXAnKQogICAgICAgIH0pOwogICAgfQogIH0KfQo="},{"version":3,"sources":["result.vue"],"names":[],"mappings":";AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"result.vue","sourceRoot":"src/page/group","sourcesContent":["<template>\n  <el-dialog append-to-body\n             @open=\"open\"\n             title=\"导入导出\"\n             :close-on-click-modal=\"false\"\n             :visible.sync=\"show\"\n             width=\"60%\">\n    <monaco-editor v-model=\"json\"></monaco-editor>\n    <span slot=\"footer\"\n          class=\"dialog-footer\">\n      <el-button @click=\"importData\"\n                 size=\"small\"\n                 type=\"primary\">导入数据</el-button>\n      <el-button @click=\"exportData\"\n                 size=\"small\"\n                 type=\"danger\">导出数据</el-button>\n    </span>\n\n  </el-dialog>\n\n</template>\n\n<script>\nimport MonacoEditor from '@/page/components/editor'\nexport default {\n  components: { MonacoEditor },\n  inject: [\"contain\"],\n  data () {\n    return {\n      show: false,\n      json: {}\n    }\n  },\n  methods: {\n    open () {\n      this.json = {\n        detail: this.contain.config,\n        component: this.contain.nav\n      }\n    },\n    importData () {\n      try {\n        let json = JSON.parse(this.json)\n        this.contain.config = json.detail\n        this.contain.nav = json.component\n        this.show = false;\n        this.$message.success('数据导入成功')\n      } catch {\n        this.$message.error('导入数据错误')\n      }\n    },\n    exportData () {\n      var zip = new window.JSZip();\n      zip.file(\"data.txt\", this.json);\n      zip.generateAsync({ type: \"base64\" })\n        .then((content) => {\n          this.downFile(\"data:application/zip;base64,\" + content, 'data.zip')\n        });\n    }\n  }\n}\n</script>\n\n<style>\n</style>"]}]}