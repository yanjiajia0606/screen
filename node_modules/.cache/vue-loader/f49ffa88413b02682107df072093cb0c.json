{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/map/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/map/index.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/echart/packages/map","sourcesContent":["<template>\n  <div :class=\"[b(),className]\"\n       :style=\"styleSizeName\">\n    <div :ref=\"id\"\n         :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from \"../../create\";\nexport default create({\n  name: \"map\",\n  data () {\n    return {\n      bannerCount: 0,\n      bannerCheck: \"\",\n      centerData: [],\n      zoomData: 1\n    };\n  },\n  watch: {\n    mapData () {\n      this.updateChart();\n    },\n    dataChartLen () {\n      this.setBanner();\n    },\n    bannerTime () {\n      this.setBanner();\n    },\n    banner: {\n      handler () {\n        this.setBanner();\n      },\n      immediate: true\n    },\n    width () {\n      this.updateData();\n    },\n    height () {\n      this.updateData();\n    },\n    zoom: {\n      handler () {\n        this.zoomData = this.zoom;\n      },\n      immediate: true\n    },\n  },\n  computed: {\n    zoomShow () {\n      return this.option.zoomShow || 1;\n    },\n    zoom () {\n      return this.option.zoom || 1;\n    },\n    mapData () {\n      return this.option.mapData || {};\n    },\n    borderWidth () {\n      return this.option.borderWidth || 3;\n    },\n    borderColor () {\n      return this.option.borderColor || \"#389BB7\";\n    },\n    areaColor () {\n      return this.option.areaColor || \"#0c162f\";\n    },\n    empColor () {\n      return this.option.empColor || \"#fff\";\n    },\n    empAreaColor () {\n      return this.option.empAreaColor || \"yellow\";\n    },\n    color () {\n      return this.option.color || \"#fff\";\n    },\n    roam () {\n      return this.vaildData(this.option.roam, true)\n    },\n    fontSize () {\n      return this.option.fontSize || 24;\n    },\n    bannerTime () {\n      return this.option.bannerTime || 3000;\n    },\n    banner () {\n      return this.option.banner;\n    },\n    locationData () {\n      return (this.dataChart || []).map(ele => {\n        ele.zoom = ele.zoom || 1;\n        const zoomData = this.zoomData < 1 ? 1 : this.zoomData;\n        return Object.assign(\n          (() => {\n            if (ele.zoom <= zoomData) {\n              return {\n                name: ele.name\n              };\n            }\n            return {};\n          })(),\n          {\n            value: [ele.lng, ele.lat, ele.value]\n          }\n        );\n      });\n    }\n  },\n  methods: {\n    resetBanner () {\n      this.$nextTick(() => {\n        this.myChart.dispatchAction({\n          type: \"hideTip\"\n        });\n        // this.myChart.dispatchAction({\n        //   type: \"downplay\"\n        // });\n      });\n    },\n    setBanner () {\n      clearInterval(this.bannerCheck);\n      if (this.banner) {\n        this.bannerCheck = setInterval(() => {\n          const curr = this.bannerCount % this.dataChartLen;\n          this.myChart.dispatchAction({\n            type: \"showTip\",\n            seriesIndex: \"0\",\n            dataIndex: curr\n          });\n          this.myChart.dispatchAction({\n            type: \"downplay\"\n          });\n          this.myChart.dispatchAction({\n            type: \"highlight\",\n            dataIndex: curr\n          });\n          this.bannerCount += 1;\n        }, this.bannerTime);\n      }\n    },\n    updateChart () {\n      this.$axios(this.mapData).then(res => {\n        const data = res.data;\n        const optionData = this.deepClone(data);\n        window.echarts.registerMap(\"HK\", optionData);\n        const option = {\n          tooltip: (() => {\n            return Object.assign(\n              (() => {\n                if (this.formatter) {\n                  return {\n                    formatter: name => {\n                      return this.formatter(name, this.dataChart);\n                    }\n                  };\n                }\n                return {};\n              })(),\n              {\n                backgroundColor: this.option.tipBackgroundColor,\n                textStyle: {\n                  fontSize: this.option.tipFontSize,\n                  color: this.option.tipColor\n                }\n              }\n            );\n          })(),\n          geo: Object.assign(\n            (() => {\n              if (!this.validatenull(this.centerData)) {\n                return {\n                  center: this.centerData\n                };\n              }\n              return {};\n            })(),\n            {\n              map: \"HK\",\n              label: {\n                emphasis: {\n                  show: false\n                }\n              },\n              zoom: this.zoomData,\n              layoutCenter: [\"50%\", \"50%\"],\n              layoutSize: 1200,\n              roam: this.roam,\n              label: {\n                show: true,\n                fontSize: this.fontSize,\n                color: this.color\n              },\n              left: this.option.gridX,\n              top: this.option.gridY,\n              right: this.option.gridX2,\n              bottom: this.option.gridY2,\n              emphasis: {\n                label: {\n                  color: this.empColor\n                },\n                itemStyle: {\n                  areaColor: this.empAreaColor\n                }\n              },\n              itemStyle: {\n                borderWidth: this.borderWidth,\n                borderColor: this.borderColor,\n                areaColor: this.areaColor\n              }\n            }\n          ),\n          series: [\n            {\n              type: \"effectScatter\",\n              coordinateSystem: \"geo\",\n              showEffectOn: \"emphasis\",\n              rippleEffect: {\n                brushType: \"fill\",\n                scale: 4\n              },\n              symbolSize: this.fontSize,\n              hoverAnimation: true,\n              data: this.locationData,\n              label: {\n                show: true,\n                position: [\"130%\", \"0\"],\n                fontSize: this.fontSize,\n                color: this.color,\n                formatter: params => {\n                  return params.name;\n                }\n              },\n              itemStyle: {\n                color: this.color\n              },\n              emphasis: {\n                label: {\n                  show: true,\n                  fontSize: this.fontSize + 20,\n                  color: this.option.empColor\n                },\n                itemStyle: {\n                  color: this.option.empColor\n                }\n              }\n            }\n          ]\n        };\n        this.myChart.off(\"mouseover\");\n        this.myChart.off(\"mouseout\");\n        this.myChart.off(\"georoam\");\n\n        this.myChart.on(\"mouseover\", () => {\n          clearInterval(this.bannerCheck);\n          this.resetBanner();\n        });\n        this.myChart.on(\"mouseout\", () => {\n          this.bannerCount = 0;\n          this.setBanner();\n        });\n        this.myChart.on(\"georoam\", e => {\n          const option = this.myChart.getOption();\n          const geo = option.geo[0];\n          this.centerData = geo.center;\n          this.zoomData = geo.zoom;\n          if (this.zoomData < 1) this.zoomData = 1;\n        });\n\n        this.myChart.resize();\n        this.myChart.setOption(option, true);\n      })\n\n    }\n  }\n});\n</script>\n\n\n\n"]}]}