{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/build.vue?vue&type=template&id=348055b4&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/build.vue","mtime":1668498779346},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}