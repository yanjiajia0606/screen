{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/contentmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/contentmenu.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGNyZWF0ZUZpbGUsIHV1aWQgfSBmcm9tICdAL3V0aWxzL3V0aWxzJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2NvbnRlbnRtZW51JywKICBpbmplY3Q6IFsiY29udGFpbiJdLAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVN0ZXBCb3R0b20gKCkgewogICAgICB0aGlzLmhhbmRsZUNvbW1vbihmYWxzZSwgdHJ1ZSk7CiAgICB9LAogICAgaGFuZGxlU3RlcFRvcCAoKSB7CiAgICAgIHRoaXMuaGFuZGxlQ29tbW9uKHRydWUsIHRydWUpOwogICAgfSwKICAgIC8v5paH5Lu25aS55oiQ57uE6YC76L6RCiAgICBoYW5kbGVDb21wb3NlICgpIHsKICAgICAgdGhpcy4kY29uZmlybShg5piv5ZCm57uE5ZCI5omA6YCJ5oup55qE5Zu+5bGCP2AsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICBsZXQgZm9sZGVyID0gY3JlYXRlRmlsZSgpCiAgICAgICAgdGhpcy5jb250YWluLmFjdGl2ZS5mb3JFYWNoKGVsZSA9PiB7CiAgICAgICAgICBsZXQgeyBpdGVtTGlzdCwgaXRlbUluZGV4IH0gPSB0aGlzLmNvbnRhaW4uZmluZG5hdihlbGUpOwogICAgICAgICAgbGV0IG9iaiA9IGl0ZW1MaXN0LnNwbGljZShpdGVtSW5kZXgsIDEpWzBdOwogICAgICAgICAgZm9sZGVyLmNoaWxkcmVuLnB1c2gob2JqKTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmNvbnRhaW4ubmF2LnVuc2hpZnQoZm9sZGVyKTsKICAgICAgICB0aGlzLmNvbnRhaW4uaGFuZGxlSW5pdEFjdGl2ZSgpOwogICAgICB9KS5jYXRjaCgoKSA9PiB7IH0pCiAgICB9LAogICAgLy/mlofku7blpLnop6PmlaPpgLvovpEKICAgIGhhbmRsZUxvZ291dCAoKSB7CiAgICAgIGxldCBlbGUgPSB0aGlzLmNvbnRhaW4uYWN0aXZlT2JqCiAgICAgIHRoaXMuJGNvbmZpcm0oYOaYr+WQpuino+aVoyR7ZWxlLm5hbWV95Zu+5bGCP2AsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICBsZXQgeyBpdGVtTGlzdCwgaXRlbUluZGV4IH0gPSB0aGlzLmNvbnRhaW4uZmluZG5hdihlbGUuaW5kZXgpOwogICAgICAgIGNvbnN0IGxpc3QgPSB0aGlzLmRlZXBDbG9uZShlbGUuY2hpbGRyZW4pCiAgICAgICAgaXRlbUxpc3Quc3BsaWNlKGl0ZW1JbmRleCwgMSk7CiAgICAgICAgbGlzdC5mb3JFYWNoKGl0ZW0gPT4gaXRlbUxpc3QucHVzaChpdGVtKSk7CiAgICAgICAgdGhpcy5jb250YWluLmhhbmRsZUluaXRBY3RpdmUoKTsKICAgICAgfSkuY2F0Y2goKCkgPT4geyB9KQogICAgfSwKICAgIC8v5Yig6Zmk57uE5Lu255qE5pa55rOVCiAgICBoYW5kbGVEZWwgKCkgewogICAgICB0aGlzLiRjb25maXJtKGDmmK/lkKbliKDpmaTmiYDpgInlm77lsYI/YCwgJ+aPkOekuicsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMuY29udGFpbi5hY3RpdmUuZm9yRWFjaChlbGUgPT4gewogICAgICAgICAgY29uc3QgeyBpdGVtTGlzdCwgaXRlbUluZGV4IH0gPSB0aGlzLmNvbnRhaW4uZmluZG5hdihlbGUpOwogICAgICAgICAgaXRlbUxpc3Quc3BsaWNlKGl0ZW1JbmRleCwgMSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5jb250YWluLmhhbmRsZUluaXRBY3RpdmUoKTsKICAgICAgfSkuY2F0Y2goKCkgPT4geyB9KQogICAgfSwKICAgIC8v5aSN5Yi257uE5Lu255qE5pa55rOVCiAgICBoYW5kbGVDb3B5ICgpIHsKICAgICAgLy/lr7vmib7niLbnsbsKICAgICAgdGhpcy5jb250YWluLmFjdGl2ZS5mb3JFYWNoKGVsZSA9PiB7CiAgICAgICAgY29uc3QgeyBpdGVtLCBpdGVtTGlzdCB9ID0gdGhpcy5jb250YWluLmZpbmRuYXYoZWxlKTsKICAgICAgICBsZXQgb2JqID0gdGhpcy5kZWVwQ2xvbmUoaXRlbSk7CiAgICAgICAgbGV0IGluZGV4ID0gdXVpZCgpOwogICAgICAgIG9iai5uYW1lID0gb2JqLm5hbWUgKyAn77yI5aSN5Yi277yJJwogICAgICAgIG9iai5pbmRleCA9IGluZGV4OwogICAgICAgIGlmIChvYmouY2hpbGRyZW4pIHsKICAgICAgICAgIG9iai5tZW51ID0gZmFsc2UKICAgICAgICAgIG9iai5jaGlsZHJlbi5mb3JFYWNoKGVsZSA9PiBlbGUuaW5kZXggPSB1dWlkKCkpCiAgICAgICAgfQogICAgICAgIGl0ZW1MaXN0LnVuc2hpZnQob2JqKQogICAgICB9KTsKICAgICAgdGhpcy5jb250YWluLmhhbmRsZUluaXRBY3RpdmUoKTsKICAgIH0sCiAgICAvLyDlm77lsYLnmoTkuIrkuIvnp7vliqjmlrnms5UgCiAgICBoYW5kbGVDb21tb24gKHRvcCA9IGZhbHNlLCBzdGVwID0gZmFsc2UpIHsKICAgICAgdGhpcy5jb250YWluLmFjdGl2ZS5mb3JFYWNoKGVsZSA9PiB7CiAgICAgICAgbGV0IHsgaXRlbUxpc3QsIGl0ZW1JbmRleCB9ID0gdGhpcy5jb250YWluLmZpbmRuYXYoZWxlKTsKICAgICAgICBsZXQgb2JqID0gaXRlbUxpc3Quc3BsaWNlKGl0ZW1JbmRleCwgMSlbMF07CiAgICAgICAgaWYgKHN0ZXApIHsKICAgICAgICAgIGl0ZW1MaXN0LnNwbGljZSh0b3AgPyAoaXRlbUluZGV4IC0gMSkgOiAoaXRlbUluZGV4ICsgMSksIDAsIG9iaikKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaXRlbUxpc3RbdG9wID8gJ3Vuc2hpZnQnIDogJ3B1c2gnXShvYmopCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVRvcCAoKSB7CiAgICAgIHRoaXMuaGFuZGxlQ29tbW9uKHRydWUpOwogICAgfSwKICAgIGhhbmRsZUJvdHRvbSAoKSB7CiAgICAgIHRoaXMuaGFuZGxlQ29tbW9uKCk7CiAgICB9LAogICAgaGFuZGxlTG9jayAoKSB7CiAgICAgIHRoaXMuY29udGFpbi5hY3RpdmUuZm9yRWFjaChlbGUgPT4gewogICAgICAgIGxldCB7IGl0ZW0gfSA9IHRoaXMuY29udGFpbi5maW5kbmF2KGVsZSkKICAgICAgICBpdGVtLmxvY2sgPSAhaXRlbS5sb2NrOwogICAgICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7CiAgICAgICAgICBpdGVtLmNoaWxkcmVuLmZvckVhY2goZSA9PiB7CiAgICAgICAgICAgIGUubG9jayA9IGl0ZW0ubG9jawogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICAgIHRoaXMuY29udGFpbi5hY3RpdmUgPSBbXQogICAgfQogIH0KfQo="},{"version":3,"sources":["contentmenu.vue"],"names":[],"mappings":";AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"contentmenu.vue","sourceRoot":"src/page/group","sourcesContent":["<template>\n  <div class=\"contentmenu\"\n       id=\"avue-data-menu\">\n    <div class=\"contentmenu__item\"\n         @click=\"handleLock()\"> <i class=\"el-icon-lock\"></i>\n      {{contain.activeObj.lock?'解锁':'锁定'}}\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"contain.isFolder?handleLogout():handleCompose()\"> <i class=\"el-icon-document-copy\"></i>\n      {{contain.isFolder?'解散':'组合'}}\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleDel()\"> <i class=\"el-icon-delete\"></i>\n      删除\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleCopy()\"><i class=\"el-icon-money\"></i>\n      复制\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleTop()\"><i class=\"el-icon-arrow-up\"></i>置顶\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleBottom()\"><i class=\"el-icon-arrow-down\"></i>置底\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleStepTop()\"><i class=\"el-icon-arrow-up\"></i>上移\n    </div>\n    <div class=\"contentmenu__item\"\n         @click=\"handleStepBottom()\"><i class=\"el-icon-arrow-down\"></i>下移\n    </div>\n  </div>\n</template>\n\n<script>\nimport { createFile, uuid } from '@/utils/utils'\nexport default {\n  name: 'contentmenu',\n  inject: [\"contain\"],\n  methods: {\n    handleStepBottom () {\n      this.handleCommon(false, true);\n    },\n    handleStepTop () {\n      this.handleCommon(true, true);\n    },\n    //文件夹成组逻辑\n    handleCompose () {\n      this.$confirm(`是否组合所选择的图层?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let folder = createFile()\n        this.contain.active.forEach(ele => {\n          let { itemList, itemIndex } = this.contain.findnav(ele);\n          let obj = itemList.splice(itemIndex, 1)[0];\n          folder.children.push(obj);\n        });\n        this.contain.nav.unshift(folder);\n        this.contain.handleInitActive();\n      }).catch(() => { })\n    },\n    //文件夹解散逻辑\n    handleLogout () {\n      let ele = this.contain.activeObj\n      this.$confirm(`是否解散${ele.name}图层?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let { itemList, itemIndex } = this.contain.findnav(ele.index);\n        const list = this.deepClone(ele.children)\n        itemList.splice(itemIndex, 1);\n        list.forEach(item => itemList.push(item));\n        this.contain.handleInitActive();\n      }).catch(() => { })\n    },\n    //删除组件的方法\n    handleDel () {\n      this.$confirm(`是否删除所选图层?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.contain.active.forEach(ele => {\n          const { itemList, itemIndex } = this.contain.findnav(ele);\n          itemList.splice(itemIndex, 1);\n        });\n        this.contain.handleInitActive();\n      }).catch(() => { })\n    },\n    //复制组件的方法\n    handleCopy () {\n      //寻找父类\n      this.contain.active.forEach(ele => {\n        const { item, itemList } = this.contain.findnav(ele);\n        let obj = this.deepClone(item);\n        let index = uuid();\n        obj.name = obj.name + '（复制）'\n        obj.index = index;\n        if (obj.children) {\n          obj.menu = false\n          obj.children.forEach(ele => ele.index = uuid())\n        }\n        itemList.unshift(obj)\n      });\n      this.contain.handleInitActive();\n    },\n    // 图层的上下移动方法 \n    handleCommon (top = false, step = false) {\n      this.contain.active.forEach(ele => {\n        let { itemList, itemIndex } = this.contain.findnav(ele);\n        let obj = itemList.splice(itemIndex, 1)[0];\n        if (step) {\n          itemList.splice(top ? (itemIndex - 1) : (itemIndex + 1), 0, obj)\n        } else {\n          itemList[top ? 'unshift' : 'push'](obj)\n        }\n      })\n    },\n    handleTop () {\n      this.handleCommon(true);\n    },\n    handleBottom () {\n      this.handleCommon();\n    },\n    handleLock () {\n      this.contain.active.forEach(ele => {\n        let { item } = this.contain.findnav(ele)\n        item.lock = !item.lock;\n        if (item.children) {\n          item.children.forEach(e => {\n            e.lock = item.lock\n          })\n        }\n      })\n      this.contain.active = []\n    }\n  }\n}\n</script>\n\n<style>\n.contentmenu {\n  width: 180px;\n  display: none;\n  z-index: 99999;\n  list-style: none;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  padding: 0;\n  background: #232324;\n  overflow: hidden;\n  color: rgba(255, 255, 255, 0.82);\n  border-radius: 10px;\n}\n.contentmenu__item {\n  z-index: 10000;\n  list-style: none;\n  padding: 6px 12px;\n  cursor: pointer;\n  position: relative;\n  font-size: 14px;\n}\n.contentmenu__item:hover {\n  background-color: rgba(0, 192, 222, 0.1);\n}\n.contentmenu__item i {\n  margin-right: 5px;\n}\n.contentmenu__item :first-child {\n  padding-top: 5px;\n}\n</style>"]}]}