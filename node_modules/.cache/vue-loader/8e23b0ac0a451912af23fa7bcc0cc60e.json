{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/echart/packages/bar/index.vue","mtime":1671169883795},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBjcmVhdGUgZnJvbSAnLi4vLi4vY3JlYXRlJwoKZXhwb3J0IGRlZmF1bHQgY3JlYXRlKHsKICBuYW1lOiAnYmFyJywKICBtZXRob2RzOiB7CiAgICB1cGRhdGVDaGFydCgpIHsKICAgICAgY29uc3Qgb3B0aW9uRGF0YSA9IHRoaXMuZGVlcENsb25lKHRoaXMuZGF0YUNoYXJ0KQogICAgICBpZiAoIUFycmF5LmlzQXJyYXkob3B0aW9uRGF0YSkpIHsKICAgICAgICByZXR1cm4gW10KICAgICAgfQogICAgICBsZXQgY2F0ZWdvcmllcyA9IG9wdGlvbkRhdGEubWFwKChpdGVtKSA9PiBpdGVtLm5hbWUpCiAgICAgIGNhdGVnb3JpZXMgPSBbLi4ubmV3IFNldChjYXRlZ29yaWVzKV0KICAgICAgbGV0IGRhdGEgPSBbXQogICAgICBpZiAob3B0aW9uRGF0YVswXSAmJiBvcHRpb25EYXRhWzBdLnR5cGUpIHsKICAgICAgICBvcHRpb25EYXRhLmZvckVhY2goKGl0ZW0pID0+IHsKICAgICAgICAgIGNvbnN0IHsgdHlwZSB9ID0gaXRlbQogICAgICAgICAgY29uc3QgZGF0YUl0ZW0gPSBkYXRhLmZpbmQoKGVsZSkgPT4gZWxlLm5hbWUgPT09IHR5cGUpCiAgICAgICAgICBpZiAoZGF0YUl0ZW0pIHsKICAgICAgICAgICAgZGF0YUl0ZW0uZGF0YS5wdXNoKGl0ZW0udmFsdWUpCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkYXRhLnB1c2goeyBuYW1lOiBpdGVtLnR5cGUsIGRhdGE6IFtpdGVtLnZhbHVlXSB9KQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgdmFsdWVzID0gb3B0aW9uRGF0YS5tYXAoKGl0ZW0pID0+IGl0ZW0udmFsdWUpCiAgICAgICAgZGF0YSA9IFt7IGRhdGE6IHZhbHVlcyB9XQogICAgICB9CgogICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHRoaXMuZ2V0T3B0aW9uVGl0bGUoKSwKICAgICAgICB0b29sdGlwOiB0aGlzLmdldE9wdGlvblRpcCh7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgfSksCiAgICAgICAgZ3JpZDogdGhpcy5nZXRPcHRpb25HcmlkKCksCiAgICAgICAgbGVnZW5kOiB0aGlzLmdldE9wdGlvbkxlZ2VuZCgpLAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBzaG93OiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi54QXhpc1Nob3csIHRydWUpLAogICAgICAgICAgdHlwZTogdGhpcy5vcHRpb24uY2F0ZWdvcnkgPyAndmFsdWUnIDogJ2NhdGVnb3J5JywKICAgICAgICAgIG5hbWU6IHRoaXMub3B0aW9uLnhBeGlzTmFtZSwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnhBeGlzQ29sb3IgfHwgJyNmZmYnLAogICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueEF4aXNGb250U2l6ZSB8fCAxNCwKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueEF4aXNMaW5lQ29sb3IgfHwgJyNmZmYnLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IGNhdGVnb3JpZXMgfHwgW10sCiAgICAgICAgICBpbnZlcnNlOiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi54QXhpc0ludmVyc2UsIGZhbHNlKSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi54QXhpc1NwbGl0TGluZVNob3csIGZhbHNlKSwKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgaW50ZXJ2YWw6IHRoaXMub3B0aW9uLnhBeGlzSW50ZXJ2YWwgfHwgJ2F1dG8nLAogICAgICAgICAgICByb3RhdGU6IHRoaXMub3B0aW9uLnhBeGlzUm90YXRlIHx8IDAsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi54QXhpc0NvbG9yIHx8ICcjZmZmJywKICAgICAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb24ueEF4aXNGb250U2l6ZSB8fCAxNCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgc2hvdzogdGhpcy52YWlsZERhdGEodGhpcy5vcHRpb24ueUF4aXNTaG93LCB0cnVlKSwKICAgICAgICAgIHR5cGU6IHRoaXMub3B0aW9uLmNhdGVnb3J5ID8gJ2NhdGVnb3J5JyA6ICd2YWx1ZScsCiAgICAgICAgICBuYW1lOiB0aGlzLm9wdGlvbi55QXhpc05hbWUsCiAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbi55QXhpc0NvbG9yIHx8ICcjZmZmJywKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnlBeGlzRm9udFNpemUgfHwgMTQsCiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogY2F0ZWdvcmllcyB8fCBbXSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb24ueUF4aXNDb2xvciB8fCAnI2ZmZicsCiAgICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9uLnlBeGlzRm9udFNpemUgfHwgMTQsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9uLnlBeGlzTGluZUNvbG9yIHx8ICcjZmZmJywKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBpbnZlcnNlOiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi55QXhpc0ludmVyc2UsIGZhbHNlKSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiB0aGlzLnZhaWxkRGF0YSh0aGlzLm9wdGlvbi55QXhpc1NwbGl0TGluZVNob3csIGZhbHNlKSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6ICgoKSA9PiB7CiAgICAgICAgICBjb25zdCBiYXJDb2xvciA9IHRoaXMub3B0aW9uLmJhckNvbG9yIHx8IFtdCiAgICAgICAgICBjb25zdCBsaXN0ID0gKGRhdGEgfHwgW10pLm1hcCgoZWxlLCBpbmRleCkgPT4gewogICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbGUsIHsKICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICBzdGFjazogZWxlLnN0YWNrLAogICAgICAgICAgICAgIGJhcldpZHRoOiB0aGlzLm9wdGlvbi5iYXJXaWR0aCB8fCAxNiwKICAgICAgICAgICAgICBiYXJNaW5IZWlnaHQ6IHRoaXMub3B0aW9uLmJhck1pbkhlaWdodCB8fCAwLAogICAgICAgICAgICAgIGl0ZW1TdHlsZTogdGhpcy5nZXRIYXNQcm9wKAogICAgICAgICAgICAgICAgIXRoaXMuc3dpdGNoVGhlbWUsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLmdldENvbG9yKGluZGV4KSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7IGJhckJvcmRlclJhZGl1czogdGhpcy5vcHRpb24uYmFyUmFkaXVzIHx8IDAgfQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgbGFiZWw6IHRoaXMuZ2V0T3B0aW9uTGFiZWwoewogICAgICAgICAgICAgICAgcG9zaXRpb246IHRoaXMub3B0aW9uLmNhdGVnb3J5ID8gJ3JpZ2h0JyA6ICd0b3AnLAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICB9KQogICAgICAgICAgfSkKICAgICAgICAgIHJldHVybiBsaXN0CiAgICAgICAgfSkoKSwKICAgICAgfQogICAgICB0aGlzLm15Q2hhcnQucmVzaXplKCkKICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb24sIHRydWUpCiAgICB9LAogIH0sCn0pCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/echart/packages/bar","sourcesContent":["<template>\n  <div :class=\"[b(), className]\" :style=\"styleSizeName\">\n    <div :ref=\"id\" :style=\"styleChartName\"></div>\n  </div>\n</template>\n\n<script>\nimport create from '../../create'\n\nexport default create({\n  name: 'bar',\n  methods: {\n    updateChart() {\n      const optionData = this.deepClone(this.dataChart)\n      if (!Array.isArray(optionData)) {\n        return []\n      }\n      let categories = optionData.map((item) => item.name)\n      categories = [...new Set(categories)]\n      let data = []\n      if (optionData[0] && optionData[0].type) {\n        optionData.forEach((item) => {\n          const { type } = item\n          const dataItem = data.find((ele) => ele.name === type)\n          if (dataItem) {\n            dataItem.data.push(item.value)\n          } else {\n            data.push({ name: item.type, data: [item.value] })\n          }\n        })\n      } else {\n        const values = optionData.map((item) => item.value)\n        data = [{ data: values }]\n      }\n\n      const option = {\n        title: this.getOptionTitle(),\n        tooltip: this.getOptionTip({\n          trigger: 'axis',\n        }),\n        grid: this.getOptionGrid(),\n        legend: this.getOptionLegend(),\n        xAxis: {\n          show: this.vaildData(this.option.xAxisShow, true),\n          type: this.option.category ? 'value' : 'category',\n          name: this.option.xAxisName,\n          nameTextStyle: {\n            color: this.option.xAxisColor || '#fff',\n            fontSize: this.option.xAxisFontSize || 14,\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.xAxisLineColor || '#fff',\n            },\n          },\n          data: categories || [],\n          inverse: this.vaildData(this.option.xAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.xAxisSplitLineShow, false),\n          },\n          axisLabel: {\n            interval: this.option.xAxisInterval || 'auto',\n            rotate: this.option.xAxisRotate || 0,\n            textStyle: {\n              color: this.option.xAxisColor || '#fff',\n              fontSize: this.option.xAxisFontSize || 14,\n            },\n          },\n        },\n        yAxis: {\n          show: this.vaildData(this.option.yAxisShow, true),\n          type: this.option.category ? 'category' : 'value',\n          name: this.option.yAxisName,\n          nameTextStyle: {\n            color: this.option.yAxisColor || '#fff',\n            fontSize: this.option.yAxisFontSize || 14,\n          },\n          data: categories || [],\n          axisLabel: {\n            textStyle: {\n              color: this.option.yAxisColor || '#fff',\n              fontSize: this.option.yAxisFontSize || 14,\n            },\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: this.option.yAxisLineColor || '#fff',\n            },\n          },\n          inverse: this.vaildData(this.option.yAxisInverse, false),\n          splitLine: {\n            show: this.vaildData(this.option.yAxisSplitLineShow, false),\n          },\n        },\n        series: (() => {\n          const barColor = this.option.barColor || []\n          const list = (data || []).map((ele, index) => {\n            return Object.assign(ele, {\n              type: 'bar',\n              stack: ele.stack,\n              barWidth: this.option.barWidth || 16,\n              barMinHeight: this.option.barMinHeight || 0,\n              itemStyle: this.getHasProp(\n                !this.switchTheme,\n                {\n                  color: this.getColor(index),\n                },\n                { barBorderRadius: this.option.barRadius || 0 }\n              ),\n              label: this.getOptionLabel({\n                position: this.option.category ? 'right' : 'top',\n              }),\n            })\n          })\n          return list\n        })(),\n      }\n      this.myChart.resize()\n      this.myChart.setOption(option, true)\n    },\n  },\n})\n</script>\n"]}]}