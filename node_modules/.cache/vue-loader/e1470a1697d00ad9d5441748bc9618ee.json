{"remainingRequest":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/code.vue?vue&type=style&index=0&id=19394c98&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/src/page/group/code.vue","mtime":1668271197000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjiajia/Desktop/workspace/avue-data-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250ZW50IHsKICBkaXNwbGF5OiBmbGV4OwogIC5tb25hY29fZWRpdG9yX2NvbnRhaW5lciB7CiAgICBmbGV4OiAxOwogICAgJjpmaXJzdC1jaGlsZCB7CiAgICAgIGZsZXg6IDI7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["code.vue"],"names":[],"mappings":";AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"code.vue","sourceRoot":"src/page/group","sourcesContent":["<template>\n  <el-dialog :visible.sync=\"visible\"\n             :close-on-click-modal=\"false\"\n             :before-close=\"handleClose\"\n             :title=\"title || '数据处理'\"\n             width=\"80%\">\n\n    <div class=\"content\">\n      <monaco-editor v-model=\"code\"></monaco-editor>\n      <monaco-editor v-model=\"tip\"\n                     disabled></monaco-editor>\n    </div>\n    <span slot=\"footer\"\n          class=\"dialog-footer\">\n      <el-button size=\"small\"\n                 @click=\"setVisible(false)\">取 消</el-button>\n      <el-button type=\"primary\"\n                 @click=\"submit\"\n                 size=\"small\">确 定</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { tip } from '@/config'\nimport { funEval } from '@/utils/utils'\nimport MonacoEditor from '@/page/components/editor'\nexport default {\n  components: { MonacoEditor },\n  data () {\n    return {\n      code: '',\n      tip: ''\n    }\n  },\n  props: {\n    rules: {\n      type: Boolean,\n      default: true\n    },\n    title: String,\n    visible: Boolean,\n    type: String,\n    value: [String, Object, Array]\n  },\n  watch: {\n    value: {\n      handler (val) {\n        if (this.validatenull(val)) {\n          if (['dataFormatter', 'stylesFormatter'].includes(this.type) && this.validatenull(val)) {\n            this.code = `(data,params,refs)=>{\n    return {}\n}`\n          } else if (['query', 'header', 'dataQuery', 'dataHeader'].includes(this.type) && this.validatenull(val)) {\n            this.code = `(data)=>{\n    return {}\n}`\n          } else if (['echartFormatter'].includes(this.type) && this.validatenull(val)) {\n            this.code = `(data)=>{\n    return {}\n}`\n          } else if (['clickFormatter'].includes(this.type) && this.validatenull(val)) {\n            this.code = `(params,refs)=>{\n    console.log(params,refs)\n}`\n          } else if (['labelFormatter', 'formatter'].includes(this.type) && this.validatenull(val)) {\n            this.code = `(name,data)=>{\n    console.log(name,data)\n    return ''\n}`\n          }\n        } else {\n          this.code = val;\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  created () {\n    this.tip = tip\n  },\n  methods: {\n    handleClose () {\n      this.setVisible(false);\n    },\n    submit () {\n      let value = this.code;\n      if (!this.rules) {\n        this.$emit('submit', value);\n        this.setVisible(false)\n        return\n      }\n      try {\n        funEval(value);\n        if (['data'].includes(this.type)) value = funEval(value);\n        this.$emit('submit', value);\n        this.setVisible(false)\n      } catch (error) {\n        console.log(error);\n        this.$message.error('数据格式有误')\n      }\n\n    },\n    setVisible (val) {\n      this.$emit('update:visible', val);\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.content {\n  display: flex;\n  .monaco_editor_container {\n    flex: 1;\n    &:first-child {\n      flex: 2;\n    }\n  }\n}\n</style>\n"]}]}